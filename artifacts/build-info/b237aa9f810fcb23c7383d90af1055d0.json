{
	"id": "b237aa9f810fcb23c7383d90af1055d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenShop.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport {AggregatorV3Interface} from \"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\";\r\nimport {MyERC20} from \"./MyERC20.sol\";\r\n\r\ncontract TokenShop is Ownable {\r\n\r\n    AggregatorV3Interface internal immutable i_priceFeed;\r\n    MyERC20 public immutable i_token;\r\n\r\n    uint256 public constant TOKEN_DECIMALS = 18;\r\n    uint256 public constant TOKEN_USD_PRICE = 2 * 10 ** TOKEN_DECIMALS; // 2 USD with 18 decimals\r\n\r\n    event BalanceWithdrawn();\r\n\r\n    error TokenShop__ZeroETHSent();\r\n    error TokenShop__CouldNotWithdraw();\r\n\r\n    constructor(address tokenAddress) Ownable(msg.sender) {\r\n        i_token = MyERC20(tokenAddress);\r\n        /**\r\n        * Network: Sepolia\r\n        * Aggregator: ETH/USD\r\n        * Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306\r\n        */\r\n        i_priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306);\r\n    }\r\n\r\n    /**\r\n    * Returns the latest answer\r\n    */\r\n    function getChainlinkDataFeedLatestAnswer() public view returns (int) {\r\n        (\r\n            /*uint80 roundID*/,\r\n            int price,\r\n            /*uint startedAt*/,\r\n            /*uint timeStamp*/,\r\n            /*uint80 answeredInRound*/\r\n        ) = i_priceFeed.latestRoundData();\r\n        return price;\r\n    }\r\n\r\n    function amountToMint(uint256 amountInETH) public view returns (uint256) {\r\n        // Sent amountETH, convert to USD amount\r\n        uint256 ethUsd = uint256(getChainlinkDataFeedLatestAnswer()) * 10 ** 10; // ETH/USD price with 8 decimal places -> 18 decimals\r\n        uint256 ethAmountInUSD = amountInETH * ethUsd / 10 ** 18; // ETH = 18 decimals\r\n        return (ethAmountInUSD * 10 ** TOKEN_DECIMALS) / TOKEN_USD_PRICE; // * 10 ** TOKEN_DECIMALS since tokenAmount needs to be in TOKEN_DECIMALS\r\n    }\r\n\r\n    receive() external payable {\r\n        // convert the ETH amount to a token amount to mint\r\n        if (msg.value == 0) {\r\n            revert TokenShop__ZeroETHSent();\r\n        }\r\n        i_token.mint(msg.sender, amountToMint(msg.value));\r\n    }\r\n\r\n    function withdraw() external onlyOwner {\r\n        (bool success, ) = payable(owner()).call{value: address(this).balance}(\"\");\r\n        if (!success) {\r\n            revert TokenShop__CouldNotWithdraw();\r\n        }\r\n        emit BalanceWithdrawn();\r\n    }\r\n}"
			},
			"contracts/MyERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.26;\r\n\r\nimport {ERC20} from \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\";\r\nimport {AccessControl} from \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\";\r\n\r\ncontract MyERC20 is ERC20, AccessControl {\r\n   bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n\r\n    constructor() ERC20(\"My Cyfrin CLF Token\", \"CLF\") {\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _grantRole(MINTER_ROLE, msg.sender);    \r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts@5.2.0/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts@5.2.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 72,
								"contract": "@openzeppelin/contracts@5.2.0/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)67_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)67_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)67_storage"
							},
							"t_struct(RoleData)67_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 64,
										"contract": "@openzeppelin/contracts@5.2.0/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 66,
										"contract": "@openzeppelin/contracts@5.2.0/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.2.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 433,
								"contract": "@openzeppelin/contracts@5.2.0/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts@5.2.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 732,
								"contract": "@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 738,
								"contract": "@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 740,
								"contract": "@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 742,
								"contract": "@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 744,
								"contract": "@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MyERC20.sol": {
				"MyERC20": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyERC20.sol\":226:623  contract MyERC20 is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyERC20.sol\":344:505  constructor() ERC20(\"My Cyfrin CLF Token\", \"CLF\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x13\n  dup2\n  mstore\n  0x20\n  add\n  0x4d792043796672696e20434c4620546f6b656e00000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x434c460000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyERC20.sol\":405:447  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_9\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/MyERC20.sol\":416:434  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contracts/MyERC20.sol\":436:446  msg.sender */\n  caller\n    /* \"contracts/MyERC20.sol\":405:415  _grantRole */\n  shl(0x20, tag_10)\n    /* \"contracts/MyERC20.sol\":405:447  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/MyERC20.sol\":458:493  _grantRole(MINTER_ROLE, msg.sender) */\n  tag_11\n    /* \"contracts/MyERC20.sol\":311:335  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/MyERC20.sol\":482:492  msg.sender */\n  caller\n    /* \"contracts/MyERC20.sol\":458:468  _grantRole */\n  shl(0x20, tag_10)\n    /* \"contracts/MyERC20.sol\":458:493  _grantRole(MINTER_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/MyERC20.sol\":226:623  contract MyERC20 is ERC20, AccessControl {... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_10:\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_14\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_16\n  jumpi\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_17\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_18)\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_13)\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_16:\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_13:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_15:\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_18:\n    /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_22:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_23:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_24:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_25:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_47\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_47:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_49\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":714:798   */\ntag_48:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_26:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_27:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_28:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_29:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_54\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_28\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1429:1468   */\n  tag_55\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_28\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_30:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_31:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_32:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_59\n    /* \"#utility.yul\":1818:1852   */\n  tag_60\n    /* \"#utility.yul\":1827:1851   */\n  tag_61\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_30\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1818:1852   */\n  tag_31\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1800:1853   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_33:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_34:\n    /* \"#utility.yul\":2056:2095   */\n  tag_64\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_32\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2117:2208   */\n  tag_65\n    /* \"#utility.yul\":2166:2207   */\n  tag_66\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_33\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_35:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2280:2288   */\n  swap1\n  pop\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_36:\n    /* \"#utility.yul\":2377:2409   */\n  tag_69\n  tag_35\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2418:2483   */\n  tag_70\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_34\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_37:\n    /* \"#utility.yul\":2555:2675   */\ntag_72:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_75\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_36\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_72)\ntag_74:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_38:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_78\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_26\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2906:2935   */\n  tag_79\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_27\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_80:\n    /* \"#utility.yul\":3133:3213   */\n  tag_81\n    /* \"#utility.yul\":3189:3211   */\n  tag_82\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_27\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_37\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_77:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_39:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_40:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_85\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_39\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_41:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_87\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_40\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_89\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_22\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_91\n  tag_23\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4038:4094   */\ntag_90:\n    /* \"#utility.yul\":4118:4156   */\n  tag_92\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_25\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":4203:4270   */\n  tag_93\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_38\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_95\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_96:\n    /* \"#utility.yul\":5144:5211   */\n  tag_97\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_41\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_94)\n    /* \"#utility.yul\":4365:4983   */\ntag_95:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_98\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_26\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_99:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_101\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_99)\ntag_101:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_103\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_40\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_102:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_94:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyERC20.sol\":226:623  contract MyERC20 is ERC20, AccessControl {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyERC20.sol\":226:623  contract MyERC20 is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x40c10f19\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x23b872dd\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/MyERC20.sol\":513:620  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_15:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_16:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyERC20.sol\":273:335  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_18:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_20:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_99\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_100\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_101\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_99:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_104\n      jump\t// in\n    tag_103:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_105\n      swap1\n      tag_104\n      jump\t// in\n    tag_105:\n      dup1\n      iszero\n      tag_106\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_107\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_106)\n    tag_107:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_108:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_108\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_110\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_112\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_113\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_117\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_118\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_119\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_120\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_57:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_122\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_51\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_124\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_125\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_127\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_128\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_132\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_132:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_133\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_134\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_133:\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyERC20.sol\":513:620  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n    tag_67:\n        /* \"contracts/MyERC20.sol\":311:335  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_136\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_125\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/MyERC20.sol\":595:612  _mint(to, amount) */\n      tag_138\n        /* \"contracts/MyERC20.sol\":601:603  to */\n      dup4\n        /* \"contracts/MyERC20.sol\":605:611  amount */\n      dup4\n        /* \"contracts/MyERC20.sol\":595:600  _mint */\n      tag_139\n        /* \"contracts/MyERC20.sol\":595:612  _mint(to, amount) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/MyERC20.sol\":513:620  function mint(address to, uint256 amount) public onlyRole(MINTER_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_104\n      jump\t// in\n    tag_143:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_144\n      swap1\n      tag_104\n      jump\t// in\n    tag_144:\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_146\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_145)\n    tag_146:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_147:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_147\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_145:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_81:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_150\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_120\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyERC20.sol\":273:335  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_88:\n        /* \"contracts/MyERC20.sol\":311:335  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/MyERC20.sol\":273:335  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_151\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_51\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_153\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_125\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_155\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_134\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_155:\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_113:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_160\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_161\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_118:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_163\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_96\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_168\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_161\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_120:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_170\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_175\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_176\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_125:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_178\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_180\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_182\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_184\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_181)\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_183:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_181:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_111\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_186)\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_186:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n    tag_139:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7547:7548  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7528:7535  account */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7601:7602  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      tag_194\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7640:7641  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7644:7651  account */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7653:7658  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7624:7631  _update */\n      tag_176\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_201\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_204\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_206)\n    tag_203:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_209:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_213\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_75\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_213:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap3\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_218:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_220:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_221:\n        /* \"#utility.yul\":561:584   */\n      tag_253\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_220\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_254:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_222:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_256\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_221\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_259\n      tag_218\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":833:952   */\n    tag_258:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_260\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_223:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_224:\n        /* \"#utility.yul\":1268:1289   */\n      tag_263\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_223\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_265\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_224\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_225:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_226:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_227:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_228:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_229:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_271\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_225\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2222:2293   */\n      tag_272\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_226\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_273\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_227\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":2392:2421   */\n      tag_274\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_228\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_33:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_276\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_229\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_230:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_231:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_279\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_230\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_232:\n        /* \"#utility.yul\":3060:3084   */\n      tag_281\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_231\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      0x00\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_282:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_233:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_284\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_232\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_234:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_235:\n        /* \"#utility.yul\":3416:3440   */\n      tag_287\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_234\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_288\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      0x00\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_288:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_236:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_290\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_235\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_36:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      0x00\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_293\n      tag_218\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3709:3828   */\n    tag_292:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_294\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_233\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_295\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_236\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_237:\n        /* \"#utility.yul\":4183:4207   */\n      tag_297\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_234\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_42:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_299\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_237\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:5067   */\n    tag_45:\n        /* \"#utility.yul\":4525:4531   */\n      0x00\n        /* \"#utility.yul\":4533:4539   */\n      0x00\n        /* \"#utility.yul\":4541:4547   */\n      0x00\n        /* \"#utility.yul\":4590:4592   */\n      0x60\n        /* \"#utility.yul\":4578:4587   */\n      dup5\n        /* \"#utility.yul\":4569:4576   */\n      dup7\n        /* \"#utility.yul\":4565:4588   */\n      sub\n        /* \"#utility.yul\":4561:4593   */\n      slt\n        /* \"#utility.yul\":4558:4677   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":4596:4675   */\n      tag_302\n      tag_218\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":4558:4677   */\n    tag_301:\n        /* \"#utility.yul\":4716:4717   */\n      0x00\n        /* \"#utility.yul\":4741:4794   */\n      tag_303\n        /* \"#utility.yul\":4786:4793   */\n      dup7\n        /* \"#utility.yul\":4777:4783   */\n      dup3\n        /* \"#utility.yul\":4766:4775   */\n      dup8\n        /* \"#utility.yul\":4762:4784   */\n      add\n        /* \"#utility.yul\":4741:4794   */\n      tag_233\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4731:4794   */\n      swap4\n      pop\n        /* \"#utility.yul\":4687:4804   */\n      pop\n        /* \"#utility.yul\":4843:4845   */\n      0x20\n        /* \"#utility.yul\":4869:4922   */\n      tag_304\n        /* \"#utility.yul\":4914:4921   */\n      dup7\n        /* \"#utility.yul\":4905:4911   */\n      dup3\n        /* \"#utility.yul\":4894:4903   */\n      dup8\n        /* \"#utility.yul\":4890:4912   */\n      add\n        /* \"#utility.yul\":4869:4922   */\n      tag_233\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4859:4922   */\n      swap3\n      pop\n        /* \"#utility.yul\":4814:4932   */\n      pop\n        /* \"#utility.yul\":4971:4973   */\n      0x40\n        /* \"#utility.yul\":4997:5050   */\n      tag_305\n        /* \"#utility.yul\":5042:5049   */\n      dup7\n        /* \"#utility.yul\":5033:5039   */\n      dup3\n        /* \"#utility.yul\":5022:5031   */\n      dup8\n        /* \"#utility.yul\":5018:5040   */\n      add\n        /* \"#utility.yul\":4997:5050   */\n      tag_236\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4987:5050   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:5060   */\n      pop\n        /* \"#utility.yul\":4448:5067   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5073:5150   */\n    tag_238:\n        /* \"#utility.yul\":5110:5117   */\n      0x00\n        /* \"#utility.yul\":5139:5144   */\n      dup2\n        /* \"#utility.yul\":5128:5144   */\n      swap1\n      pop\n        /* \"#utility.yul\":5073:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5156:5278   */\n    tag_239:\n        /* \"#utility.yul\":5229:5253   */\n      tag_308\n        /* \"#utility.yul\":5247:5252   */\n      dup2\n        /* \"#utility.yul\":5229:5253   */\n      tag_238\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5222:5227   */\n      dup2\n        /* \"#utility.yul\":5219:5254   */\n      eq\n        /* \"#utility.yul\":5209:5272   */\n      tag_309\n      jumpi\n        /* \"#utility.yul\":5268:5269   */\n      0x00\n        /* \"#utility.yul\":5265:5266   */\n      0x00\n        /* \"#utility.yul\":5258:5270   */\n      revert\n        /* \"#utility.yul\":5209:5272   */\n    tag_309:\n        /* \"#utility.yul\":5156:5278   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5284:5423   */\n    tag_240:\n        /* \"#utility.yul\":5330:5335   */\n      0x00\n        /* \"#utility.yul\":5368:5374   */\n      dup2\n        /* \"#utility.yul\":5355:5375   */\n      calldataload\n        /* \"#utility.yul\":5346:5375   */\n      swap1\n      pop\n        /* \"#utility.yul\":5384:5417   */\n      tag_311\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5384:5417   */\n      tag_239\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5284:5423   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5429:5758   */\n    tag_50:\n        /* \"#utility.yul\":5488:5494   */\n      0x00\n        /* \"#utility.yul\":5537:5539   */\n      0x20\n        /* \"#utility.yul\":5525:5534   */\n      dup3\n        /* \"#utility.yul\":5516:5523   */\n      dup5\n        /* \"#utility.yul\":5512:5535   */\n      sub\n        /* \"#utility.yul\":5508:5540   */\n      slt\n        /* \"#utility.yul\":5505:5624   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":5543:5622   */\n      tag_314\n      tag_218\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5505:5624   */\n    tag_313:\n        /* \"#utility.yul\":5663:5664   */\n      0x00\n        /* \"#utility.yul\":5688:5741   */\n      tag_315\n        /* \"#utility.yul\":5733:5740   */\n      dup5\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5713:5722   */\n      dup6\n        /* \"#utility.yul\":5709:5731   */\n      add\n        /* \"#utility.yul\":5688:5741   */\n      tag_240\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5678:5741   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:5751   */\n      pop\n        /* \"#utility.yul\":5429:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:5882   */\n    tag_241:\n        /* \"#utility.yul\":5851:5875   */\n      tag_317\n        /* \"#utility.yul\":5869:5874   */\n      dup2\n        /* \"#utility.yul\":5851:5875   */\n      tag_238\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5846:5849   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      mstore\n        /* \"#utility.yul\":5764:5882   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6110   */\n    tag_53:\n        /* \"#utility.yul\":5981:5985   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6008:6017   */\n      dup3\n        /* \"#utility.yul\":6004:6022   */\n      add\n        /* \"#utility.yul\":5996:6022   */\n      swap1\n      pop\n        /* \"#utility.yul\":6032:6103   */\n      tag_319\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6089:6098   */\n      dup4\n        /* \"#utility.yul\":6085:6102   */\n      add\n        /* \"#utility.yul\":6076:6082   */\n      dup5\n        /* \"#utility.yul\":6032:6103   */\n      tag_241\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5888:6110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6116:6590   */\n    tag_56:\n        /* \"#utility.yul\":6184:6190   */\n      0x00\n        /* \"#utility.yul\":6192:6198   */\n      0x00\n        /* \"#utility.yul\":6241:6243   */\n      0x40\n        /* \"#utility.yul\":6229:6238   */\n      dup4\n        /* \"#utility.yul\":6220:6227   */\n      dup6\n        /* \"#utility.yul\":6216:6239   */\n      sub\n        /* \"#utility.yul\":6212:6244   */\n      slt\n        /* \"#utility.yul\":6209:6328   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6247:6326   */\n      tag_322\n      tag_218\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6209:6328   */\n    tag_321:\n        /* \"#utility.yul\":6367:6368   */\n      0x00\n        /* \"#utility.yul\":6392:6445   */\n      tag_323\n        /* \"#utility.yul\":6437:6444   */\n      dup6\n        /* \"#utility.yul\":6428:6434   */\n      dup3\n        /* \"#utility.yul\":6417:6426   */\n      dup7\n        /* \"#utility.yul\":6413:6435   */\n      add\n        /* \"#utility.yul\":6392:6445   */\n      tag_240\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":6382:6445   */\n      swap3\n      pop\n        /* \"#utility.yul\":6338:6455   */\n      pop\n        /* \"#utility.yul\":6494:6496   */\n      0x20\n        /* \"#utility.yul\":6520:6573   */\n      tag_324\n        /* \"#utility.yul\":6565:6572   */\n      dup6\n        /* \"#utility.yul\":6556:6562   */\n      dup3\n        /* \"#utility.yul\":6545:6554   */\n      dup7\n        /* \"#utility.yul\":6541:6563   */\n      add\n        /* \"#utility.yul\":6520:6573   */\n      tag_233\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":6510:6573   */\n      swap2\n      pop\n        /* \"#utility.yul\":6465:6583   */\n      pop\n        /* \"#utility.yul\":6116:6590   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6596:6682   */\n    tag_242:\n        /* \"#utility.yul\":6631:6638   */\n      0x00\n        /* \"#utility.yul\":6671:6675   */\n      0xff\n        /* \"#utility.yul\":6664:6669   */\n      dup3\n        /* \"#utility.yul\":6660:6676   */\n      and\n        /* \"#utility.yul\":6649:6676   */\n      swap1\n      pop\n        /* \"#utility.yul\":6596:6682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:6800   */\n    tag_243:\n        /* \"#utility.yul\":6771:6793   */\n      tag_327\n        /* \"#utility.yul\":6787:6792   */\n      dup2\n        /* \"#utility.yul\":6771:6793   */\n      tag_242\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6766:6769   */\n      dup3\n        /* \"#utility.yul\":6759:6794   */\n      mstore\n        /* \"#utility.yul\":6688:6800   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6806:7020   */\n    tag_61:\n        /* \"#utility.yul\":6895:6899   */\n      0x00\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6918:6936   */\n      add\n        /* \"#utility.yul\":6910:6936   */\n      swap1\n      pop\n        /* \"#utility.yul\":6946:7013   */\n      tag_329\n        /* \"#utility.yul\":7010:7011   */\n      0x00\n        /* \"#utility.yul\":6999:7008   */\n      dup4\n        /* \"#utility.yul\":6995:7012   */\n      add\n        /* \"#utility.yul\":6986:6992   */\n      dup5\n        /* \"#utility.yul\":6946:7013   */\n      tag_243\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6806:7020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7026:7355   */\n    tag_70:\n        /* \"#utility.yul\":7085:7091   */\n      0x00\n        /* \"#utility.yul\":7134:7136   */\n      0x20\n        /* \"#utility.yul\":7122:7131   */\n      dup3\n        /* \"#utility.yul\":7113:7120   */\n      dup5\n        /* \"#utility.yul\":7109:7132   */\n      sub\n        /* \"#utility.yul\":7105:7137   */\n      slt\n        /* \"#utility.yul\":7102:7221   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":7140:7219   */\n      tag_332\n      tag_218\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7102:7221   */\n    tag_331:\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7285:7338   */\n      tag_333\n        /* \"#utility.yul\":7330:7337   */\n      dup5\n        /* \"#utility.yul\":7321:7327   */\n      dup3\n        /* \"#utility.yul\":7310:7319   */\n      dup6\n        /* \"#utility.yul\":7306:7328   */\n      add\n        /* \"#utility.yul\":7285:7338   */\n      tag_233\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":7275:7338   */\n      swap2\n      pop\n        /* \"#utility.yul\":7231:7348   */\n      pop\n        /* \"#utility.yul\":7026:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7835   */\n    tag_95:\n        /* \"#utility.yul\":7429:7435   */\n      0x00\n        /* \"#utility.yul\":7437:7443   */\n      0x00\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7474:7483   */\n      dup4\n        /* \"#utility.yul\":7465:7472   */\n      dup6\n        /* \"#utility.yul\":7461:7484   */\n      sub\n        /* \"#utility.yul\":7457:7489   */\n      slt\n        /* \"#utility.yul\":7454:7573   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":7492:7571   */\n      tag_336\n      tag_218\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":7454:7573   */\n    tag_335:\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7637:7690   */\n      tag_337\n        /* \"#utility.yul\":7682:7689   */\n      dup6\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup7\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7637:7690   */\n      tag_233\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":7627:7690   */\n      swap3\n      pop\n        /* \"#utility.yul\":7583:7700   */\n      pop\n        /* \"#utility.yul\":7739:7741   */\n      0x20\n        /* \"#utility.yul\":7765:7818   */\n      tag_338\n        /* \"#utility.yul\":7810:7817   */\n      dup6\n        /* \"#utility.yul\":7801:7807   */\n      dup3\n        /* \"#utility.yul\":7790:7799   */\n      dup7\n        /* \"#utility.yul\":7786:7808   */\n      add\n        /* \"#utility.yul\":7765:7818   */\n      tag_233\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":7755:7818   */\n      swap2\n      pop\n        /* \"#utility.yul\":7710:7828   */\n      pop\n        /* \"#utility.yul\":7361:7835   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8021   */\n    tag_244:\n        /* \"#utility.yul\":7889:7966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7967   */\n      mstore\n        /* \"#utility.yul\":7986:7990   */\n      0x22\n        /* \"#utility.yul\":7983:7984   */\n      0x04\n        /* \"#utility.yul\":7976:7991   */\n      mstore\n        /* \"#utility.yul\":8010:8014   */\n      0x24\n        /* \"#utility.yul\":8007:8008   */\n      0x00\n        /* \"#utility.yul\":8000:8015   */\n      revert\n        /* \"#utility.yul\":8027:8347   */\n    tag_104:\n        /* \"#utility.yul\":8071:8077   */\n      0x00\n        /* \"#utility.yul\":8108:8109   */\n      0x02\n        /* \"#utility.yul\":8102:8106   */\n      dup3\n        /* \"#utility.yul\":8098:8110   */\n      div\n        /* \"#utility.yul\":8088:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8156   */\n      0x01\n        /* \"#utility.yul\":8149:8153   */\n      dup3\n        /* \"#utility.yul\":8145:8157   */\n      and\n        /* \"#utility.yul\":8176:8194   */\n      dup1\n        /* \"#utility.yul\":8166:8247   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":8232:8236   */\n      0x7f\n        /* \"#utility.yul\":8224:8230   */\n      dup3\n        /* \"#utility.yul\":8220:8237   */\n      and\n        /* \"#utility.yul\":8210:8237   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8247   */\n    tag_341:\n        /* \"#utility.yul\":8294:8296   */\n      0x20\n        /* \"#utility.yul\":8286:8292   */\n      dup3\n        /* \"#utility.yul\":8283:8297   */\n      lt\n        /* \"#utility.yul\":8263:8281   */\n      dup2\n        /* \"#utility.yul\":8260:8298   */\n      sub\n        /* \"#utility.yul\":8257:8341   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":8313:8331   */\n      tag_343\n      tag_244\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":8257:8341   */\n    tag_342:\n        /* \"#utility.yul\":8078:8347   */\n      pop\n        /* \"#utility.yul\":8027:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8471   */\n    tag_245:\n        /* \"#utility.yul\":8440:8464   */\n      tag_345\n        /* \"#utility.yul\":8458:8463   */\n      dup2\n        /* \"#utility.yul\":8440:8464   */\n      tag_231\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8435:8438   */\n      dup3\n        /* \"#utility.yul\":8428:8465   */\n      mstore\n        /* \"#utility.yul\":8353:8471   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8477:8919   */\n    tag_167:\n        /* \"#utility.yul\":8626:8630   */\n      0x00\n        /* \"#utility.yul\":8664:8666   */\n      0x60\n        /* \"#utility.yul\":8653:8662   */\n      dup3\n        /* \"#utility.yul\":8649:8667   */\n      add\n        /* \"#utility.yul\":8641:8667   */\n      swap1\n      pop\n        /* \"#utility.yul\":8677:8748   */\n      tag_347\n        /* \"#utility.yul\":8745:8746   */\n      0x00\n        /* \"#utility.yul\":8734:8743   */\n      dup4\n        /* \"#utility.yul\":8730:8747   */\n      add\n        /* \"#utility.yul\":8721:8727   */\n      dup7\n        /* \"#utility.yul\":8677:8748   */\n      tag_245\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8758:8830   */\n      tag_348\n        /* \"#utility.yul\":8826:8828   */\n      0x20\n        /* \"#utility.yul\":8815:8824   */\n      dup4\n        /* \"#utility.yul\":8811:8829   */\n      add\n        /* \"#utility.yul\":8802:8808   */\n      dup6\n        /* \"#utility.yul\":8758:8830   */\n      tag_237\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8840:8912   */\n      tag_349\n        /* \"#utility.yul\":8908:8910   */\n      0x40\n        /* \"#utility.yul\":8897:8906   */\n      dup4\n        /* \"#utility.yul\":8893:8911   */\n      add\n        /* \"#utility.yul\":8884:8890   */\n      dup5\n        /* \"#utility.yul\":8840:8912   */\n      tag_237\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":8477:8919   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8925:9147   */\n    tag_172:\n        /* \"#utility.yul\":9018:9022   */\n      0x00\n        /* \"#utility.yul\":9056:9058   */\n      0x20\n        /* \"#utility.yul\":9045:9054   */\n      dup3\n        /* \"#utility.yul\":9041:9059   */\n      add\n        /* \"#utility.yul\":9033:9059   */\n      swap1\n      pop\n        /* \"#utility.yul\":9069:9140   */\n      tag_351\n        /* \"#utility.yul\":9137:9138   */\n      0x00\n        /* \"#utility.yul\":9126:9135   */\n      dup4\n        /* \"#utility.yul\":9122:9139   */\n      add\n        /* \"#utility.yul\":9113:9119   */\n      dup5\n        /* \"#utility.yul\":9069:9140   */\n      tag_245\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8925:9147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9153:9333   */\n    tag_246:\n        /* \"#utility.yul\":9201:9278   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9198:9199   */\n      0x00\n        /* \"#utility.yul\":9191:9279   */\n      mstore\n        /* \"#utility.yul\":9298:9302   */\n      0x11\n        /* \"#utility.yul\":9295:9296   */\n      0x04\n        /* \"#utility.yul\":9288:9303   */\n      mstore\n        /* \"#utility.yul\":9322:9326   */\n      0x24\n        /* \"#utility.yul\":9319:9320   */\n      0x00\n        /* \"#utility.yul\":9312:9327   */\n      revert\n        /* \"#utility.yul\":9339:9530   */\n    tag_205:\n        /* \"#utility.yul\":9379:9382   */\n      0x00\n        /* \"#utility.yul\":9398:9418   */\n      tag_354\n        /* \"#utility.yul\":9416:9417   */\n      dup3\n        /* \"#utility.yul\":9398:9418   */\n      tag_234\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9393:9418   */\n      swap2\n      pop\n        /* \"#utility.yul\":9432:9452   */\n      tag_355\n        /* \"#utility.yul\":9450:9451   */\n      dup4\n        /* \"#utility.yul\":9432:9452   */\n      tag_234\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":9427:9452   */\n      swap3\n      pop\n        /* \"#utility.yul\":9475:9476   */\n      dup3\n        /* \"#utility.yul\":9472:9473   */\n      dup3\n        /* \"#utility.yul\":9468:9477   */\n      add\n        /* \"#utility.yul\":9461:9477   */\n      swap1\n      pop\n        /* \"#utility.yul\":9496:9499   */\n      dup1\n        /* \"#utility.yul\":9493:9494   */\n      dup3\n        /* \"#utility.yul\":9490:9500   */\n      gt\n        /* \"#utility.yul\":9487:9523   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":9503:9521   */\n      tag_357\n      tag_246\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9487:9523   */\n    tag_356:\n        /* \"#utility.yul\":9339:9530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9536:9868   */\n    tag_216:\n        /* \"#utility.yul\":9657:9661   */\n      0x00\n        /* \"#utility.yul\":9695:9697   */\n      0x40\n        /* \"#utility.yul\":9684:9693   */\n      dup3\n        /* \"#utility.yul\":9680:9698   */\n      add\n        /* \"#utility.yul\":9672:9698   */\n      swap1\n      pop\n        /* \"#utility.yul\":9708:9779   */\n      tag_359\n        /* \"#utility.yul\":9776:9777   */\n      0x00\n        /* \"#utility.yul\":9765:9774   */\n      dup4\n        /* \"#utility.yul\":9761:9778   */\n      add\n        /* \"#utility.yul\":9752:9758   */\n      dup6\n        /* \"#utility.yul\":9708:9779   */\n      tag_245\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9789:9861   */\n      tag_360\n        /* \"#utility.yul\":9857:9859   */\n      0x20\n        /* \"#utility.yul\":9846:9855   */\n      dup4\n        /* \"#utility.yul\":9842:9860   */\n      add\n        /* \"#utility.yul\":9833:9839   */\n      dup5\n        /* \"#utility.yul\":9789:9861   */\n      tag_241\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":9536:9868   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a3acf760a0b26f8553f0a2d8360401c3d461668ab0ad82d7962eed4fe701894f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1429": {
									"entryPoint": null,
									"id": 1429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_761": {
									"entryPoint": null,
									"id": 761,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_302": {
									"entryPoint": 231,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1340": {
									"entryPoint": 577,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_126": {
									"entryPoint": 477,
									"id": 126,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 732,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 918,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:13",
										"nodeType": "YulBlock",
										"src": "0:5231:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:13",
													"nodeType": "YulBlock",
													"src": "66:40:13",
													"statements": [
														{
															"nativeSrc": "77:22:13",
															"nodeType": "YulAssignment",
															"src": "77:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:13"
																},
																"nativeSrc": "87:12:13",
																"nodeType": "YulFunctionCall",
																"src": "87:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:13",
														"nodeType": "YulTypedName",
														"src": "49:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:13",
														"nodeType": "YulTypedName",
														"src": "59:6:13",
														"type": ""
													}
												],
												"src": "7:99:13"
											},
											{
												"body": {
													"nativeSrc": "140:152:13",
													"nodeType": "YulBlock",
													"src": "140:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:13",
																		"nodeType": "YulLiteral",
																		"src": "157:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:13",
																		"nodeType": "YulLiteral",
																		"src": "160:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:13"
																},
																"nativeSrc": "150:88:13",
																"nodeType": "YulFunctionCall",
																"src": "150:88:13"
															},
															"nativeSrc": "150:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:13",
																		"nodeType": "YulLiteral",
																		"src": "254:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:13",
																		"nodeType": "YulLiteral",
																		"src": "257:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:13"
																},
																"nativeSrc": "247:15:13",
																"nodeType": "YulFunctionCall",
																"src": "247:15:13"
															},
															"nativeSrc": "247:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:13",
																		"nodeType": "YulLiteral",
																		"src": "278:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:13",
																		"nodeType": "YulLiteral",
																		"src": "281:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:13"
																},
																"nativeSrc": "271:15:13",
																"nodeType": "YulFunctionCall",
																"src": "271:15:13"
															},
															"nativeSrc": "271:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:13"
											},
											{
												"body": {
													"nativeSrc": "326:152:13",
													"nodeType": "YulBlock",
													"src": "326:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:13",
																		"nodeType": "YulLiteral",
																		"src": "343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:13",
																		"nodeType": "YulLiteral",
																		"src": "346:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:13"
																},
																"nativeSrc": "336:88:13",
																"nodeType": "YulFunctionCall",
																"src": "336:88:13"
															},
															"nativeSrc": "336:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:13",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:13",
																		"nodeType": "YulLiteral",
																		"src": "443:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nativeSrc": "433:15:13",
																"nodeType": "YulFunctionCall",
																"src": "433:15:13"
															},
															"nativeSrc": "433:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:13",
																		"nodeType": "YulLiteral",
																		"src": "464:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:13",
																		"nodeType": "YulLiteral",
																		"src": "467:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:13"
																},
																"nativeSrc": "457:15:13",
																"nodeType": "YulFunctionCall",
																"src": "457:15:13"
															},
															"nativeSrc": "457:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:13"
											},
											{
												"body": {
													"nativeSrc": "535:269:13",
													"nodeType": "YulBlock",
													"src": "535:269:13",
													"statements": [
														{
															"nativeSrc": "545:22:13",
															"nodeType": "YulAssignment",
															"src": "545:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "565:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:13"
																},
																"nativeSrc": "555:12:13",
																"nodeType": "YulFunctionCall",
																"src": "555:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:13"
																}
															]
														},
														{
															"nativeSrc": "576:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:13",
																		"nodeType": "YulLiteral",
																		"src": "612:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:13"
																},
																"nativeSrc": "602:12:13",
																"nodeType": "YulFunctionCall",
																"src": "602:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:13",
																	"nodeType": "YulTypedName",
																	"src": "580:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:13",
																"nodeType": "YulBlock",
																"src": "653:51:13",
																"statements": [
																	{
																		"nativeSrc": "667:27:13",
																		"nodeType": "YulAssignment",
																		"src": "667:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:13",
																					"nodeType": "YulLiteral",
																					"src": "689:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:13"
																			},
																			"nativeSrc": "677:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:13"
																},
																"nativeSrc": "626:26:13",
																"nodeType": "YulFunctionCall",
																"src": "626:26:13"
															},
															"nativeSrc": "623:81:13",
															"nodeType": "YulIf",
															"src": "623:81:13"
														},
														{
															"body": {
																"nativeSrc": "756:42:13",
																"nodeType": "YulBlock",
																"src": "756:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:13"
																			},
																			"nativeSrc": "770:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:13"
																		},
																		"nativeSrc": "770:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:13",
																				"nodeType": "YulLiteral",
																				"src": "751:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:13"
																		},
																		"nativeSrc": "740:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:13"
																},
																"nativeSrc": "717:38:13",
																"nodeType": "YulFunctionCall",
																"src": "717:38:13"
															},
															"nativeSrc": "714:84:13",
															"nodeType": "YulIf",
															"src": "714:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:13",
														"nodeType": "YulTypedName",
														"src": "519:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:13",
														"nodeType": "YulTypedName",
														"src": "528:6:13",
														"type": ""
													}
												],
												"src": "484:320:13"
											},
											{
												"body": {
													"nativeSrc": "864:87:13",
													"nodeType": "YulBlock",
													"src": "864:87:13",
													"statements": [
														{
															"nativeSrc": "874:11:13",
															"nodeType": "YulAssignment",
															"src": "874:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:13",
																"nodeType": "YulIdentifier",
																"src": "882:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:13",
																		"nodeType": "YulLiteral",
																		"src": "902:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:13"
																},
																"nativeSrc": "895:14:13",
																"nodeType": "YulFunctionCall",
																"src": "895:14:13"
															},
															"nativeSrc": "895:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:13"
														},
														{
															"nativeSrc": "918:26:13",
															"nodeType": "YulAssignment",
															"src": "918:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:13",
																		"nodeType": "YulLiteral",
																		"src": "936:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:13",
																		"nodeType": "YulLiteral",
																		"src": "939:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:13"
																},
																"nativeSrc": "926:18:13",
																"nodeType": "YulFunctionCall",
																"src": "926:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:13",
														"nodeType": "YulTypedName",
														"src": "851:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:13",
														"nodeType": "YulTypedName",
														"src": "859:4:13",
														"type": ""
													}
												],
												"src": "810:141:13"
											},
											{
												"body": {
													"nativeSrc": "1001:49:13",
													"nodeType": "YulBlock",
													"src": "1001:49:13",
													"statements": [
														{
															"nativeSrc": "1011:33:13",
															"nodeType": "YulAssignment",
															"src": "1011:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:13"
																		},
																		"nativeSrc": "1025:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:13"
																},
																"nativeSrc": "1021:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:13",
														"nodeType": "YulTypedName",
														"src": "984:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:13",
														"nodeType": "YulTypedName",
														"src": "994:6:13",
														"type": ""
													}
												],
												"src": "957:93:13"
											},
											{
												"body": {
													"nativeSrc": "1109:54:13",
													"nodeType": "YulBlock",
													"src": "1109:54:13",
													"statements": [
														{
															"nativeSrc": "1119:37:13",
															"nodeType": "YulAssignment",
															"src": "1119:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:13"
																},
																"nativeSrc": "1140:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:13",
														"nodeType": "YulTypedName",
														"src": "1084:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:13",
														"nodeType": "YulTypedName",
														"src": "1090:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:13",
														"nodeType": "YulTypedName",
														"src": "1100:8:13",
														"type": ""
													}
												],
												"src": "1056:107:13"
											},
											{
												"body": {
													"nativeSrc": "1245:317:13",
													"nodeType": "YulBlock",
													"src": "1245:317:13",
													"statements": [
														{
															"nativeSrc": "1255:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nativeSrc": "1272:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:13",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:13",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:13"
																},
																"nativeSrc": "1311:97:13",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:13",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:13",
															"nodeType": "YulAssignment",
															"src": "1417:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:13"
																},
																"nativeSrc": "1429:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:13"
																}
															]
														},
														{
															"nativeSrc": "1477:30:13",
															"nodeType": "YulAssignment",
															"src": "1477:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:13"
																		},
																		"nativeSrc": "1497:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:13"
																},
																"nativeSrc": "1486:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:13"
																}
															]
														},
														{
															"nativeSrc": "1516:40:13",
															"nodeType": "YulAssignment",
															"src": "1516:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:13"
																		},
																		"nativeSrc": "1536:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:13"
																},
																"nativeSrc": "1526:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:13",
														"nodeType": "YulTypedName",
														"src": "1206:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:13",
														"nodeType": "YulTypedName",
														"src": "1213:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:13",
														"nodeType": "YulTypedName",
														"src": "1225:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:13",
														"nodeType": "YulTypedName",
														"src": "1238:6:13",
														"type": ""
													}
												],
												"src": "1169:393:13"
											},
											{
												"body": {
													"nativeSrc": "1613:32:13",
													"nodeType": "YulBlock",
													"src": "1613:32:13",
													"statements": [
														{
															"nativeSrc": "1623:16:13",
															"nodeType": "YulAssignment",
															"src": "1623:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:13",
																"nodeType": "YulIdentifier",
																"src": "1634:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:13",
														"nodeType": "YulTypedName",
														"src": "1595:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:13",
														"nodeType": "YulTypedName",
														"src": "1605:7:13",
														"type": ""
													}
												],
												"src": "1568:77:13"
											},
											{
												"body": {
													"nativeSrc": "1683:28:13",
													"nodeType": "YulBlock",
													"src": "1683:28:13",
													"statements": [
														{
															"nativeSrc": "1693:12:13",
															"nodeType": "YulAssignment",
															"src": "1693:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:13",
																"nodeType": "YulIdentifier",
																"src": "1700:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:13",
														"nodeType": "YulTypedName",
														"src": "1669:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:13",
														"nodeType": "YulTypedName",
														"src": "1679:3:13",
														"type": ""
													}
												],
												"src": "1651:60:13"
											},
											{
												"body": {
													"nativeSrc": "1777:82:13",
													"nodeType": "YulBlock",
													"src": "1777:82:13",
													"statements": [
														{
															"nativeSrc": "1787:66:13",
															"nodeType": "YulAssignment",
															"src": "1787:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:13"
																				},
																				"nativeSrc": "1827:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:13"
																		},
																		"nativeSrc": "1818:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:13"
																},
																"nativeSrc": "1800:53:13",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:13",
														"nodeType": "YulTypedName",
														"src": "1757:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:13",
														"nodeType": "YulTypedName",
														"src": "1767:9:13",
														"type": ""
													}
												],
												"src": "1717:142:13"
											},
											{
												"body": {
													"nativeSrc": "1912:28:13",
													"nodeType": "YulBlock",
													"src": "1912:28:13",
													"statements": [
														{
															"nativeSrc": "1922:12:13",
															"nodeType": "YulAssignment",
															"src": "1922:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:13",
																"nodeType": "YulIdentifier",
																"src": "1929:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:13",
														"nodeType": "YulTypedName",
														"src": "1898:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:13",
														"nodeType": "YulTypedName",
														"src": "1908:3:13",
														"type": ""
													}
												],
												"src": "1865:75:13"
											},
											{
												"body": {
													"nativeSrc": "2022:193:13",
													"nodeType": "YulBlock",
													"src": "2022:193:13",
													"statements": [
														{
															"nativeSrc": "2032:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:13"
																},
																"nativeSrc": "2056:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:13",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:13"
																				},
																				"nativeSrc": "2145:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:13"
																				},
																				"nativeSrc": "2166:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:13"
																		},
																		"nativeSrc": "2117:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:13"
																},
																"nativeSrc": "2104:105:13",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:13"
															},
															"nativeSrc": "2104:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:13",
														"nodeType": "YulTypedName",
														"src": "1999:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:13",
														"nodeType": "YulTypedName",
														"src": "2005:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:13",
														"nodeType": "YulTypedName",
														"src": "2013:7:13",
														"type": ""
													}
												],
												"src": "1946:269:13"
											},
											{
												"body": {
													"nativeSrc": "2270:24:13",
													"nodeType": "YulBlock",
													"src": "2270:24:13",
													"statements": [
														{
															"nativeSrc": "2280:8:13",
															"nodeType": "YulAssignment",
															"src": "2280:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:13",
																"nodeType": "YulLiteral",
																"src": "2287:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:13",
														"nodeType": "YulTypedName",
														"src": "2266:3:13",
														"type": ""
													}
												],
												"src": "2221:73:13"
											},
											{
												"body": {
													"nativeSrc": "2353:136:13",
													"nodeType": "YulBlock",
													"src": "2353:136:13",
													"statements": [
														{
															"nativeSrc": "2363:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:13"
																},
																"nativeSrc": "2377:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:13"
																},
																"nativeSrc": "2418:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:13"
															},
															"nativeSrc": "2418:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:13",
														"nodeType": "YulTypedName",
														"src": "2339:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:13",
														"nodeType": "YulTypedName",
														"src": "2345:6:13",
														"type": ""
													}
												],
												"src": "2300:189:13"
											},
											{
												"body": {
													"nativeSrc": "2545:136:13",
													"nodeType": "YulBlock",
													"src": "2545:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:13",
																"nodeType": "YulBlock",
																"src": "2612:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:13"
																			},
																			"nativeSrc": "2626:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:13"
																		},
																		"nativeSrc": "2626:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:13"
																},
																"nativeSrc": "2562:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:13"
															},
															"nativeSrc": "2555:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:13",
																"nodeType": "YulBlock",
																"src": "2577:26:13",
																"statements": [
																	{
																		"nativeSrc": "2579:22:13",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:13"
																			},
																			"nativeSrc": "2588:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:13",
																"nodeType": "YulBlock",
																"src": "2559:2:13",
																"statements": []
															},
															"src": "2555:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:13",
														"nodeType": "YulTypedName",
														"src": "2533:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:13",
														"nodeType": "YulTypedName",
														"src": "2540:3:13",
														"type": ""
													}
												],
												"src": "2495:186:13"
											},
											{
												"body": {
													"nativeSrc": "2766:464:13",
													"nodeType": "YulBlock",
													"src": "2766:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:13",
																"nodeType": "YulBlock",
																"src": "2792:431:13",
																"statements": [
																	{
																		"nativeSrc": "2806:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:13"
																			},
																			"nativeSrc": "2822:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:13",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:13"
																					},
																					"nativeSrc": "2906:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:13"
																			},
																			"nativeSrc": "2892:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:13",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:13",
																			"nodeType": "YulBlock",
																			"src": "3093:27:13",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:13",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:13",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:13"
																			},
																			"nativeSrc": "3074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:13"
																		},
																		"nativeSrc": "3071:49:13",
																		"nodeType": "YulIf",
																		"src": "3071:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:13"
																							},
																							"nativeSrc": "3189:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:13"
																					},
																					"nativeSrc": "3175:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:13"
																			},
																			"nativeSrc": "3133:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:13"
																		},
																		"nativeSrc": "3133:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:13"
																},
																"nativeSrc": "2780:11:13",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:13"
															},
															"nativeSrc": "2777:446:13",
															"nodeType": "YulIf",
															"src": "2777:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:13",
														"nodeType": "YulTypedName",
														"src": "2742:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:13",
														"nodeType": "YulTypedName",
														"src": "2749:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:13",
														"nodeType": "YulTypedName",
														"src": "2754:10:13",
														"type": ""
													}
												],
												"src": "2687:543:13"
											},
											{
												"body": {
													"nativeSrc": "3299:54:13",
													"nodeType": "YulBlock",
													"src": "3299:54:13",
													"statements": [
														{
															"nativeSrc": "3309:37:13",
															"nodeType": "YulAssignment",
															"src": "3309:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:13"
																},
																"nativeSrc": "3330:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:13",
														"nodeType": "YulTypedName",
														"src": "3274:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:13",
														"nodeType": "YulTypedName",
														"src": "3280:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:13",
														"nodeType": "YulTypedName",
														"src": "3290:8:13",
														"type": ""
													}
												],
												"src": "3236:117:13"
											},
											{
												"body": {
													"nativeSrc": "3410:118:13",
													"nodeType": "YulBlock",
													"src": "3410:118:13",
													"statements": [
														{
															"nativeSrc": "3420:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:13"
																				},
																				"nativeSrc": "3465:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:13"
																				},
																				"nativeSrc": "3480:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:13"
																		},
																		"nativeSrc": "3436:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:13"
																},
																"nativeSrc": "3432:56:13",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:13",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:13",
															"nodeType": "YulAssignment",
															"src": "3497:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:13"
																},
																"nativeSrc": "3507:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:13",
														"nodeType": "YulTypedName",
														"src": "3387:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:13",
														"nodeType": "YulTypedName",
														"src": "3393:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:13",
														"nodeType": "YulTypedName",
														"src": "3403:6:13",
														"type": ""
													}
												],
												"src": "3359:169:13"
											},
											{
												"body": {
													"nativeSrc": "3614:214:13",
													"nodeType": "YulBlock",
													"src": "3614:214:13",
													"statements": [
														{
															"nativeSrc": "3747:37:13",
															"nodeType": "YulAssignment",
															"src": "3747:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:13"
																},
																"nativeSrc": "3755:29:13",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:13"
																}
															]
														},
														{
															"nativeSrc": "3793:29:13",
															"nodeType": "YulAssignment",
															"src": "3793:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:13"
																		},
																		"nativeSrc": "3810:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:13"
																},
																"nativeSrc": "3801:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:13",
														"nodeType": "YulTypedName",
														"src": "3595:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:13",
														"nodeType": "YulTypedName",
														"src": "3601:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:13",
														"nodeType": "YulTypedName",
														"src": "3609:4:13",
														"type": ""
													}
												],
												"src": "3533:295:13"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:13",
													"nodeType": "YulBlock",
													"src": "3925:1303:13",
													"statements": [
														{
															"nativeSrc": "3936:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:13"
																},
																"nativeSrc": "3950:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:13",
																"nodeType": "YulBlock",
																"src": "4072:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:13"
																			},
																			"nativeSrc": "4074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:13"
																		},
																		"nativeSrc": "4074:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:13"
																},
																"nativeSrc": "4041:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:13"
															},
															"nativeSrc": "4038:56:13",
															"nodeType": "YulIf",
															"src": "4038:56:13"
														},
														{
															"nativeSrc": "4104:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:13"
																		},
																		"nativeSrc": "4144:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:13"
																},
																"nativeSrc": "4118:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:13"
																},
																"nativeSrc": "4203:67:13",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:13"
															},
															"nativeSrc": "4203:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:13"
														},
														{
															"nativeSrc": "4280:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:13",
																"nodeType": "YulLiteral",
																"src": "4297:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:13",
															"nodeType": "YulAssignment",
															"src": "4308:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:13",
																"nodeType": "YulLiteral",
																"src": "4321:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:13",
																		"nodeType": "YulBlock",
																		"src": "4372:611:13",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:13",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:13"
																							},
																							"nativeSrc": "4413:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:13"
																					},
																					"nativeSrc": "4401:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:13",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:13"
																					},
																					"nativeSrc": "4451:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:13",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:13",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:13",
																					"nodeType": "YulBlock",
																					"src": "4569:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:13"
																												},
																												"nativeSrc": "4608:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:13"
																										},
																										"nativeSrc": "4602:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:13"
																								},
																								"nativeSrc": "4587:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:13"
																							},
																							"nativeSrc": "4587:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:13"
																						},
																						{
																							"nativeSrc": "4646:24:13",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:13",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:13"
																								},
																								"nativeSrc": "4656:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:13",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:13",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:13"
																								},
																								"nativeSrc": "4700:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:13"
																					},
																					"nativeSrc": "4532:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:13"
																				},
																				"nativeSrc": "4524:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:13",
																					"nodeType": "YulBlock",
																					"src": "4547:21:13",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:13",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:13",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:13"
																								},
																								"nativeSrc": "4554:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:13",
																					"nodeType": "YulBlock",
																					"src": "4528:3:13",
																					"statements": []
																				},
																				"src": "4524:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:13",
																					"nodeType": "YulBlock",
																					"src": "4768:156:13",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:13"
																										},
																										"nativeSrc": "4809:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:13"
																								},
																								"nativeSrc": "4803:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:13",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:13",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:13"
																												},
																												"nativeSrc": "4891:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:13"
																										},
																										"nativeSrc": "4861:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:13"
																								},
																								"nativeSrc": "4846:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:13"
																							},
																							"nativeSrc": "4846:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:13"
																					},
																					"nativeSrc": "4748:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:13"
																				},
																				"nativeSrc": "4745:179:13",
																				"nodeType": "YulIf",
																				"src": "4745:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:13",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:13"
																									},
																									"nativeSrc": "4954:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:13",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:13"
																							},
																							"nativeSrc": "4950:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:13"
																					},
																					"nativeSrc": "4937:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:13"
																				},
																				"nativeSrc": "4937:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:13"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:13",
																	"nodeType": "YulCase",
																	"src": "4365:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:13",
																		"nodeType": "YulBlock",
																		"src": "5000:222:13",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:13",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:13",
																					"nodeType": "YulBlock",
																					"src": "5051:67:13",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:13",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:13"
																										},
																										"nativeSrc": "5084:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:13"
																								},
																								"nativeSrc": "5078:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:13"
																				},
																				"nativeSrc": "5041:77:13",
																				"nodeType": "YulIf",
																				"src": "5041:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:13"
																							},
																							"nativeSrc": "5144:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:13"
																					},
																					"nativeSrc": "5131:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:13"
																				},
																				"nativeSrc": "5131:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:13"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:13",
																	"nodeType": "YulCase",
																	"src": "4992:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:13"
																},
																"nativeSrc": "4342:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:13"
															},
															"nativeSrc": "4335:887:13",
															"nodeType": "YulSwitch",
															"src": "4335:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:13",
														"nodeType": "YulTypedName",
														"src": "3914:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:13",
														"nodeType": "YulTypedName",
														"src": "3920:3:13",
														"type": ""
													}
												],
												"src": "3833:1395:13"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040518060400160405280601381526020017f4d792043796672696e20434c4620546f6b656e000000000000000000000000008152506040518060400160405280600381526020017f434c460000000000000000000000000000000000000000000000000000000000815250816003908161008b9190610485565b50806004908161009b9190610485565b5050506100b05f5f1b336100e760201b60201c565b506100e17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6336100e760201b60201c565b50610554565b5f6100f883836101dd60201b60201c565b6101d357600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061017061024160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101d7565b5f90505b92915050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806102c357607f821691505b6020821081036102d6576102d561027f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026103387fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102fd565b61034286836102fd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61038661038161037c8461035a565b610363565b61035a565b9050919050565b5f819050919050565b61039f8361036c565b6103b36103ab8261038d565b848454610309565b825550505050565b5f5f905090565b6103ca6103bb565b6103d5818484610396565b505050565b5b818110156103f8576103ed5f826103c2565b6001810190506103db565b5050565b601f82111561043d5761040e816102dc565b610417846102ee565b81016020851015610426578190505b61043a610432856102ee565b8301826103da565b50505b505050565b5f82821c905092915050565b5f61045d5f1984600802610442565b1980831691505092915050565b5f610475838361044e565b9150826002028217905092915050565b61048e82610248565b67ffffffffffffffff8111156104a7576104a6610252565b5b6104b182546102ac565b6104bc8282856103fc565b5f60209050601f8311600181146104ed575f84156104db578287015190505b6104e5858261046a565b86555061054c565b601f1984166104fb866102dc565b5f5b82811015610522578489015182556001820191506020850194506020810190506104fd565b8683101561053f578489015161053b601f89168261044e565b8355505b6001600288020188555050505b505050505050565b611649806105615f395ff3fe608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f5ffd5b610132600480360381019061012d9190611140565b6103bc565b60405161013f9190611185565b60405180910390f35b610150610435565b60405161015d919061120e565b60405180910390f35b610180600480360381019061017b91906112bb565b6104c5565b60405161018d9190611185565b60405180910390f35b61019e6104e7565b6040516101ab9190611308565b60405180910390f35b6101ce60048036038101906101c99190611321565b6104f0565b6040516101db9190611185565b60405180910390f35b6101fe60048036038101906101f991906113a4565b61051e565b60405161020b91906113de565b60405180910390f35b61022e600480360381019061022991906113f7565b61053b565b005b61023861055d565b6040516102459190611450565b60405180910390f35b610268600480360381019061026391906113f7565b610565565b005b610284600480360381019061027f91906112bb565b6105e0565b005b6102a0600480360381019061029b9190611469565b610619565b6040516102ad9190611308565b60405180910390f35b6102d060048036038101906102cb91906113f7565b61065e565b6040516102dd9190611185565b60405180910390f35b6102ee6106c2565b6040516102fb919061120e565b60405180910390f35b61030c610752565b60405161031991906113de565b60405180910390f35b61033c600480360381019061033791906112bb565b610758565b6040516103499190611185565b60405180910390f35b61035a61077a565b60405161036791906113de565b60405180910390f35b61038a600480360381019061038591906113f7565b61079e565b005b6103a660048036038101906103a19190611494565b6107c0565b6040516103b39190611308565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610842565b5b9050919050565b606060038054610444906114ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610470906114ff565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f5f6104cf6108ab565b90506104dc8185856108b2565b600191505092915050565b5f600254905090565b5f5f6104fa6108ab565b90506105078582856108c4565b610512858585610957565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a47565b6105578383610a5b565b50505050565b5f6012905090565b61056d6108ab565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105db8282610b45565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060a81610a47565b6106148383610c2f565b505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546106d1906114ff565b80601f01602080910402602001604051908101604052809291908181526020018280546106fd906114ff565b80156107485780601f1061071f57610100808354040283529160200191610748565b820191905f5260205f20905b81548152906001019060200180831161072b57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f6107626108ab565b905061076f818585610957565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107a78261051e565b6107b081610a47565b6107ba8383610b45565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108bf8383836001610cae565b505050565b5f6108cf84846107c0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109515781811015610942578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109399392919061153e565b60405180910390fd5b61095084848484035f610cae565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c7575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109be9190611573565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a37575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2e9190611573565b60405180910390fd5b610a42838383610e7d565b505050565b610a5881610a536108ab565b611096565b50565b5f610a66838361065e565b610b3b57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ad86108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b3f565b5f90505b92915050565b5f610b50838361065e565b15610c25575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bc26108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c29565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c969190611573565b60405180910390fd5b610caa5f8383610e7d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d1e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d159190611573565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d859190611573565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e77578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6e9190611308565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecd578060025f828254610ec191906115b9565b92505081905550610f9b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f56578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f4d9392919061153e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe2578060025f828254039250508190555061102c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110899190611308565b60405180910390a3505050565b6110a0828261065e565b6110e35780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110da9291906115ec565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61111f816110eb565b8114611129575f5ffd5b50565b5f8135905061113a81611116565b92915050565b5f60208284031215611155576111546110e7565b5b5f6111628482850161112c565b91505092915050565b5f8115159050919050565b61117f8161116b565b82525050565b5f6020820190506111985f830184611176565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111e08261119e565b6111ea81856111a8565b93506111fa8185602086016111b8565b611203816111c6565b840191505092915050565b5f6020820190508181035f83015261122681846111d6565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112578261122e565b9050919050565b6112678161124d565b8114611271575f5ffd5b50565b5f813590506112828161125e565b92915050565b5f819050919050565b61129a81611288565b81146112a4575f5ffd5b50565b5f813590506112b581611291565b92915050565b5f5f604083850312156112d1576112d06110e7565b5b5f6112de85828601611274565b92505060206112ef858286016112a7565b9150509250929050565b61130281611288565b82525050565b5f60208201905061131b5f8301846112f9565b92915050565b5f5f5f60608486031215611338576113376110e7565b5b5f61134586828701611274565b935050602061135686828701611274565b9250506040611367868287016112a7565b9150509250925092565b5f819050919050565b61138381611371565b811461138d575f5ffd5b50565b5f8135905061139e8161137a565b92915050565b5f602082840312156113b9576113b86110e7565b5b5f6113c684828501611390565b91505092915050565b6113d881611371565b82525050565b5f6020820190506113f15f8301846113cf565b92915050565b5f5f6040838503121561140d5761140c6110e7565b5b5f61141a85828601611390565b925050602061142b85828601611274565b9150509250929050565b5f60ff82169050919050565b61144a81611435565b82525050565b5f6020820190506114635f830184611441565b92915050565b5f6020828403121561147e5761147d6110e7565b5b5f61148b84828501611274565b91505092915050565b5f5f604083850312156114aa576114a96110e7565b5b5f6114b785828601611274565b92505060206114c885828601611274565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061151657607f821691505b602082108103611529576115286114d2565b5b50919050565b6115388161124d565b82525050565b5f6060820190506115515f83018661152f565b61155e60208301856112f9565b61156b60408301846112f9565b949350505050565b5f6020820190506115865f83018461152f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115c382611288565b91506115ce83611288565b92508282019050808211156115e6576115e561158c565b5b92915050565b5f6040820190506115ff5f83018561152f565b61160c60208301846113cf565b939250505056fea2646970667358221220a3acf760a0b26f8553f0a2d8360401c3d461668ab0ad82d7962eed4fe701894f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D792043796672696E20434C4620546F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x434C460000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x485 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x9B SWAP2 SWAP1 PUSH2 0x485 JUMP JUMPDEST POP POP POP PUSH2 0xB0 PUSH0 PUSH0 SHL CALLER PUSH2 0xE7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xE1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0xE7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x554 JUMP JUMPDEST PUSH0 PUSH2 0xF8 DUP4 DUP4 PUSH2 0x1DD PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1D3 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x170 PUSH2 0x241 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D7 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2D6 JUMPI PUSH2 0x2D5 PUSH2 0x27F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x338 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2FD JUMP JUMPDEST PUSH2 0x342 DUP7 DUP4 PUSH2 0x2FD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x386 PUSH2 0x381 PUSH2 0x37C DUP5 PUSH2 0x35A JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x39F DUP4 PUSH2 0x36C JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x3AB DUP3 PUSH2 0x38D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x309 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3CA PUSH2 0x3BB JUMP JUMPDEST PUSH2 0x3D5 DUP2 DUP5 DUP5 PUSH2 0x396 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3F8 JUMPI PUSH2 0x3ED PUSH0 DUP3 PUSH2 0x3C2 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3DB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x43D JUMPI PUSH2 0x40E DUP2 PUSH2 0x2DC JUMP JUMPDEST PUSH2 0x417 DUP5 PUSH2 0x2EE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x426 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x43A PUSH2 0x432 DUP6 PUSH2 0x2EE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3DA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x45D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x442 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x475 DUP4 DUP4 PUSH2 0x44E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x48E DUP3 PUSH2 0x248 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A6 PUSH2 0x252 JUMP JUMPDEST JUMPDEST PUSH2 0x4B1 DUP3 SLOAD PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x4BC DUP3 DUP3 DUP6 PUSH2 0x3FC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4ED JUMPI PUSH0 DUP5 ISZERO PUSH2 0x4DB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4E5 DUP6 DUP3 PUSH2 0x46A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x54C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4FB DUP7 PUSH2 0x2DC JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x522 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4FD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x53F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x53B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x44E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1649 DUP1 PUSH2 0x561 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x842 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4CF PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FA PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA5B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 DUP3 PUSH2 0xB45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x60A DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xC2F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x762 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x76F DUP2 DUP6 DUP6 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x7BA DUP4 DUP4 PUSH2 0xB45 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x951 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x942 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x939 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x950 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA42 DUP4 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0xA53 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA66 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST PUSH2 0xB3B JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAD8 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB3F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB50 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST ISZERO PUSH2 0xC25 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBC2 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC29 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAA PUSH0 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE77 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6E SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF9B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF56 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x102C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A0 DUP3 DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x10E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP3 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113A DUP2 PUSH2 0x1116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1155 JUMPI PUSH2 0x1154 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1162 DUP5 DUP3 DUP6 ADD PUSH2 0x112C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0x116B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH0 DUP4 ADD DUP5 PUSH2 0x1176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11E0 DUP3 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x11EA DUP2 DUP6 PUSH2 0x11A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x1203 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 DUP5 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1257 DUP3 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1267 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP2 EQ PUSH2 0x1271 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1282 DUP2 PUSH2 0x125E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129A DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B5 DUP2 PUSH2 0x1291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DE DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12EF DUP6 DUP3 DUP7 ADD PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1302 DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131B PUSH0 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1356 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1367 DUP7 DUP3 DUP8 ADD PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139E DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142B DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144A DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1463 PUSH0 DUP4 ADD DUP5 PUSH2 0x1441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147E JUMPI PUSH2 0x147D PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148B DUP5 DUP3 DUP6 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1516 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH0 DUP4 ADD DUP7 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x155E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x156B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1586 PUSH0 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15C3 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CE DUP4 PUSH2 0x1288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x158C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FF PUSH0 DUP4 ADD DUP6 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x160C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xAC 0xF7 PUSH1 0xA0 0xB2 PUSH16 0x8553F0A2D8360401C3D461668AB0AD82 0xD7 SWAP7 0x2E 0xED 0x4F SWAPN 0x1 DUP10 0x4F PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "226:397:11:-:0;;;344:161;;;;;;;;;;1601:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;405:42:11::1;2232:4:1;416:18:11;;436:10;405;;;:42;;:::i;:::-;;458:35;311:24;482:10;458;;;:35;;:::i;:::-;;226:397:::0;;6179:316:1;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;2854:136::-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2287:1;2280:8;;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;226:397:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_75": {
									"entryPoint": 1874,
									"id": 75,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1409": {
									"entryPoint": 1914,
									"id": 1409,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1115": {
									"entryPoint": 2226,
									"id": 1115,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1175": {
									"entryPoint": 3246,
									"id": 1175,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_139": {
									"entryPoint": 2631,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_160": {
									"entryPoint": 4246,
									"id": 160,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_302": {
									"entryPoint": 2651,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1064": {
									"entryPoint": 3119,
									"id": 1064,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1340": {
									"entryPoint": 2219,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_340": {
									"entryPoint": 2885,
									"id": 340,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1223": {
									"entryPoint": 2244,
									"id": 1223,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_954": {
									"entryPoint": 2391,
									"id": 954,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1031": {
									"entryPoint": 3709,
									"id": 1031,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_851": {
									"entryPoint": 1984,
									"id": 851,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_875": {
									"entryPoint": 1221,
									"id": 875,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_810": {
									"entryPoint": 1561,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_788": {
									"entryPoint": 1373,
									"id": 788,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_174": {
									"entryPoint": 1310,
									"id": 174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_193": {
									"entryPoint": 1339,
									"id": 193,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_126": {
									"entryPoint": 1630,
									"id": 126,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1445": {
									"entryPoint": 1504,
									"id": 1445,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_770": {
									"entryPoint": 1077,
									"id": 770,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_235": {
									"entryPoint": 1381,
									"id": 235,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_212": {
									"entryPoint": 1950,
									"id": 212,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_108": {
									"entryPoint": 956,
									"id": 108,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1381": {
									"entryPoint": 2114,
									"id": 1381,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_779": {
									"entryPoint": 1730,
									"id": 779,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_797": {
									"entryPoint": 1255,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_907": {
									"entryPoint": 1264,
									"id": 907,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_834": {
									"entryPoint": 1880,
									"id": 834,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5071,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4520,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 4977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4536,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4327,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9871:13",
										"nodeType": "YulBlock",
										"src": "0:9871:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:77:13",
													"nodeType": "YulBlock",
													"src": "1860:77:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:13"
																},
																"nativeSrc": "1871:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:13"
															},
															"nativeSrc": "1871:23:13",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:13"
																		},
																		"nativeSrc": "1910:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:13"
																},
																"nativeSrc": "1903:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:13"
															},
															"nativeSrc": "1903:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:139:13"
											},
											{
												"body": {
													"nativeSrc": "1991:54:13",
													"nodeType": "YulBlock",
													"src": "1991:54:13",
													"statements": [
														{
															"nativeSrc": "2001:38:13",
															"nodeType": "YulAssignment",
															"src": "2001:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:13"
																		},
																		"nativeSrc": "2015:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:13"
																		},
																		"nativeSrc": "2031:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:13"
																},
																"nativeSrc": "2011:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:13",
														"nodeType": "YulTypedName",
														"src": "1974:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:13",
														"nodeType": "YulTypedName",
														"src": "1984:6:13",
														"type": ""
													}
												],
												"src": "1943:102:13"
											},
											{
												"body": {
													"nativeSrc": "2143:285:13",
													"nodeType": "YulBlock",
													"src": "2143:285:13",
													"statements": [
														{
															"nativeSrc": "2153:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:13"
																},
																"nativeSrc": "2167:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:13",
															"nodeType": "YulAssignment",
															"src": "2215:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:13"
																},
																"nativeSrc": "2222:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:13"
																		},
																		"nativeSrc": "2337:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:13"
																},
																"nativeSrc": "2302:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:13"
															},
															"nativeSrc": "2302:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:13"
														},
														{
															"nativeSrc": "2376:46:13",
															"nodeType": "YulAssignment",
															"src": "2376:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:13"
																		},
																		"nativeSrc": "2392:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:13"
																},
																"nativeSrc": "2383:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:13",
														"nodeType": "YulTypedName",
														"src": "2124:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:13",
														"nodeType": "YulTypedName",
														"src": "2131:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:13",
														"nodeType": "YulTypedName",
														"src": "2139:3:13",
														"type": ""
													}
												],
												"src": "2051:377:13"
											},
											{
												"body": {
													"nativeSrc": "2552:195:13",
													"nodeType": "YulBlock",
													"src": "2552:195:13",
													"statements": [
														{
															"nativeSrc": "2562:26:13",
															"nodeType": "YulAssignment",
															"src": "2562:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:13"
																},
																"nativeSrc": "2570:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:13"
																		},
																		"nativeSrc": "2605:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:13"
																		},
																		"nativeSrc": "2624:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:13"
																},
																"nativeSrc": "2598:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:13"
															},
															"nativeSrc": "2598:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:13"
														},
														{
															"nativeSrc": "2654:86:13",
															"nodeType": "YulAssignment",
															"src": "2654:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:13"
																},
																"nativeSrc": "2662:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:13",
														"nodeType": "YulTypedName",
														"src": "2524:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:13",
														"nodeType": "YulTypedName",
														"src": "2536:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:13",
														"nodeType": "YulTypedName",
														"src": "2547:4:13",
														"type": ""
													}
												],
												"src": "2434:313:13"
											},
											{
												"body": {
													"nativeSrc": "2798:81:13",
													"nodeType": "YulBlock",
													"src": "2798:81:13",
													"statements": [
														{
															"nativeSrc": "2808:65:13",
															"nodeType": "YulAssignment",
															"src": "2808:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:13"
																},
																"nativeSrc": "2819:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:13",
														"nodeType": "YulTypedName",
														"src": "2780:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:13",
														"nodeType": "YulTypedName",
														"src": "2790:7:13",
														"type": ""
													}
												],
												"src": "2753:126:13"
											},
											{
												"body": {
													"nativeSrc": "2930:51:13",
													"nodeType": "YulBlock",
													"src": "2930:51:13",
													"statements": [
														{
															"nativeSrc": "2940:35:13",
															"nodeType": "YulAssignment",
															"src": "2940:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:13"
																},
																"nativeSrc": "2951:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:13",
														"nodeType": "YulTypedName",
														"src": "2912:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:13",
														"nodeType": "YulTypedName",
														"src": "2922:7:13",
														"type": ""
													}
												],
												"src": "2885:96:13"
											},
											{
												"body": {
													"nativeSrc": "3030:79:13",
													"nodeType": "YulBlock",
													"src": "3030:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:13",
																"nodeType": "YulBlock",
																"src": "3087:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:13"
																			},
																			"nativeSrc": "3089:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:13"
																		},
																		"nativeSrc": "3089:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:13"
																				},
																				"nativeSrc": "3060:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:13"
																		},
																		"nativeSrc": "3050:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:13"
																},
																"nativeSrc": "3043:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:13"
															},
															"nativeSrc": "3040:63:13",
															"nodeType": "YulIf",
															"src": "3040:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:13",
														"nodeType": "YulTypedName",
														"src": "3023:5:13",
														"type": ""
													}
												],
												"src": "2987:122:13"
											},
											{
												"body": {
													"nativeSrc": "3167:87:13",
													"nodeType": "YulBlock",
													"src": "3167:87:13",
													"statements": [
														{
															"nativeSrc": "3177:29:13",
															"nodeType": "YulAssignment",
															"src": "3177:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:13"
																},
																"nativeSrc": "3186:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:13"
																},
																"nativeSrc": "3215:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:13"
															},
															"nativeSrc": "3215:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:13",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:13",
														"nodeType": "YulTypedName",
														"src": "3153:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:13",
														"nodeType": "YulTypedName",
														"src": "3161:5:13",
														"type": ""
													}
												],
												"src": "3115:139:13"
											},
											{
												"body": {
													"nativeSrc": "3305:32:13",
													"nodeType": "YulBlock",
													"src": "3305:32:13",
													"statements": [
														{
															"nativeSrc": "3315:16:13",
															"nodeType": "YulAssignment",
															"src": "3315:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:13",
																"nodeType": "YulIdentifier",
																"src": "3326:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:13",
														"nodeType": "YulTypedName",
														"src": "3287:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:13",
														"nodeType": "YulTypedName",
														"src": "3297:7:13",
														"type": ""
													}
												],
												"src": "3260:77:13"
											},
											{
												"body": {
													"nativeSrc": "3386:79:13",
													"nodeType": "YulBlock",
													"src": "3386:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:13",
																"nodeType": "YulBlock",
																"src": "3443:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:13"
																			},
																			"nativeSrc": "3445:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:13"
																		},
																		"nativeSrc": "3445:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:13"
																				},
																				"nativeSrc": "3416:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:13"
																		},
																		"nativeSrc": "3406:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:13"
																},
																"nativeSrc": "3399:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:13"
															},
															"nativeSrc": "3396:63:13",
															"nodeType": "YulIf",
															"src": "3396:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:13",
														"nodeType": "YulTypedName",
														"src": "3379:5:13",
														"type": ""
													}
												],
												"src": "3343:122:13"
											},
											{
												"body": {
													"nativeSrc": "3523:87:13",
													"nodeType": "YulBlock",
													"src": "3523:87:13",
													"statements": [
														{
															"nativeSrc": "3533:29:13",
															"nodeType": "YulAssignment",
															"src": "3533:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:13"
																},
																"nativeSrc": "3542:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:13"
																},
																"nativeSrc": "3571:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:13"
															},
															"nativeSrc": "3571:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:13",
														"nodeType": "YulTypedName",
														"src": "3501:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:13",
														"nodeType": "YulTypedName",
														"src": "3509:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:13",
														"nodeType": "YulTypedName",
														"src": "3517:5:13",
														"type": ""
													}
												],
												"src": "3471:139:13"
											},
											{
												"body": {
													"nativeSrc": "3699:391:13",
													"nodeType": "YulBlock",
													"src": "3699:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:13",
																"nodeType": "YulBlock",
																"src": "3745:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:13"
																			},
																			"nativeSrc": "3747:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:13"
																		},
																		"nativeSrc": "3747:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:13"
																		},
																		"nativeSrc": "3716:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:13"
																},
																"nativeSrc": "3712:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:13"
															},
															"nativeSrc": "3709:119:13",
															"nodeType": "YulIf",
															"src": "3709:119:13"
														},
														{
															"nativeSrc": "3838:117:13",
															"nodeType": "YulBlock",
															"src": "3838:117:13",
															"statements": [
																{
																	"nativeSrc": "3853:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:13"
																				},
																				"nativeSrc": "3913:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:13"
																		},
																		"nativeSrc": "3892:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:13",
															"nodeType": "YulBlock",
															"src": "3965:118:13",
															"statements": [
																{
																	"nativeSrc": "3980:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:13"
																				},
																				"nativeSrc": "4041:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:13"
																		},
																		"nativeSrc": "4020:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:13",
														"nodeType": "YulTypedName",
														"src": "3661:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:13",
														"nodeType": "YulTypedName",
														"src": "3672:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:13",
														"nodeType": "YulTypedName",
														"src": "3684:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:13",
														"nodeType": "YulTypedName",
														"src": "3692:6:13",
														"type": ""
													}
												],
												"src": "3616:474:13"
											},
											{
												"body": {
													"nativeSrc": "4161:53:13",
													"nodeType": "YulBlock",
													"src": "4161:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:13"
																		},
																		"nativeSrc": "4183:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:13"
																},
																"nativeSrc": "4171:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:13"
															},
															"nativeSrc": "4171:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:13",
														"nodeType": "YulTypedName",
														"src": "4149:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:13",
														"nodeType": "YulTypedName",
														"src": "4156:3:13",
														"type": ""
													}
												],
												"src": "4096:118:13"
											},
											{
												"body": {
													"nativeSrc": "4318:124:13",
													"nodeType": "YulBlock",
													"src": "4318:124:13",
													"statements": [
														{
															"nativeSrc": "4328:26:13",
															"nodeType": "YulAssignment",
															"src": "4328:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:13"
																},
																"nativeSrc": "4336:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:13"
																		},
																		"nativeSrc": "4417:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:13"
																},
																"nativeSrc": "4364:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:13"
															},
															"nativeSrc": "4364:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:13",
														"nodeType": "YulTypedName",
														"src": "4290:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:13",
														"nodeType": "YulTypedName",
														"src": "4302:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:13",
														"nodeType": "YulTypedName",
														"src": "4313:4:13",
														"type": ""
													}
												],
												"src": "4220:222:13"
											},
											{
												"body": {
													"nativeSrc": "4548:519:13",
													"nodeType": "YulBlock",
													"src": "4548:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4594:83:13",
																"nodeType": "YulBlock",
																"src": "4594:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4596:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4596:77:13"
																			},
																			"nativeSrc": "4596:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4596:79:13"
																		},
																		"nativeSrc": "4596:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4596:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4569:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4569:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4578:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4578:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4565:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4565:3:13"
																		},
																		"nativeSrc": "4565:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4565:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4590:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4590:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4561:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4561:3:13"
																},
																"nativeSrc": "4561:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4561:32:13"
															},
															"nativeSrc": "4558:119:13",
															"nodeType": "YulIf",
															"src": "4558:119:13"
														},
														{
															"nativeSrc": "4687:117:13",
															"nodeType": "YulBlock",
															"src": "4687:117:13",
															"statements": [
																{
																	"nativeSrc": "4702:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4702:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4716:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4716:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4706:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4706:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4731:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4731:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4766:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4766:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4777:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4777:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4762:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4762:3:13"
																				},
																				"nativeSrc": "4762:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4762:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4786:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4786:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4741:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4741:20:13"
																		},
																		"nativeSrc": "4741:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4741:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4731:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4731:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4814:118:13",
															"nodeType": "YulBlock",
															"src": "4814:118:13",
															"statements": [
																{
																	"nativeSrc": "4829:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4829:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4843:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4843:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4833:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4833:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4859:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4859:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4894:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4894:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4905:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4905:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4890:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4890:3:13"
																				},
																				"nativeSrc": "4890:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4890:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4914:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4914:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4869:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4869:20:13"
																		},
																		"nativeSrc": "4869:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4869:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4859:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4942:118:13",
															"nodeType": "YulBlock",
															"src": "4942:118:13",
															"statements": [
																{
																	"nativeSrc": "4957:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4957:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4971:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4971:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4961:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4961:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4987:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4987:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5022:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5022:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5033:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5033:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5018:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5018:3:13"
																				},
																				"nativeSrc": "5018:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5018:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5042:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5042:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4997:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4997:20:13"
																		},
																		"nativeSrc": "4997:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4997:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4987:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4987:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4448:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4502:9:13",
														"nodeType": "YulTypedName",
														"src": "4502:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4513:7:13",
														"nodeType": "YulTypedName",
														"src": "4513:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4525:6:13",
														"nodeType": "YulTypedName",
														"src": "4525:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4533:6:13",
														"nodeType": "YulTypedName",
														"src": "4533:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4541:6:13",
														"nodeType": "YulTypedName",
														"src": "4541:6:13",
														"type": ""
													}
												],
												"src": "4448:619:13"
											},
											{
												"body": {
													"nativeSrc": "5118:32:13",
													"nodeType": "YulBlock",
													"src": "5118:32:13",
													"statements": [
														{
															"nativeSrc": "5128:16:13",
															"nodeType": "YulAssignment",
															"src": "5128:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5139:5:13",
																"nodeType": "YulIdentifier",
																"src": "5139:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5128:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5128:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5073:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:13",
														"nodeType": "YulTypedName",
														"src": "5100:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5110:7:13",
														"nodeType": "YulTypedName",
														"src": "5110:7:13",
														"type": ""
													}
												],
												"src": "5073:77:13"
											},
											{
												"body": {
													"nativeSrc": "5199:79:13",
													"nodeType": "YulBlock",
													"src": "5199:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5256:16:13",
																"nodeType": "YulBlock",
																"src": "5256:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5265:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5265:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5268:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5268:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5258:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5258:6:13"
																			},
																			"nativeSrc": "5258:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5258:12:13"
																		},
																		"nativeSrc": "5258:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5258:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5222:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5222:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5247:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5247:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5229:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5229:17:13"
																				},
																				"nativeSrc": "5229:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5229:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5219:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:13"
																		},
																		"nativeSrc": "5219:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5219:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5212:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5212:6:13"
																},
																"nativeSrc": "5212:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5212:43:13"
															},
															"nativeSrc": "5209:63:13",
															"nodeType": "YulIf",
															"src": "5209:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5156:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5192:5:13",
														"nodeType": "YulTypedName",
														"src": "5192:5:13",
														"type": ""
													}
												],
												"src": "5156:122:13"
											},
											{
												"body": {
													"nativeSrc": "5336:87:13",
													"nodeType": "YulBlock",
													"src": "5336:87:13",
													"statements": [
														{
															"nativeSrc": "5346:29:13",
															"nodeType": "YulAssignment",
															"src": "5346:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5368:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5368:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5355:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5355:12:13"
																},
																"nativeSrc": "5355:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5355:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5346:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5346:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5411:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5411:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5384:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5384:26:13"
																},
																"nativeSrc": "5384:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5384:33:13"
															},
															"nativeSrc": "5384:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5384:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5284:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5314:6:13",
														"nodeType": "YulTypedName",
														"src": "5314:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5322:3:13",
														"nodeType": "YulTypedName",
														"src": "5322:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5330:5:13",
														"nodeType": "YulTypedName",
														"src": "5330:5:13",
														"type": ""
													}
												],
												"src": "5284:139:13"
											},
											{
												"body": {
													"nativeSrc": "5495:263:13",
													"nodeType": "YulBlock",
													"src": "5495:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5541:83:13",
																"nodeType": "YulBlock",
																"src": "5541:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5543:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5543:77:13"
																			},
																			"nativeSrc": "5543:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5543:79:13"
																		},
																		"nativeSrc": "5543:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5543:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5516:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5516:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5525:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5525:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5512:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5512:3:13"
																		},
																		"nativeSrc": "5512:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5512:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5537:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5537:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5508:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5508:3:13"
																},
																"nativeSrc": "5508:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5508:32:13"
															},
															"nativeSrc": "5505:119:13",
															"nodeType": "YulIf",
															"src": "5505:119:13"
														},
														{
															"nativeSrc": "5634:117:13",
															"nodeType": "YulBlock",
															"src": "5634:117:13",
															"statements": [
																{
																	"nativeSrc": "5649:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5649:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5663:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5663:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5653:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5653:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5678:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5678:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5713:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5713:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5724:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5724:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5709:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5709:3:13"
																				},
																				"nativeSrc": "5709:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5709:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5733:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5733:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5688:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5688:20:13"
																		},
																		"nativeSrc": "5688:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5688:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5678:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5678:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5429:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5465:9:13",
														"nodeType": "YulTypedName",
														"src": "5465:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5476:7:13",
														"nodeType": "YulTypedName",
														"src": "5476:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5488:6:13",
														"nodeType": "YulTypedName",
														"src": "5488:6:13",
														"type": ""
													}
												],
												"src": "5429:329:13"
											},
											{
												"body": {
													"nativeSrc": "5829:53:13",
													"nodeType": "YulBlock",
													"src": "5829:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5846:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5846:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5869:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5869:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5851:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5851:17:13"
																		},
																		"nativeSrc": "5851:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5851:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5839:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5839:6:13"
																},
																"nativeSrc": "5839:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:13"
															},
															"nativeSrc": "5839:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5839:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5764:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5817:5:13",
														"nodeType": "YulTypedName",
														"src": "5817:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5824:3:13",
														"nodeType": "YulTypedName",
														"src": "5824:3:13",
														"type": ""
													}
												],
												"src": "5764:118:13"
											},
											{
												"body": {
													"nativeSrc": "5986:124:13",
													"nodeType": "YulBlock",
													"src": "5986:124:13",
													"statements": [
														{
															"nativeSrc": "5996:26:13",
															"nodeType": "YulAssignment",
															"src": "5996:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6008:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6008:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6004:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6004:3:13"
																},
																"nativeSrc": "6004:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6004:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5996:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5996:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6076:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6076:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6089:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6089:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6100:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6085:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6085:3:13"
																		},
																		"nativeSrc": "6085:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6085:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6032:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6032:43:13"
																},
																"nativeSrc": "6032:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6032:71:13"
															},
															"nativeSrc": "6032:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6032:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5888:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5958:9:13",
														"nodeType": "YulTypedName",
														"src": "5958:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5970:6:13",
														"nodeType": "YulTypedName",
														"src": "5970:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5981:4:13",
														"nodeType": "YulTypedName",
														"src": "5981:4:13",
														"type": ""
													}
												],
												"src": "5888:222:13"
											},
											{
												"body": {
													"nativeSrc": "6199:391:13",
													"nodeType": "YulBlock",
													"src": "6199:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6245:83:13",
																"nodeType": "YulBlock",
																"src": "6245:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6247:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6247:77:13"
																			},
																			"nativeSrc": "6247:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6247:79:13"
																		},
																		"nativeSrc": "6247:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6220:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6220:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6229:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6229:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6216:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:13"
																		},
																		"nativeSrc": "6216:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6216:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6241:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6241:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6212:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6212:3:13"
																},
																"nativeSrc": "6212:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6212:32:13"
															},
															"nativeSrc": "6209:119:13",
															"nodeType": "YulIf",
															"src": "6209:119:13"
														},
														{
															"nativeSrc": "6338:117:13",
															"nodeType": "YulBlock",
															"src": "6338:117:13",
															"statements": [
																{
																	"nativeSrc": "6353:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6353:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6367:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6367:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6357:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6357:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6382:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6382:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6417:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6417:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6428:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6428:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6413:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6413:3:13"
																				},
																				"nativeSrc": "6413:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6413:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6437:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6437:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6392:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6392:20:13"
																		},
																		"nativeSrc": "6392:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6392:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6382:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6465:118:13",
															"nodeType": "YulBlock",
															"src": "6465:118:13",
															"statements": [
																{
																	"nativeSrc": "6480:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6480:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6494:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6494:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6484:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6484:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6510:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6510:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6545:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6545:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6556:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6556:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6541:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6541:3:13"
																				},
																				"nativeSrc": "6541:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6541:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6565:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6565:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6520:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6520:20:13"
																		},
																		"nativeSrc": "6520:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6520:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6510:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6510:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6116:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6161:9:13",
														"nodeType": "YulTypedName",
														"src": "6161:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6172:7:13",
														"nodeType": "YulTypedName",
														"src": "6172:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6184:6:13",
														"nodeType": "YulTypedName",
														"src": "6184:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6192:6:13",
														"nodeType": "YulTypedName",
														"src": "6192:6:13",
														"type": ""
													}
												],
												"src": "6116:474:13"
											},
											{
												"body": {
													"nativeSrc": "6639:43:13",
													"nodeType": "YulBlock",
													"src": "6639:43:13",
													"statements": [
														{
															"nativeSrc": "6649:27:13",
															"nodeType": "YulAssignment",
															"src": "6649:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6664:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6664:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6671:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6671:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6660:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6660:3:13"
																},
																"nativeSrc": "6660:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6660:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6649:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6649:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6596:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6621:5:13",
														"nodeType": "YulTypedName",
														"src": "6621:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6631:7:13",
														"nodeType": "YulTypedName",
														"src": "6631:7:13",
														"type": ""
													}
												],
												"src": "6596:86:13"
											},
											{
												"body": {
													"nativeSrc": "6749:51:13",
													"nodeType": "YulBlock",
													"src": "6749:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6766:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6766:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6787:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6787:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6771:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "6771:15:13"
																		},
																		"nativeSrc": "6771:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6771:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6759:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:13"
																},
																"nativeSrc": "6759:35:13",
																"nodeType": "YulFunctionCall",
																"src": "6759:35:13"
															},
															"nativeSrc": "6759:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "6759:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6688:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6737:5:13",
														"nodeType": "YulTypedName",
														"src": "6737:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6744:3:13",
														"nodeType": "YulTypedName",
														"src": "6744:3:13",
														"type": ""
													}
												],
												"src": "6688:112:13"
											},
											{
												"body": {
													"nativeSrc": "6900:120:13",
													"nodeType": "YulBlock",
													"src": "6900:120:13",
													"statements": [
														{
															"nativeSrc": "6910:26:13",
															"nodeType": "YulAssignment",
															"src": "6910:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6918:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6918:3:13"
																},
																"nativeSrc": "6918:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6918:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6910:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6910:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6986:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6986:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6999:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6999:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7010:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7010:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:13"
																		},
																		"nativeSrc": "6995:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6946:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "6946:39:13"
																},
																"nativeSrc": "6946:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6946:67:13"
															},
															"nativeSrc": "6946:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "6946:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6806:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6872:9:13",
														"nodeType": "YulTypedName",
														"src": "6872:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6884:6:13",
														"nodeType": "YulTypedName",
														"src": "6884:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6895:4:13",
														"nodeType": "YulTypedName",
														"src": "6895:4:13",
														"type": ""
													}
												],
												"src": "6806:214:13"
											},
											{
												"body": {
													"nativeSrc": "7092:263:13",
													"nodeType": "YulBlock",
													"src": "7092:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7138:83:13",
																"nodeType": "YulBlock",
																"src": "7138:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7140:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7140:77:13"
																			},
																			"nativeSrc": "7140:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7140:79:13"
																		},
																		"nativeSrc": "7140:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7140:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7113:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7113:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7122:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7122:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7109:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7109:3:13"
																		},
																		"nativeSrc": "7109:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7109:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7134:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7134:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7105:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7105:3:13"
																},
																"nativeSrc": "7105:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7105:32:13"
															},
															"nativeSrc": "7102:119:13",
															"nodeType": "YulIf",
															"src": "7102:119:13"
														},
														{
															"nativeSrc": "7231:117:13",
															"nodeType": "YulBlock",
															"src": "7231:117:13",
															"statements": [
																{
																	"nativeSrc": "7246:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7246:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7260:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7260:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7250:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7250:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7275:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7275:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7310:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7310:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7321:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7321:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7306:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7306:3:13"
																				},
																				"nativeSrc": "7306:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7306:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7330:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7330:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7285:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7285:20:13"
																		},
																		"nativeSrc": "7285:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7285:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7275:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7275:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7026:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7062:9:13",
														"nodeType": "YulTypedName",
														"src": "7062:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7073:7:13",
														"nodeType": "YulTypedName",
														"src": "7073:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7085:6:13",
														"nodeType": "YulTypedName",
														"src": "7085:6:13",
														"type": ""
													}
												],
												"src": "7026:329:13"
											},
											{
												"body": {
													"nativeSrc": "7444:391:13",
													"nodeType": "YulBlock",
													"src": "7444:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:83:13",
																"nodeType": "YulBlock",
																"src": "7490:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7492:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7492:77:13"
																			},
																			"nativeSrc": "7492:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:79:13"
																		},
																		"nativeSrc": "7492:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7465:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7465:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7461:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:13"
																		},
																		"nativeSrc": "7461:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7457:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:13"
																},
																"nativeSrc": "7457:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7457:32:13"
															},
															"nativeSrc": "7454:119:13",
															"nodeType": "YulIf",
															"src": "7454:119:13"
														},
														{
															"nativeSrc": "7583:117:13",
															"nodeType": "YulBlock",
															"src": "7583:117:13",
															"statements": [
																{
																	"nativeSrc": "7598:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7598:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7612:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7602:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7602:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7627:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7627:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7662:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7673:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7658:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:13"
																				},
																				"nativeSrc": "7658:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7682:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7637:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7637:20:13"
																		},
																		"nativeSrc": "7637:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7627:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7710:118:13",
															"nodeType": "YulBlock",
															"src": "7710:118:13",
															"statements": [
																{
																	"nativeSrc": "7725:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7725:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7739:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7739:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7729:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7729:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7755:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7755:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7790:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7790:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7801:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7801:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7786:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7786:3:13"
																				},
																				"nativeSrc": "7786:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7786:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7810:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7810:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7765:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7765:20:13"
																		},
																		"nativeSrc": "7765:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7755:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7755:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7361:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:13",
														"nodeType": "YulTypedName",
														"src": "7406:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7417:7:13",
														"nodeType": "YulTypedName",
														"src": "7417:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7429:6:13",
														"nodeType": "YulTypedName",
														"src": "7429:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7437:6:13",
														"nodeType": "YulTypedName",
														"src": "7437:6:13",
														"type": ""
													}
												],
												"src": "7361:474:13"
											},
											{
												"body": {
													"nativeSrc": "7869:152:13",
													"nodeType": "YulBlock",
													"src": "7869:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7889:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7879:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:13"
																},
																"nativeSrc": "7879:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7879:88:13"
															},
															"nativeSrc": "7879:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7879:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:13",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:13"
																},
																"nativeSrc": "7976:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:13"
															},
															"nativeSrc": "7976:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8010:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:13"
																},
																"nativeSrc": "8000:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8000:15:13"
															},
															"nativeSrc": "8000:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8000:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7841:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7841:180:13"
											},
											{
												"body": {
													"nativeSrc": "8078:269:13",
													"nodeType": "YulBlock",
													"src": "8078:269:13",
													"statements": [
														{
															"nativeSrc": "8088:22:13",
															"nodeType": "YulAssignment",
															"src": "8088:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8102:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8102:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8108:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8098:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:13"
																},
																"nativeSrc": "8098:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8098:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8088:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:13"
																}
															]
														},
														{
															"nativeSrc": "8119:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8119:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8149:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8155:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8155:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8145:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8145:3:13"
																},
																"nativeSrc": "8145:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8145:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8123:18:13",
																	"nodeType": "YulTypedName",
																	"src": "8123:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8196:51:13",
																"nodeType": "YulBlock",
																"src": "8196:51:13",
																"statements": [
																	{
																		"nativeSrc": "8210:27:13",
																		"nodeType": "YulAssignment",
																		"src": "8210:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8224:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8224:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8232:4:13",
																					"nodeType": "YulLiteral",
																					"src": "8232:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8220:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8220:3:13"
																			},
																			"nativeSrc": "8220:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8210:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8210:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8176:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "8176:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8169:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:13"
																},
																"nativeSrc": "8169:26:13",
																"nodeType": "YulFunctionCall",
																"src": "8169:26:13"
															},
															"nativeSrc": "8166:81:13",
															"nodeType": "YulIf",
															"src": "8166:81:13"
														},
														{
															"body": {
																"nativeSrc": "8299:42:13",
																"nodeType": "YulBlock",
																"src": "8299:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8313:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8313:16:13"
																			},
																			"nativeSrc": "8313:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8313:18:13"
																		},
																		"nativeSrc": "8313:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8313:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8263:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "8263:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8286:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8286:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8294:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8294:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8283:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8283:2:13"
																		},
																		"nativeSrc": "8283:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8283:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8260:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8260:2:13"
																},
																"nativeSrc": "8260:38:13",
																"nodeType": "YulFunctionCall",
																"src": "8260:38:13"
															},
															"nativeSrc": "8257:84:13",
															"nodeType": "YulIf",
															"src": "8257:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8027:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8062:4:13",
														"nodeType": "YulTypedName",
														"src": "8062:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8071:6:13",
														"nodeType": "YulTypedName",
														"src": "8071:6:13",
														"type": ""
													}
												],
												"src": "8027:320:13"
											},
											{
												"body": {
													"nativeSrc": "8418:53:13",
													"nodeType": "YulBlock",
													"src": "8418:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8435:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8435:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8458:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8458:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8440:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "8440:17:13"
																		},
																		"nativeSrc": "8440:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8440:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8428:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8428:6:13"
																},
																"nativeSrc": "8428:37:13",
																"nodeType": "YulFunctionCall",
																"src": "8428:37:13"
															},
															"nativeSrc": "8428:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "8428:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8353:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8406:5:13",
														"nodeType": "YulTypedName",
														"src": "8406:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8413:3:13",
														"nodeType": "YulTypedName",
														"src": "8413:3:13",
														"type": ""
													}
												],
												"src": "8353:118:13"
											},
											{
												"body": {
													"nativeSrc": "8631:288:13",
													"nodeType": "YulBlock",
													"src": "8631:288:13",
													"statements": [
														{
															"nativeSrc": "8641:26:13",
															"nodeType": "YulAssignment",
															"src": "8641:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8653:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8653:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8664:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8664:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8649:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8649:3:13"
																},
																"nativeSrc": "8649:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8649:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8641:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8641:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8721:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8721:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8734:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8734:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8745:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8745:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8730:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8730:3:13"
																		},
																		"nativeSrc": "8730:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8730:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8677:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8677:43:13"
																},
																"nativeSrc": "8677:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8677:71:13"
															},
															"nativeSrc": "8677:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8677:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8802:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8802:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8815:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8826:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8826:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8811:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:13"
																		},
																		"nativeSrc": "8811:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8811:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8758:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8758:43:13"
																},
																"nativeSrc": "8758:72:13",
																"nodeType": "YulFunctionCall",
																"src": "8758:72:13"
															},
															"nativeSrc": "8758:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "8758:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8884:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8884:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8897:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8897:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8908:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8908:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8893:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8893:3:13"
																		},
																		"nativeSrc": "8893:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8893:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8840:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8840:43:13"
																},
																"nativeSrc": "8840:72:13",
																"nodeType": "YulFunctionCall",
																"src": "8840:72:13"
															},
															"nativeSrc": "8840:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "8840:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8477:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8587:9:13",
														"nodeType": "YulTypedName",
														"src": "8587:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8599:6:13",
														"nodeType": "YulTypedName",
														"src": "8599:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8607:6:13",
														"nodeType": "YulTypedName",
														"src": "8607:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8615:6:13",
														"nodeType": "YulTypedName",
														"src": "8615:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8626:4:13",
														"nodeType": "YulTypedName",
														"src": "8626:4:13",
														"type": ""
													}
												],
												"src": "8477:442:13"
											},
											{
												"body": {
													"nativeSrc": "9023:124:13",
													"nodeType": "YulBlock",
													"src": "9023:124:13",
													"statements": [
														{
															"nativeSrc": "9033:26:13",
															"nodeType": "YulAssignment",
															"src": "9033:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9045:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9045:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9056:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9056:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9041:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:13"
																},
																"nativeSrc": "9041:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9041:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9033:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9033:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9113:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9113:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9126:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9126:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9137:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9137:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9122:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9122:3:13"
																		},
																		"nativeSrc": "9122:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9122:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9069:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9069:43:13"
																},
																"nativeSrc": "9069:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9069:71:13"
															},
															"nativeSrc": "9069:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9069:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8925:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8995:9:13",
														"nodeType": "YulTypedName",
														"src": "8995:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9007:6:13",
														"nodeType": "YulTypedName",
														"src": "9007:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9018:4:13",
														"nodeType": "YulTypedName",
														"src": "9018:4:13",
														"type": ""
													}
												],
												"src": "8925:222:13"
											},
											{
												"body": {
													"nativeSrc": "9181:152:13",
													"nodeType": "YulBlock",
													"src": "9181:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9198:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9198:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9201:77:13",
																		"nodeType": "YulLiteral",
																		"src": "9201:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9191:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9191:6:13"
																},
																"nativeSrc": "9191:88:13",
																"nodeType": "YulFunctionCall",
																"src": "9191:88:13"
															},
															"nativeSrc": "9191:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "9191:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9295:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9295:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9298:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9298:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9288:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9288:6:13"
																},
																"nativeSrc": "9288:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9288:15:13"
															},
															"nativeSrc": "9288:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9288:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9319:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9319:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9322:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9322:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9312:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:13"
																},
																"nativeSrc": "9312:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9312:15:13"
															},
															"nativeSrc": "9312:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9312:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9153:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9153:180:13"
											},
											{
												"body": {
													"nativeSrc": "9383:147:13",
													"nodeType": "YulBlock",
													"src": "9383:147:13",
													"statements": [
														{
															"nativeSrc": "9393:25:13",
															"nodeType": "YulAssignment",
															"src": "9393:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9416:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9416:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9398:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9398:17:13"
																},
																"nativeSrc": "9398:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9398:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9393:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9393:1:13"
																}
															]
														},
														{
															"nativeSrc": "9427:25:13",
															"nodeType": "YulAssignment",
															"src": "9427:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9450:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9450:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9432:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9432:17:13"
																},
																"nativeSrc": "9432:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9432:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9427:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9427:1:13"
																}
															]
														},
														{
															"nativeSrc": "9461:16:13",
															"nodeType": "YulAssignment",
															"src": "9461:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9472:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9472:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9475:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9475:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9468:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9468:3:13"
																},
																"nativeSrc": "9468:9:13",
																"nodeType": "YulFunctionCall",
																"src": "9468:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9461:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9461:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9501:22:13",
																"nodeType": "YulBlock",
																"src": "9501:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9503:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9503:16:13"
																			},
																			"nativeSrc": "9503:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9503:18:13"
																		},
																		"nativeSrc": "9503:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9503:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9493:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9493:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9496:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9496:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9490:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9490:2:13"
																},
																"nativeSrc": "9490:10:13",
																"nodeType": "YulFunctionCall",
																"src": "9490:10:13"
															},
															"nativeSrc": "9487:36:13",
															"nodeType": "YulIf",
															"src": "9487:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9339:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9370:1:13",
														"nodeType": "YulTypedName",
														"src": "9370:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9373:1:13",
														"nodeType": "YulTypedName",
														"src": "9373:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9379:3:13",
														"nodeType": "YulTypedName",
														"src": "9379:3:13",
														"type": ""
													}
												],
												"src": "9339:191:13"
											},
											{
												"body": {
													"nativeSrc": "9662:206:13",
													"nodeType": "YulBlock",
													"src": "9662:206:13",
													"statements": [
														{
															"nativeSrc": "9672:26:13",
															"nodeType": "YulAssignment",
															"src": "9672:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9684:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9684:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9695:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9695:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9680:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9680:3:13"
																},
																"nativeSrc": "9680:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9680:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9672:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9672:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9752:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9752:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9765:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9765:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9776:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9776:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9761:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9761:3:13"
																		},
																		"nativeSrc": "9761:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9761:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9708:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9708:43:13"
																},
																"nativeSrc": "9708:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9708:71:13"
															},
															"nativeSrc": "9708:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9708:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9833:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9833:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9846:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9846:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9857:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9857:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:13"
																		},
																		"nativeSrc": "9842:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9789:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9789:43:13"
																},
																"nativeSrc": "9789:72:13",
																"nodeType": "YulFunctionCall",
																"src": "9789:72:13"
															},
															"nativeSrc": "9789:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "9789:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "9536:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9626:9:13",
														"nodeType": "YulTypedName",
														"src": "9626:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9638:6:13",
														"nodeType": "YulTypedName",
														"src": "9638:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9646:6:13",
														"nodeType": "YulTypedName",
														"src": "9646:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9657:4:13",
														"nodeType": "YulTypedName",
														"src": "9657:4:13",
														"type": ""
													}
												],
												"src": "9536:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610114575f3560e01c806340c10f19116100a0578063a217fddf1161006f578063a217fddf14610304578063a9059cbb14610322578063d539139314610352578063d547741f14610370578063dd62ed3e1461038c57610114565b806340c10f191461026a57806370a082311461028657806391d14854146102b657806395d89b41146102e657610114565b806323b872dd116100e757806323b872dd146101b4578063248a9ca3146101e45780632f2ff15d14610214578063313ce5671461023057806336568abe1461024e57610114565b806301ffc9a71461011857806306fdde0314610148578063095ea7b31461016657806318160ddd14610196575b5f5ffd5b610132600480360381019061012d9190611140565b6103bc565b60405161013f9190611185565b60405180910390f35b610150610435565b60405161015d919061120e565b60405180910390f35b610180600480360381019061017b91906112bb565b6104c5565b60405161018d9190611185565b60405180910390f35b61019e6104e7565b6040516101ab9190611308565b60405180910390f35b6101ce60048036038101906101c99190611321565b6104f0565b6040516101db9190611185565b60405180910390f35b6101fe60048036038101906101f991906113a4565b61051e565b60405161020b91906113de565b60405180910390f35b61022e600480360381019061022991906113f7565b61053b565b005b61023861055d565b6040516102459190611450565b60405180910390f35b610268600480360381019061026391906113f7565b610565565b005b610284600480360381019061027f91906112bb565b6105e0565b005b6102a0600480360381019061029b9190611469565b610619565b6040516102ad9190611308565b60405180910390f35b6102d060048036038101906102cb91906113f7565b61065e565b6040516102dd9190611185565b60405180910390f35b6102ee6106c2565b6040516102fb919061120e565b60405180910390f35b61030c610752565b60405161031991906113de565b60405180910390f35b61033c600480360381019061033791906112bb565b610758565b6040516103499190611185565b60405180910390f35b61035a61077a565b60405161036791906113de565b60405180910390f35b61038a600480360381019061038591906113f7565b61079e565b005b6103a660048036038101906103a19190611494565b6107c0565b6040516103b39190611308565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061042e575061042d82610842565b5b9050919050565b606060038054610444906114ff565b80601f0160208091040260200160405190810160405280929190818152602001828054610470906114ff565b80156104bb5780601f10610492576101008083540402835291602001916104bb565b820191905f5260205f20905b81548152906001019060200180831161049e57829003601f168201915b5050505050905090565b5f5f6104cf6108ab565b90506104dc8185856108b2565b600191505092915050565b5f600254905090565b5f5f6104fa6108ab565b90506105078582856108c4565b610512858585610957565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b6105448261051e565b61054d81610a47565b6105578383610a5b565b50505050565b5f6012905090565b61056d6108ab565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105d1576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105db8282610b45565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661060a81610a47565b6106148383610c2f565b505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b6060600480546106d1906114ff565b80601f01602080910402602001604051908101604052809291908181526020018280546106fd906114ff565b80156107485780601f1061071f57610100808354040283529160200191610748565b820191905f5260205f20905b81548152906001019060200180831161072b57829003601f168201915b5050505050905090565b5f5f1b81565b5f5f6107626108ab565b905061076f818585610957565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6107a78261051e565b6107b081610a47565b6107ba8383610b45565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6108bf8383836001610cae565b505050565b5f6108cf84846107c0565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156109515781811015610942578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016109399392919061153e565b60405180910390fd5b61095084848484035f610cae565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c7575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109be9190611573565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a37575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a2e9190611573565b60405180910390fd5b610a42838383610e7d565b505050565b610a5881610a536108ab565b611096565b50565b5f610a66838361065e565b610b3b57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ad86108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610b3f565b5f90505b92915050565b5f610b50838361065e565b15610c25575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bc26108ab565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610c29565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c9f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610c969190611573565b60405180910390fd5b610caa5f8383610e7d565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d1e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d159190611573565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d859190611573565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610e77578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6e9190611308565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ecd578060025f828254610ec191906115b9565b92505081905550610f9b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610f56578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f4d9392919061153e565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fe2578060025f828254039250508190555061102c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110899190611308565b60405180910390a3505050565b6110a0828261065e565b6110e35780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016110da9291906115ec565b60405180910390fd5b5050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61111f816110eb565b8114611129575f5ffd5b50565b5f8135905061113a81611116565b92915050565b5f60208284031215611155576111546110e7565b5b5f6111628482850161112c565b91505092915050565b5f8115159050919050565b61117f8161116b565b82525050565b5f6020820190506111985f830184611176565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6111e08261119e565b6111ea81856111a8565b93506111fa8185602086016111b8565b611203816111c6565b840191505092915050565b5f6020820190508181035f83015261122681846111d6565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112578261122e565b9050919050565b6112678161124d565b8114611271575f5ffd5b50565b5f813590506112828161125e565b92915050565b5f819050919050565b61129a81611288565b81146112a4575f5ffd5b50565b5f813590506112b581611291565b92915050565b5f5f604083850312156112d1576112d06110e7565b5b5f6112de85828601611274565b92505060206112ef858286016112a7565b9150509250929050565b61130281611288565b82525050565b5f60208201905061131b5f8301846112f9565b92915050565b5f5f5f60608486031215611338576113376110e7565b5b5f61134586828701611274565b935050602061135686828701611274565b9250506040611367868287016112a7565b9150509250925092565b5f819050919050565b61138381611371565b811461138d575f5ffd5b50565b5f8135905061139e8161137a565b92915050565b5f602082840312156113b9576113b86110e7565b5b5f6113c684828501611390565b91505092915050565b6113d881611371565b82525050565b5f6020820190506113f15f8301846113cf565b92915050565b5f5f6040838503121561140d5761140c6110e7565b5b5f61141a85828601611390565b925050602061142b85828601611274565b9150509250929050565b5f60ff82169050919050565b61144a81611435565b82525050565b5f6020820190506114635f830184611441565b92915050565b5f6020828403121561147e5761147d6110e7565b5b5f61148b84828501611274565b91505092915050565b5f5f604083850312156114aa576114a96110e7565b5b5f6114b785828601611274565b92505060206114c885828601611274565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061151657607f821691505b602082108103611529576115286114d2565b5b50919050565b6115388161124d565b82525050565b5f6060820190506115515f83018661152f565b61155e60208301856112f9565b61156b60408301846112f9565b949350505050565b5f6020820190506115865f83018461152f565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6115c382611288565b91506115ce83611288565b92508282019050808211156115e6576115e561158c565b5b92915050565b5f6040820190506115ff5f83018561152f565b61160c60208301846113cf565b939250505056fea2646970667358221220a3acf760a0b26f8553f0a2d8360401c3d461668ab0ad82d7962eed4fe701894f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x38C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2B6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E6 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x24E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x196 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1140 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x435 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x4E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x13A4 JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x53B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x238 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x245 SWAP2 SWAP1 PUSH2 0x1450 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x268 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x565 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x284 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29B SWAP2 SWAP1 PUSH2 0x1469 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CB SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DD SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EE PUSH2 0x6C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FB SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x752 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x12BB JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35A PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x13DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x79E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A1 SWAP2 SWAP1 PUSH2 0x1494 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B3 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x42E JUMPI POP PUSH2 0x42D DUP3 PUSH2 0x842 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x444 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x470 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x492 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x49E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4CF PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x4DC DUP2 DUP6 DUP6 PUSH2 0x8B2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FA PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x507 DUP6 DUP3 DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x512 DUP6 DUP6 DUP6 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x544 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x54D DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x557 DUP4 DUP4 PUSH2 0xA5B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x56D PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DB DUP3 DUP3 PUSH2 0xB45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x60A DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xC2F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x6D1 SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6FD SWAP1 PUSH2 0x14FF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x748 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x71F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x748 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x72B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x762 PUSH2 0x8AB JUMP JUMPDEST SWAP1 POP PUSH2 0x76F DUP2 DUP6 DUP6 PUSH2 0x957 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x7A7 DUP3 PUSH2 0x51E JUMP JUMPDEST PUSH2 0x7B0 DUP2 PUSH2 0xA47 JUMP JUMPDEST PUSH2 0x7BA DUP4 DUP4 PUSH2 0xB45 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8BF DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCAE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8CF DUP5 DUP5 PUSH2 0x7C0 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x951 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x942 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x939 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x950 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCAE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BE SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA37 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA2E SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA42 DUP4 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xA58 DUP2 PUSH2 0xA53 PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x1096 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xA66 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST PUSH2 0xB3B JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xAD8 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xB3F JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB50 DUP4 DUP4 PUSH2 0x65E JUMP JUMPDEST ISZERO PUSH2 0xC25 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBC2 PUSH2 0x8AB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC29 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC9F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC96 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCAA PUSH0 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD15 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD85 SWAP2 SWAP1 PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xE77 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6E SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xECD JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEC1 SWAP2 SWAP1 PUSH2 0x15B9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF9B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xF56 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF4D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x153E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFE2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x102C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A0 DUP3 DUP3 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x10E3 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DA SWAP3 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x111F DUP2 PUSH2 0x10EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1129 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x113A DUP2 PUSH2 0x1116 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1155 JUMPI PUSH2 0x1154 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1162 DUP5 DUP3 DUP6 ADD PUSH2 0x112C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0x116B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH0 DUP4 ADD DUP5 PUSH2 0x1176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11E0 DUP3 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x11EA DUP2 DUP6 PUSH2 0x11A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x11FA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x11B8 JUMP JUMPDEST PUSH2 0x1203 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1226 DUP2 DUP5 PUSH2 0x11D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1257 DUP3 PUSH2 0x122E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1267 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP2 EQ PUSH2 0x1271 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1282 DUP2 PUSH2 0x125E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129A DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP2 EQ PUSH2 0x12A4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12B5 DUP2 PUSH2 0x1291 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12D1 JUMPI PUSH2 0x12D0 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12DE DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12EF DUP6 DUP3 DUP7 ADD PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1302 DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131B PUSH0 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1338 JUMPI PUSH2 0x1337 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1345 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1356 DUP7 DUP3 DUP8 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1367 DUP7 DUP3 DUP8 ADD PUSH2 0x12A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP2 EQ PUSH2 0x138D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x139E DUP2 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B9 JUMPI PUSH2 0x13B8 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C6 DUP5 DUP3 DUP6 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13D8 DUP2 PUSH2 0x1371 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13F1 PUSH0 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140D JUMPI PUSH2 0x140C PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x141A DUP6 DUP3 DUP7 ADD PUSH2 0x1390 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x142B DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144A DUP2 PUSH2 0x1435 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1463 PUSH0 DUP4 ADD DUP5 PUSH2 0x1441 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147E JUMPI PUSH2 0x147D PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x148B DUP5 DUP3 DUP6 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14AA JUMPI PUSH2 0x14A9 PUSH2 0x10E7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14B7 DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14C8 DUP6 DUP3 DUP7 ADD PUSH2 0x1274 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1516 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x14D2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1538 DUP2 PUSH2 0x124D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH0 DUP4 ADD DUP7 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x155E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12F9 JUMP JUMPDEST PUSH2 0x156B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1586 PUSH0 DUP4 ADD DUP5 PUSH2 0x152F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15C3 DUP3 PUSH2 0x1288 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CE DUP4 PUSH2 0x1288 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15E6 JUMPI PUSH2 0x15E5 PUSH2 0x158C JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15FF PUSH0 DUP4 ADD DUP6 PUSH2 0x152F JUMP JUMPDEST PUSH2 0x160C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x13CF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xAC 0xF7 PUSH1 0xA0 0xB2 PUSH16 0x8553F0A2D8360401C3D461668AB0AD82 0xD7 SWAP7 0x2E 0xED 0x4F SWAPN 0x1 DUP10 0x4F PUSH5 0x736F6C6343 STOP ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "226:397:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2707:82:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;513:107:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;273:62:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3551:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:1;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;1779:89:5:-;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;3810:120:1:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;2707:82:5:-;2756:5;2780:2;2773:9;;2707:82;:::o;5328:245:1:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;513:107:11:-;311:24;2464:16:1;2475:4;2464:10;:16::i;:::-;595:17:11::1;601:2;605:6;595:5;:17::i;:::-;513:107:::0;;;:::o;3004:116:5:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2854:136:1:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2187:49:1:-;2232:4;2187:49;;;:::o;3315:178:5:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;273:62:11:-;311:24;273:62;:::o;4642:138:1:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3551:140:5:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;763:146:9:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;3199:103:1:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7458:208:5:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;:35::i;:::-;7458:208;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;3432:197:1:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:619::-;4525:6;4533;4541;4590:2;4578:9;4569:7;4565:23;4561:32;4558:119;;;4596:79;;:::i;:::-;4558:119;4716:1;4741:53;4786:7;4777:6;4766:9;4762:22;4741:53;:::i;:::-;4731:63;;4687:117;4843:2;4869:53;4914:7;4905:6;4894:9;4890:22;4869:53;:::i;:::-;4859:63;;4814:118;4971:2;4997:53;5042:7;5033:6;5022:9;5018:22;4997:53;:::i;:::-;4987:63;;4942:118;4448:619;;;;;:::o;5073:77::-;5110:7;5139:5;5128:16;;5073:77;;;:::o;5156:122::-;5229:24;5247:5;5229:24;:::i;:::-;5222:5;5219:35;5209:63;;5268:1;5265;5258:12;5209:63;5156:122;:::o;5284:139::-;5330:5;5368:6;5355:20;5346:29;;5384:33;5411:5;5384:33;:::i;:::-;5284:139;;;;:::o;5429:329::-;5488:6;5537:2;5525:9;5516:7;5512:23;5508:32;5505:119;;;5543:79;;:::i;:::-;5505:119;5663:1;5688:53;5733:7;5724:6;5713:9;5709:22;5688:53;:::i;:::-;5678:63;;5634:117;5429:329;;;;:::o;5764:118::-;5851:24;5869:5;5851:24;:::i;:::-;5846:3;5839:37;5764:118;;:::o;5888:222::-;5981:4;6019:2;6008:9;6004:18;5996:26;;6032:71;6100:1;6089:9;6085:17;6076:6;6032:71;:::i;:::-;5888:222;;;;:::o;6116:474::-;6184:6;6192;6241:2;6229:9;6220:7;6216:23;6212:32;6209:119;;;6247:79;;:::i;:::-;6209:119;6367:1;6392:53;6437:7;6428:6;6417:9;6413:22;6392:53;:::i;:::-;6382:63;;6338:117;6494:2;6520:53;6565:7;6556:6;6545:9;6541:22;6520:53;:::i;:::-;6510:63;;6465:118;6116:474;;;;;:::o;6596:86::-;6631:7;6671:4;6664:5;6660:16;6649:27;;6596:86;;;:::o;6688:112::-;6771:22;6787:5;6771:22;:::i;:::-;6766:3;6759:35;6688:112;;:::o;6806:214::-;6895:4;6933:2;6922:9;6918:18;6910:26;;6946:67;7010:1;6999:9;6995:17;6986:6;6946:67;:::i;:::-;6806:214;;;;:::o;7026:329::-;7085:6;7134:2;7122:9;7113:7;7109:23;7105:32;7102:119;;;7140:79;;:::i;:::-;7102:119;7260:1;7285:53;7330:7;7321:6;7310:9;7306:22;7285:53;:::i;:::-;7275:63;;7231:117;7026:329;;;;:::o;7361:474::-;7429:6;7437;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7739:2;7765:53;7810:7;7801:6;7790:9;7786:22;7765:53;:::i;:::-;7755:63;;7710:118;7361:474;;;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:320;8071:6;8108:1;8102:4;8098:12;8088:22;;8155:1;8149:4;8145:12;8176:18;8166:81;;8232:4;8224:6;8220:17;8210:27;;8166:81;8294:2;8286:6;8283:14;8263:18;8260:38;8257:84;;8313:18;;:::i;:::-;8257:84;8078:269;8027:320;;;:::o;8353:118::-;8440:24;8458:5;8440:24;:::i;:::-;8435:3;8428:37;8353:118;;:::o;8477:442::-;8626:4;8664:2;8653:9;8649:18;8641:26;;8677:71;8745:1;8734:9;8730:17;8721:6;8677:71;:::i;:::-;8758:72;8826:2;8815:9;8811:18;8802:6;8758:72;:::i;:::-;8840;8908:2;8897:9;8893:18;8884:6;8840:72;:::i;:::-;8477:442;;;;;;:::o;8925:222::-;9018:4;9056:2;9045:9;9041:18;9033:26;;9069:71;9137:1;9126:9;9122:17;9113:6;9069:71;:::i;:::-;8925:222;;;;:::o;9153:180::-;9201:77;9198:1;9191:88;9298:4;9295:1;9288:15;9322:4;9319:1;9312:15;9339:191;9379:3;9398:20;9416:1;9398:20;:::i;:::-;9393:25;;9432:20;9450:1;9432:20;:::i;:::-;9427:25;;9475:1;9472;9468:9;9461:16;;9496:3;9493:1;9490:10;9487:36;;;9503:18;;:::i;:::-;9487:36;9339:191;;;;:::o;9536:332::-;9657:4;9695:2;9684:9;9680:18;9672:26;;9708:71;9776:1;9765:9;9761:17;9752:6;9708:71;:::i;:::-;9789:72;9857:2;9846:9;9842:18;9833:6;9789:72;:::i;:::-;9536:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1141000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "351",
								"MINTER_ROLE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"decimals()": "427",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3188",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 623,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 226,
									"end": 623,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 226,
									"end": 623,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 344,
									"end": 505,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 344,
									"end": 505,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 344,
									"end": 505,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 344,
									"end": 505,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 505,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 344,
									"end": 505,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 505,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 505,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 344,
									"end": 505,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 505,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 344,
									"end": 505,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "4D792043796672696E20434C4620546F6B656E00000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 5,
									"value": "434C460000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 405,
									"end": 447,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 434,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 434,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 436,
									"end": 446,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 405,
									"end": 415,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 405,
									"end": 415,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 405,
									"end": 415,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 405,
									"end": 447,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 405,
									"end": 447,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 405,
									"end": 447,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 405,
									"end": 447,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 405,
									"end": 447,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 405,
									"end": 447,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 458,
									"end": 493,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 311,
									"end": 335,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 482,
									"end": 492,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 458,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 458,
									"end": 468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 458,
									"end": 468,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 458,
									"end": 493,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 458,
									"end": 493,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 458,
									"end": 493,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 458,
									"end": 493,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 458,
									"end": 493,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 458,
									"end": 493,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 226,
									"end": 623,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 226,
									"end": 623,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 13,
									"value": "48"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2280,
									"end": 2288,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 13,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 13,
									"value": "92"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 226,
									"end": 623,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 226,
									"end": 623,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 226,
									"end": 623,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 623,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 226,
									"end": 623,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 623,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 623,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 226,
									"end": 623,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 623,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a3acf760a0b26f8553f0a2d8360401c3d461668ab0ad82d7962eed4fe701894f64736f6c634300081e0033",
									".code": [
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 623,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 620,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 513,
											"end": 620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 513,
											"end": 620,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 513,
											"end": 620,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 513,
											"end": 620,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 513,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 513,
											"end": 620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 513,
											"end": 620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 513,
											"end": 620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 273,
											"end": 335,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 273,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 273,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 513,
											"end": 620,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 513,
											"end": 620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 311,
											"end": 335,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 601,
											"end": 603,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 605,
											"end": 611,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 595,
											"end": 600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 595,
											"end": 612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 595,
											"end": 612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 595,
											"end": 612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 513,
											"end": 620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 273,
											"end": 335,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 311,
											"end": 335,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 273,
											"end": 335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 273,
											"end": 335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7547,
											"end": 7548,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7535,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7528,
											"end": 7549,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7601,
											"end": 7602,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7572,
											"end": 7604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7572,
											"end": 7604,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 7524,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7640,
											"end": 7641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7651,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7653,
											"end": 7658,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 7624,
											"end": 7659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 7624,
											"end": 7659,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7458,
											"end": 7666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4590,
											"end": 4592,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4578,
											"end": 4587,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4569,
											"end": 4576,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4565,
											"end": 4588,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4561,
											"end": 4593,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 4596,
											"end": 4675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 4596,
											"end": 4675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 4558,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 4786,
											"end": 4793,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4783,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4766,
											"end": 4775,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4762,
											"end": 4784,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 4741,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 4741,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4731,
											"end": 4794,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4687,
											"end": 4804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4843,
											"end": 4845,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4914,
											"end": 4921,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4905,
											"end": 4911,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4894,
											"end": 4903,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 4912,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 4869,
											"end": 4922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4869,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4932,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4971,
											"end": 4973,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 5042,
											"end": 5049,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5033,
											"end": 5039,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5031,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5018,
											"end": 5040,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 4997,
											"end": 5050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 4997,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5050,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4942,
											"end": 5060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5110,
											"end": 5117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5139,
											"end": 5144,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5144,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5150,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 5247,
											"end": 5252,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5229,
											"end": 5253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 5229,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5227,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5254,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5268,
											"end": 5269,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5266,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5258,
											"end": 5270,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 5209,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5278,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5156,
											"end": 5278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5330,
											"end": 5335,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5355,
											"end": 5375,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5375,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5384,
											"end": 5417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 5384,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5423,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5284,
											"end": 5423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5537,
											"end": 5539,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5525,
											"end": 5534,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5512,
											"end": 5535,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5508,
											"end": 5540,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 5543,
											"end": 5622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 5543,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 5505,
											"end": 5624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5663,
											"end": 5664,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 5733,
											"end": 5740,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5713,
											"end": 5722,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5709,
											"end": 5731,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5688,
											"end": 5741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 5688,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5678,
											"end": 5741,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 5751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 5869,
											"end": 5874,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5851,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 5851,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5846,
											"end": 5849,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 5882,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5764,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5981,
											"end": 5985,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6008,
											"end": 6017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6004,
											"end": 6022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5996,
											"end": 6022,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6089,
											"end": 6098,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6085,
											"end": 6102,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6076,
											"end": 6082,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 6032,
											"end": 6103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 6032,
											"end": 6103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5888,
											"end": 6110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5888,
											"end": 6110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6184,
											"end": 6190,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6241,
											"end": 6243,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6229,
											"end": 6238,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6220,
											"end": 6227,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6216,
											"end": 6239,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6244,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 6247,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 6247,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6209,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6367,
											"end": 6368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6428,
											"end": 6434,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6417,
											"end": 6426,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 6392,
											"end": 6445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 6392,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6382,
											"end": 6445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6338,
											"end": 6455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6494,
											"end": 6496,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 6565,
											"end": 6572,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 6562,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6541,
											"end": 6563,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6520,
											"end": 6573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 6520,
											"end": 6573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6510,
											"end": 6573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6465,
											"end": 6583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6631,
											"end": 6638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6671,
											"end": 6675,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6664,
											"end": 6669,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6660,
											"end": 6676,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6649,
											"end": 6676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6596,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 6787,
											"end": 6792,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 6771,
											"end": 6793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 6771,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6766,
											"end": 6769,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6759,
											"end": 6794,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6800,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6918,
											"end": 6936,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6910,
											"end": 6936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 7010,
											"end": 7011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6999,
											"end": 7008,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6995,
											"end": 7012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6986,
											"end": 6992,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 6946,
											"end": 7013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 6946,
											"end": 7013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6806,
											"end": 7020,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6806,
											"end": 7020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7136,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7122,
											"end": 7131,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7113,
											"end": 7120,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7109,
											"end": 7132,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7105,
											"end": 7137,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 7140,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 7102,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 7330,
											"end": 7337,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7310,
											"end": 7319,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7306,
											"end": 7328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 7285,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 7285,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7275,
											"end": 7338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7231,
											"end": 7348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7026,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7472,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7457,
											"end": 7489,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 7492,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 7637,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 7810,
											"end": 7817,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7786,
											"end": 7808,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 7765,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7710,
											"end": 7828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7889,
											"end": 7966,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7967,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8015,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8286,
											"end": 8292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8283,
											"end": 8297,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8260,
											"end": 8298,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 8313,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8078,
											"end": 8347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8027,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 8458,
											"end": 8463,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 8440,
											"end": 8464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 8440,
											"end": 8464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8435,
											"end": 8438,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8428,
											"end": 8465,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8353,
											"end": 8471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8626,
											"end": 8630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8666,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8653,
											"end": 8662,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8649,
											"end": 8667,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8641,
											"end": 8667,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8641,
											"end": 8667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 8745,
											"end": 8746,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8734,
											"end": 8743,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8730,
											"end": 8747,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8721,
											"end": 8727,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 8677,
											"end": 8748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 8677,
											"end": 8748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8802,
											"end": 8808,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 8758,
											"end": 8830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 8758,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8908,
											"end": 8910,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8897,
											"end": 8906,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8893,
											"end": 8911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8884,
											"end": 8890,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 8840,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8840,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8477,
											"end": 8919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9018,
											"end": 9022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9058,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9045,
											"end": 9054,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9041,
											"end": 9059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9059,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9033,
											"end": 9059,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9126,
											"end": 9135,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9122,
											"end": 9139,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9113,
											"end": 9119,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 9069,
											"end": 9140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 9069,
											"end": 9140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8925,
											"end": 9147,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8925,
											"end": 9147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9153,
											"end": 9333,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 9153,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9201,
											"end": 9278,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9279,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9298,
											"end": 9302,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9288,
											"end": 9303,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9322,
											"end": 9326,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9319,
											"end": 9320,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9327,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9379,
											"end": 9382,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 9416,
											"end": 9417,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 9398,
											"end": 9418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 9398,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9393,
											"end": 9418,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9393,
											"end": 9418,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 9450,
											"end": 9451,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 9432,
											"end": 9452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 9432,
											"end": 9452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9427,
											"end": 9452,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9427,
											"end": 9452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9475,
											"end": 9476,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9472,
											"end": 9473,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9461,
											"end": 9477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9496,
											"end": 9499,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9493,
											"end": 9494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9490,
											"end": 9500,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 9503,
											"end": 9521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 9503,
											"end": 9521,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 9487,
											"end": 9523,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9339,
											"end": 9530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9339,
											"end": 9530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "tag",
											"source": 13,
											"value": "216"
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9657,
											"end": 9661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9695,
											"end": 9697,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9684,
											"end": 9693,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9680,
											"end": 9698,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9672,
											"end": 9698,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9672,
											"end": 9698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 9776,
											"end": 9777,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9761,
											"end": 9778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9752,
											"end": 9758,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 9708,
											"end": 9779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 9708,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 9857,
											"end": 9859,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9846,
											"end": 9855,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9842,
											"end": 9860,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9833,
											"end": 9839,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 9789,
											"end": 9861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 9789,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts@5.2.0/access/AccessControl.sol",
								"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol",
								"@openzeppelin/contracts@5.2.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.2.0/utils/Context.sol",
								"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol",
								"contracts/MyERC20.sol",
								"contracts/TokenShop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyERC20.sol\":\"MyERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts@5.2.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/MyERC20.sol\":{\"keccak256\":\"0x19e61d8da4c1d69549cb35d32de785917ba41e5ee700aea67b58b53d4bfa61dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dfaf6e7b8254af0d25fd8eb233658f820168feae013300076be07cb574ce463\",\"dweb:/ipfs/QmX98VexfchF1vsVESKkf3WTmCbU1YtMffKFP7ar9dg9dQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 732,
								"contract": "contracts/MyERC20.sol:MyERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 738,
								"contract": "contracts/MyERC20.sol:MyERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 740,
								"contract": "contracts/MyERC20.sol:MyERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 742,
								"contract": "contracts/MyERC20.sol:MyERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 744,
								"contract": "contracts/MyERC20.sol:MyERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 72,
								"contract": "contracts/MyERC20.sol:MyERC20",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)67_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)67_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)67_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)67_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 64,
										"contract": "contracts/MyERC20.sol:MyERC20",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 66,
										"contract": "contracts/MyERC20.sol:MyERC20",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TokenShop.sol": {
				"TokenShop": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenShop__CouldNotWithdraw",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenShop__ZeroETHSent",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "BalanceWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOKEN_DECIMALS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOKEN_USD_PRICE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountInETH",
									"type": "uint256"
								}
							],
							"name": "amountToMint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getChainlinkDataFeedLatestAnswer",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_token",
							"outputs": [
								{
									"internalType": "contract MyERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenShop.sol\":298:2448  contract TokenShop is Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/TokenShop.sol\":702:1043  constructor(address tokenAddress) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TokenShop.sol\":744:754  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/TokenShop.sol\":785:797  tokenAddress */\n  dup1\n    /* \"contracts/TokenShop.sol\":767:798  i_token = MyERC20(tokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/TokenShop.sol\":992:1034  0x694AA1769357215DE4FAC081bf1f309aDC325306 */\n  0x694aa1769357215de4fac081bf1f309adc325306\n    /* \"contracts/TokenShop.sol\":956:1035  i_priceFeed = AggregatorV3Interface(0x694AA1769357215DE4FAC081bf1f309aDC325306) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/TokenShop.sol\":702:1043  constructor(address tokenAddress) Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/TokenShop.sol\":298:2448  contract TokenShop is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TokenShop.sol\":298:2448  contract TokenShop is Ownable {... */\ntag_13:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x196258757463baebc045d1adc1c9c0a55cad7ac5d09ab7b7e1eb31803d9bfbe0\")\n  0x00\n  assignImmutable(\"0xf3aeaf068a1aefba458b860157c44b7473cc66a981c4afb53e18cbdad279e400\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenShop.sol\":298:2448  contract TokenShop is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x9608b232\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xbea4dfb5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x098048e9\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x51b92ffe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5b7f415c\n      eq\n      tag_6\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/TokenShop.sol\":2056:2057  0 */\n      0x00\n        /* \"contracts/TokenShop.sol\":2043:2052  msg.value */\n      callvalue\n        /* \"contracts/TokenShop.sol\":2043:2057  msg.value == 0 */\n      sub\n        /* \"contracts/TokenShop.sol\":2039:2117  if (msg.value == 0) {... */\n      tag_15\n      jumpi\n        /* \"contracts/TokenShop.sol\":2081:2105  TokenShop__ZeroETHSent() */\n      mload(0x40)\n      0xa45fd86c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenShop.sol\":2039:2117  if (msg.value == 0) {... */\n    tag_15:\n        /* \"contracts/TokenShop.sol\":2127:2134  i_token */\n      immutable(\"0x196258757463baebc045d1adc1c9c0a55cad7ac5d09ab7b7e1eb31803d9bfbe0\")\n        /* \"contracts/TokenShop.sol\":2127:2139  i_token.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/TokenShop.sol\":2140:2150  msg.sender */\n      caller\n        /* \"contracts/TokenShop.sol\":2152:2175  amountToMint(msg.value) */\n      tag_16\n        /* \"contracts/TokenShop.sol\":2165:2174  msg.value */\n      callvalue\n        /* \"contracts/TokenShop.sol\":2152:2164  amountToMint */\n      tag_17\n        /* \"contracts/TokenShop.sol\":2152:2175  amountToMint(msg.value) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/TokenShop.sol\":2127:2176  i_token.mint(msg.sender, amountToMint(msg.value)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      revert(0x00, 0x00)\n    tag_20:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_22:\n      stop\n        /* \"contracts/TokenShop.sol\":298:2448  contract TokenShop is Ownable {... */\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/TokenShop.sol\":1428:1932  function amountToMint(uint256 amountInETH) public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      revert(0x00, 0x00)\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_17\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenShop.sol\":2192:2445  function withdraw() external onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      revert(0x00, 0x00)\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/TokenShop.sol\":487:553  uint256 public constant TOKEN_USD_PRICE = 2 * 10 ** TOKEN_DECIMALS */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_32\n      jumpi\n      revert(0x00, 0x00)\n    tag_32:\n      pop\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenShop.sol\":437:480  uint256 public constant TOKEN_DECIMALS = 18 */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      revert(0x00, 0x00)\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      revert(0x00, 0x00)\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      revert(0x00, 0x00)\n    tag_43:\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenShop.sol\":396:428  MyERC20 public immutable i_token */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_48\n      jumpi\n      revert(0x00, 0x00)\n    tag_48:\n      pop\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenShop.sol\":1101:1420  function getChainlinkDataFeedLatestAnswer() public view returns (int) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      revert(0x00, 0x00)\n    tag_53:\n      pop\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      revert(0x00, 0x00)\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/TokenShop.sol\":1428:1932  function amountToMint(uint256 amountInETH) public view returns (uint256) {... */\n    tag_17:\n        /* \"contracts/TokenShop.sol\":1492:1499  uint256 */\n      0x00\n        /* \"contracts/TokenShop.sol\":1562:1576  uint256 ethUsd */\n      0x00\n        /* \"contracts/TokenShop.sol\":1625:1633  10 ** 10 */\n      0x02540be400\n        /* \"contracts/TokenShop.sol\":1587:1621  getChainlinkDataFeedLatestAnswer() */\n      tag_64\n        /* \"contracts/TokenShop.sol\":1587:1619  getChainlinkDataFeedLatestAnswer */\n      tag_55\n        /* \"contracts/TokenShop.sol\":1587:1621  getChainlinkDataFeedLatestAnswer() */\n      jump\t// in\n    tag_64:\n        /* \"contracts/TokenShop.sol\":1579:1633  uint256(getChainlinkDataFeedLatestAnswer()) * 10 ** 10 */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n        /* \"contracts/TokenShop.sol\":1562:1633  uint256 ethUsd = uint256(getChainlinkDataFeedLatestAnswer()) * 10 ** 10 */\n      swap1\n      pop\n        /* \"contracts/TokenShop.sol\":1698:1720  uint256 ethAmountInUSD */\n      0x00\n        /* \"contracts/TokenShop.sol\":1746:1754  10 ** 18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/TokenShop.sol\":1737:1743  ethUsd */\n      dup3\n        /* \"contracts/TokenShop.sol\":1723:1734  amountInETH */\n      dup6\n        /* \"contracts/TokenShop.sol\":1723:1743  amountInETH * ethUsd */\n      tag_67\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_67:\n        /* \"contracts/TokenShop.sol\":1723:1754  amountInETH * ethUsd / 10 ** 18 */\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n        /* \"contracts/TokenShop.sol\":1698:1754  uint256 ethAmountInUSD = amountInETH * ethUsd / 10 ** 18 */\n      swap1\n      pop\n        /* \"contracts/TokenShop.sol\":478:480  18 */\n      0x12\n        /* \"contracts/TokenShop.sol\":533:535  10 */\n      0x0a\n        /* \"contracts/TokenShop.sol\":533:553  10 ** TOKEN_DECIMALS */\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/TokenShop.sol\":529:530  2 */\n      0x02\n        /* \"contracts/TokenShop.sol\":529:553  2 * 10 ** TOKEN_DECIMALS */\n      tag_72\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_72:\n        /* \"contracts/TokenShop.sol\":478:480  18 */\n      0x12\n        /* \"contracts/TokenShop.sol\":1811:1813  10 */\n      0x0a\n        /* \"contracts/TokenShop.sol\":1811:1831  10 ** TOKEN_DECIMALS */\n      tag_73\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_73:\n        /* \"contracts/TokenShop.sol\":1794:1808  ethAmountInUSD */\n      dup3\n        /* \"contracts/TokenShop.sol\":1794:1831  ethAmountInUSD * 10 ** TOKEN_DECIMALS */\n      tag_74\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_74:\n        /* \"contracts/TokenShop.sol\":1793:1850  (ethAmountInUSD * 10 ** TOKEN_DECIMALS) / TOKEN_USD_PRICE */\n      tag_75\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_75:\n        /* \"contracts/TokenShop.sol\":1786:1850  return (ethAmountInUSD * 10 ** TOKEN_DECIMALS) / TOKEN_USD_PRICE */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/TokenShop.sol\":1428:1932  function amountToMint(uint256 amountInETH) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenShop.sol\":2192:2445  function withdraw() external onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_77\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/TokenShop.sol\":2243:2255  bool success */\n      0x00\n        /* \"contracts/TokenShop.sol\":2269:2276  owner() */\n      tag_80\n        /* \"contracts/TokenShop.sol\":2269:2274  owner */\n      tag_45\n        /* \"contracts/TokenShop.sol\":2269:2276  owner() */\n      jump\t// in\n    tag_80:\n        /* \"contracts/TokenShop.sol\":2261:2282  payable(owner()).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/TokenShop.sol\":2290:2311  address(this).balance */\n      selfbalance\n        /* \"contracts/TokenShop.sol\":2261:2316  payable(owner()).call{value: address(this).balance}(\"\") */\n      mload(0x40)\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_85\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_84)\n    tag_85:\n      0x60\n      swap2\n      pop\n    tag_84:\n      pop\n        /* \"contracts/TokenShop.sol\":2242:2316  (bool success, ) = payable(owner()).call{value: address(this).balance}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/TokenShop.sol\":2332:2339  success */\n      dup1\n        /* \"contracts/TokenShop.sol\":2327:2404  if (!success) {... */\n      tag_86\n      jumpi\n        /* \"contracts/TokenShop.sol\":2363:2392  TokenShop__CouldNotWithdraw() */\n      mload(0x40)\n      0xab77f73e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/TokenShop.sol\":2327:2404  if (!success) {... */\n    tag_86:\n        /* \"contracts/TokenShop.sol\":2419:2437  BalanceWithdrawn() */\n      0xd7e29180ed912c1b05c7de92c52d7d4421d50c763bb288a99d28f035576eea69\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/TokenShop.sol\":2231:2445  {... */\n      pop\n        /* \"contracts/TokenShop.sol\":2192:2445  function withdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/TokenShop.sol\":487:553  uint256 public constant TOKEN_USD_PRICE = 2 * 10 ** TOKEN_DECIMALS */\n    tag_34:\n        /* \"contracts/TokenShop.sol\":478:480  18 */\n      0x12\n        /* \"contracts/TokenShop.sol\":533:535  10 */\n      0x0a\n        /* \"contracts/TokenShop.sol\":533:553  10 ** TOKEN_DECIMALS */\n      tag_87\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_87:\n        /* \"contracts/TokenShop.sol\":529:530  2 */\n      0x02\n        /* \"contracts/TokenShop.sol\":529:553  2 * 10 ** TOKEN_DECIMALS */\n      tag_88\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_88:\n        /* \"contracts/TokenShop.sol\":487:553  uint256 public constant TOKEN_USD_PRICE = 2 * 10 ** TOKEN_DECIMALS */\n      dup2\n      jump\t// out\n        /* \"contracts/TokenShop.sol\":437:480  uint256 public constant TOKEN_DECIMALS = 18 */\n    tag_38:\n        /* \"contracts/TokenShop.sol\":478:480  18 */\n      0x12\n        /* \"contracts/TokenShop.sol\":437:480  uint256 public constant TOKEN_DECIMALS = 18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_90\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_92\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_93\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/TokenShop.sol\":396:428  MyERC20 public immutable i_token */\n    tag_50:\n      immutable(\"0x196258757463baebc045d1adc1c9c0a55cad7ac5d09ab7b7e1eb31803d9bfbe0\")\n      dup2\n      jump\t// out\n        /* \"contracts/TokenShop.sol\":1101:1420  function getChainlinkDataFeedLatestAnswer() public view returns (int) {... */\n    tag_55:\n        /* \"contracts/TokenShop.sol\":1166:1169  int */\n      0x00\n        /* \"contracts/TokenShop.sol\":1230:1239  int price */\n      0x00\n        /* \"contracts/TokenShop.sol\":1360:1371  i_priceFeed */\n      immutable(\"0xf3aeaf068a1aefba458b860157c44b7473cc66a981c4afb53e18cbdad279e400\")\n        /* \"contracts/TokenShop.sol\":1360:1387  i_priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/TokenShop.sol\":1360:1389  i_priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"contracts/TokenShop.sol\":1182:1389  (... */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/TokenShop.sol\":1407:1412  price */\n      dup1\n        /* \"contracts/TokenShop.sol\":1400:1412  return price */\n      swap2\n      pop\n      pop\n        /* \"contracts/TokenShop.sol\":1101:1420  function getChainlinkDataFeedLatestAnswer() public view returns (int) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_101\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_78\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_101:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_105\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_93\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_78:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_107\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1855:1862  owner() */\n      tag_109\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1855:1860  owner */\n      tag_45\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_110\n      jumpi\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_111\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_108\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_93:\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_108:\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.2.0/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_115:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_116:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_151\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_115\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_117:\n        /* \"#utility.yul\":328:352   */\n      tag_153\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_116\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:442   */\n    tag_118:\n        /* \"#utility.yul\":402:409   */\n      0x00\n        /* \"#utility.yul\":431:436   */\n      dup2\n        /* \"#utility.yul\":420:436   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:442   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":448:566   */\n    tag_119:\n        /* \"#utility.yul\":535:559   */\n      tag_156\n        /* \"#utility.yul\":553:558   */\n      dup2\n        /* \"#utility.yul\":535:559   */\n      tag_118\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":530:533   */\n      dup3\n        /* \"#utility.yul\":523:560   */\n      mstore\n        /* \"#utility.yul\":448:566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":572:904   */\n    tag_19:\n        /* \"#utility.yul\":693:697   */\n      0x00\n        /* \"#utility.yul\":731:733   */\n      0x40\n        /* \"#utility.yul\":720:729   */\n      dup3\n        /* \"#utility.yul\":716:734   */\n      add\n        /* \"#utility.yul\":708:734   */\n      swap1\n      pop\n        /* \"#utility.yul\":744:815   */\n      tag_158\n        /* \"#utility.yul\":812:813   */\n      0x00\n        /* \"#utility.yul\":801:810   */\n      dup4\n        /* \"#utility.yul\":797:814   */\n      add\n        /* \"#utility.yul\":788:794   */\n      dup6\n        /* \"#utility.yul\":744:815   */\n      tag_117\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":825:897   */\n      tag_159\n        /* \"#utility.yul\":893:895   */\n      0x20\n        /* \"#utility.yul\":882:891   */\n      dup4\n        /* \"#utility.yul\":878:896   */\n      add\n        /* \"#utility.yul\":869:875   */\n      dup5\n        /* \"#utility.yul\":825:897   */\n      tag_119\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":572:904   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":991:1108   */\n    tag_121:\n        /* \"#utility.yul\":1100:1101   */\n      0x00\n        /* \"#utility.yul\":1097:1098   */\n      0x00\n        /* \"#utility.yul\":1090:1102   */\n      revert\n        /* \"#utility.yul\":1237:1359   */\n    tag_123:\n        /* \"#utility.yul\":1310:1334   */\n      tag_164\n        /* \"#utility.yul\":1328:1333   */\n      dup2\n        /* \"#utility.yul\":1310:1334   */\n      tag_118\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1303:1308   */\n      dup2\n        /* \"#utility.yul\":1300:1335   */\n      eq\n        /* \"#utility.yul\":1290:1353   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":1349:1350   */\n      0x00\n        /* \"#utility.yul\":1346:1347   */\n      0x00\n        /* \"#utility.yul\":1339:1351   */\n      revert\n        /* \"#utility.yul\":1290:1353   */\n    tag_165:\n        /* \"#utility.yul\":1237:1359   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1365:1504   */\n    tag_124:\n        /* \"#utility.yul\":1411:1416   */\n      0x00\n        /* \"#utility.yul\":1449:1455   */\n      dup2\n        /* \"#utility.yul\":1436:1456   */\n      calldataload\n        /* \"#utility.yul\":1427:1456   */\n      swap1\n      pop\n        /* \"#utility.yul\":1465:1498   */\n      tag_167\n        /* \"#utility.yul\":1492:1497   */\n      dup2\n        /* \"#utility.yul\":1465:1498   */\n      tag_123\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1365:1504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1510:1839   */\n    tag_26:\n        /* \"#utility.yul\":1569:1575   */\n      0x00\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1606:1615   */\n      dup3\n        /* \"#utility.yul\":1597:1604   */\n      dup5\n        /* \"#utility.yul\":1593:1616   */\n      sub\n        /* \"#utility.yul\":1589:1621   */\n      slt\n        /* \"#utility.yul\":1586:1705   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":1624:1703   */\n      tag_170\n      tag_121\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":1586:1705   */\n    tag_169:\n        /* \"#utility.yul\":1744:1745   */\n      0x00\n        /* \"#utility.yul\":1769:1822   */\n      tag_171\n        /* \"#utility.yul\":1814:1821   */\n      dup5\n        /* \"#utility.yul\":1805:1811   */\n      dup3\n        /* \"#utility.yul\":1794:1803   */\n      dup6\n        /* \"#utility.yul\":1790:1812   */\n      add\n        /* \"#utility.yul\":1769:1822   */\n      tag_124\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":1759:1822   */\n      swap2\n      pop\n        /* \"#utility.yul\":1715:1832   */\n      pop\n        /* \"#utility.yul\":1510:1839   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1845:2067   */\n    tag_28:\n        /* \"#utility.yul\":1938:1942   */\n      0x00\n        /* \"#utility.yul\":1976:1978   */\n      0x20\n        /* \"#utility.yul\":1965:1974   */\n      dup3\n        /* \"#utility.yul\":1961:1979   */\n      add\n        /* \"#utility.yul\":1953:1979   */\n      swap1\n      pop\n        /* \"#utility.yul\":1989:2060   */\n      tag_173\n        /* \"#utility.yul\":2057:2058   */\n      0x00\n        /* \"#utility.yul\":2046:2055   */\n      dup4\n        /* \"#utility.yul\":2042:2059   */\n      add\n        /* \"#utility.yul\":2033:2039   */\n      dup5\n        /* \"#utility.yul\":1989:2060   */\n      tag_119\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1845:2067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2295   */\n    tag_47:\n        /* \"#utility.yul\":2166:2170   */\n      0x00\n        /* \"#utility.yul\":2204:2206   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2189:2207   */\n      add\n        /* \"#utility.yul\":2181:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2217:2288   */\n      tag_175\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2274:2283   */\n      dup4\n        /* \"#utility.yul\":2270:2287   */\n      add\n        /* \"#utility.yul\":2261:2267   */\n      dup5\n        /* \"#utility.yul\":2217:2288   */\n      tag_117\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2073:2295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2361   */\n    tag_125:\n        /* \"#utility.yul\":2329:2332   */\n      0x00\n        /* \"#utility.yul\":2350:2355   */\n      dup2\n        /* \"#utility.yul\":2343:2355   */\n      swap1\n      pop\n        /* \"#utility.yul\":2301:2361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2367:2509   */\n    tag_126:\n        /* \"#utility.yul\":2417:2426   */\n      0x00\n        /* \"#utility.yul\":2450:2503   */\n      tag_178\n        /* \"#utility.yul\":2468:2502   */\n      tag_179\n        /* \"#utility.yul\":2477:2501   */\n      tag_180\n        /* \"#utility.yul\":2495:2500   */\n      dup5\n        /* \"#utility.yul\":2477:2501   */\n      tag_115\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2468:2502   */\n      tag_125\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2450:2503   */\n      tag_115\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2437:2503   */\n      swap1\n      pop\n        /* \"#utility.yul\":2367:2509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2515:2641   */\n    tag_127:\n        /* \"#utility.yul\":2565:2574   */\n      0x00\n        /* \"#utility.yul\":2598:2635   */\n      tag_182\n        /* \"#utility.yul\":2629:2634   */\n      dup3\n        /* \"#utility.yul\":2598:2635   */\n      tag_126\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2585:2635   */\n      swap1\n      pop\n        /* \"#utility.yul\":2515:2641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2647:2789   */\n    tag_128:\n        /* \"#utility.yul\":2713:2722   */\n      0x00\n        /* \"#utility.yul\":2746:2783   */\n      tag_184\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2746:2783   */\n      tag_127\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2733:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2647:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2958   */\n    tag_129:\n        /* \"#utility.yul\":2898:2951   */\n      tag_186\n        /* \"#utility.yul\":2945:2950   */\n      dup2\n        /* \"#utility.yul\":2898:2951   */\n      tag_128\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2893:2896   */\n      dup3\n        /* \"#utility.yul\":2886:2952   */\n      mstore\n        /* \"#utility.yul\":2795:2958   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3218   */\n    tag_52:\n        /* \"#utility.yul\":3073:3077   */\n      0x00\n        /* \"#utility.yul\":3111:3113   */\n      0x20\n        /* \"#utility.yul\":3100:3109   */\n      dup3\n        /* \"#utility.yul\":3096:3114   */\n      add\n        /* \"#utility.yul\":3088:3114   */\n      swap1\n      pop\n        /* \"#utility.yul\":3124:3211   */\n      tag_188\n        /* \"#utility.yul\":3208:3209   */\n      0x00\n        /* \"#utility.yul\":3197:3206   */\n      dup4\n        /* \"#utility.yul\":3193:3210   */\n      add\n        /* \"#utility.yul\":3184:3190   */\n      dup5\n        /* \"#utility.yul\":3124:3211   */\n      tag_129\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2964:3218   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3224:3300   */\n    tag_130:\n        /* \"#utility.yul\":3260:3267   */\n      0x00\n        /* \"#utility.yul\":3289:3294   */\n      dup2\n        /* \"#utility.yul\":3278:3294   */\n      swap1\n      pop\n        /* \"#utility.yul\":3224:3300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3306:3421   */\n    tag_131:\n        /* \"#utility.yul\":3391:3414   */\n      tag_191\n        /* \"#utility.yul\":3408:3413   */\n      dup2\n        /* \"#utility.yul\":3391:3414   */\n      tag_130\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3386:3389   */\n      dup3\n        /* \"#utility.yul\":3379:3415   */\n      mstore\n        /* \"#utility.yul\":3306:3421   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3427:3645   */\n    tag_57:\n        /* \"#utility.yul\":3518:3522   */\n      0x00\n        /* \"#utility.yul\":3556:3558   */\n      0x20\n        /* \"#utility.yul\":3545:3554   */\n      dup3\n        /* \"#utility.yul\":3541:3559   */\n      add\n        /* \"#utility.yul\":3533:3559   */\n      swap1\n      pop\n        /* \"#utility.yul\":3569:3638   */\n      tag_193\n        /* \"#utility.yul\":3635:3636   */\n      0x00\n        /* \"#utility.yul\":3624:3633   */\n      dup4\n        /* \"#utility.yul\":3620:3637   */\n      add\n        /* \"#utility.yul\":3611:3617   */\n      dup5\n        /* \"#utility.yul\":3569:3638   */\n      tag_131\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":3427:3645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3651:3773   */\n    tag_132:\n        /* \"#utility.yul\":3724:3748   */\n      tag_195\n        /* \"#utility.yul\":3742:3747   */\n      dup2\n        /* \"#utility.yul\":3724:3748   */\n      tag_116\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":3717:3722   */\n      dup2\n        /* \"#utility.yul\":3714:3749   */\n      eq\n        /* \"#utility.yul\":3704:3767   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":3763:3764   */\n      0x00\n        /* \"#utility.yul\":3760:3761   */\n      0x00\n        /* \"#utility.yul\":3753:3765   */\n      revert\n        /* \"#utility.yul\":3704:3767   */\n    tag_196:\n        /* \"#utility.yul\":3651:3773   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3779:3918   */\n    tag_133:\n        /* \"#utility.yul\":3825:3830   */\n      0x00\n        /* \"#utility.yul\":3863:3869   */\n      dup2\n        /* \"#utility.yul\":3850:3870   */\n      calldataload\n        /* \"#utility.yul\":3841:3870   */\n      swap1\n      pop\n        /* \"#utility.yul\":3879:3912   */\n      tag_198\n        /* \"#utility.yul\":3906:3911   */\n      dup2\n        /* \"#utility.yul\":3879:3912   */\n      tag_132\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3779:3918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3924:4253   */\n    tag_61:\n        /* \"#utility.yul\":3983:3989   */\n      0x00\n        /* \"#utility.yul\":4032:4034   */\n      0x20\n        /* \"#utility.yul\":4020:4029   */\n      dup3\n        /* \"#utility.yul\":4011:4018   */\n      dup5\n        /* \"#utility.yul\":4007:4030   */\n      sub\n        /* \"#utility.yul\":4003:4035   */\n      slt\n        /* \"#utility.yul\":4000:4119   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":4038:4117   */\n      tag_201\n      tag_121\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4000:4119   */\n    tag_200:\n        /* \"#utility.yul\":4158:4159   */\n      0x00\n        /* \"#utility.yul\":4183:4236   */\n      tag_202\n        /* \"#utility.yul\":4228:4235   */\n      dup5\n        /* \"#utility.yul\":4219:4225   */\n      dup3\n        /* \"#utility.yul\":4208:4217   */\n      dup6\n        /* \"#utility.yul\":4204:4226   */\n      add\n        /* \"#utility.yul\":4183:4236   */\n      tag_133\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":4173:4236   */\n      swap2\n      pop\n        /* \"#utility.yul\":4129:4246   */\n      pop\n        /* \"#utility.yul\":3924:4253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4259:4439   */\n    tag_134:\n        /* \"#utility.yul\":4307:4384   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4304:4305   */\n      0x00\n        /* \"#utility.yul\":4297:4385   */\n      mstore\n        /* \"#utility.yul\":4404:4408   */\n      0x11\n        /* \"#utility.yul\":4401:4402   */\n      0x04\n        /* \"#utility.yul\":4394:4409   */\n      mstore\n        /* \"#utility.yul\":4428:4432   */\n      0x24\n        /* \"#utility.yul\":4425:4426   */\n      0x00\n        /* \"#utility.yul\":4418:4433   */\n      revert\n        /* \"#utility.yul\":4445:4855   */\n    tag_66:\n        /* \"#utility.yul\":4485:4492   */\n      0x00\n        /* \"#utility.yul\":4508:4528   */\n      tag_205\n        /* \"#utility.yul\":4526:4527   */\n      dup3\n        /* \"#utility.yul\":4508:4528   */\n      tag_118\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4503:4528   */\n      swap2\n      pop\n        /* \"#utility.yul\":4542:4562   */\n      tag_206\n        /* \"#utility.yul\":4560:4561   */\n      dup4\n        /* \"#utility.yul\":4542:4562   */\n      tag_118\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4537:4562   */\n      swap3\n      pop\n        /* \"#utility.yul\":4597:4598   */\n      dup3\n        /* \"#utility.yul\":4594:4595   */\n      dup3\n        /* \"#utility.yul\":4590:4599   */\n      mul\n        /* \"#utility.yul\":4619:4649   */\n      tag_207\n        /* \"#utility.yul\":4637:4648   */\n      dup2\n        /* \"#utility.yul\":4619:4649   */\n      tag_118\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4608:4649   */\n      swap2\n      pop\n        /* \"#utility.yul\":4798:4799   */\n      dup3\n        /* \"#utility.yul\":4789:4796   */\n      dup3\n        /* \"#utility.yul\":4785:4800   */\n      div\n        /* \"#utility.yul\":4782:4783   */\n      dup5\n        /* \"#utility.yul\":4779:4801   */\n      eq\n        /* \"#utility.yul\":4759:4760   */\n      dup4\n        /* \"#utility.yul\":4752:4761   */\n      iszero\n        /* \"#utility.yul\":4732:4815   */\n      or\n        /* \"#utility.yul\":4709:4848   */\n      tag_208\n      jumpi\n        /* \"#utility.yul\":4828:4846   */\n      tag_209\n      tag_134\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":4709:4848   */\n    tag_208:\n        /* \"#utility.yul\":4493:4855   */\n      pop\n        /* \"#utility.yul\":4445:4855   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4861:5041   */\n    tag_135:\n        /* \"#utility.yul\":4909:4986   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4906:4907   */\n      0x00\n        /* \"#utility.yul\":4899:4987   */\n      mstore\n        /* \"#utility.yul\":5006:5010   */\n      0x12\n        /* \"#utility.yul\":5003:5004   */\n      0x04\n        /* \"#utility.yul\":4996:5011   */\n      mstore\n        /* \"#utility.yul\":5030:5034   */\n      0x24\n        /* \"#utility.yul\":5027:5028   */\n      0x00\n        /* \"#utility.yul\":5020:5035   */\n      revert\n        /* \"#utility.yul\":5047:5232   */\n    tag_69:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5104:5124   */\n      tag_212\n        /* \"#utility.yul\":5122:5123   */\n      dup3\n        /* \"#utility.yul\":5104:5124   */\n      tag_118\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5099:5124   */\n      swap2\n      pop\n        /* \"#utility.yul\":5138:5158   */\n      tag_213\n        /* \"#utility.yul\":5156:5157   */\n      dup4\n        /* \"#utility.yul\":5138:5158   */\n      tag_118\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":5133:5158   */\n      swap3\n      pop\n        /* \"#utility.yul\":5177:5178   */\n      dup3\n        /* \"#utility.yul\":5167:5202   */\n      tag_214\n      jumpi\n        /* \"#utility.yul\":5182:5200   */\n      tag_215\n      tag_135\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":5167:5202   */\n    tag_214:\n        /* \"#utility.yul\":5224:5225   */\n      dup3\n        /* \"#utility.yul\":5221:5222   */\n      dup3\n        /* \"#utility.yul\":5217:5226   */\n      div\n        /* \"#utility.yul\":5212:5226   */\n      swap1\n      pop\n        /* \"#utility.yul\":5047:5232   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5238:5340   */\n    tag_136:\n        /* \"#utility.yul\":5280:5288   */\n      0x00\n        /* \"#utility.yul\":5327:5332   */\n      dup2\n        /* \"#utility.yul\":5324:5325   */\n      0x01\n        /* \"#utility.yul\":5320:5333   */\n      shr\n        /* \"#utility.yul\":5299:5333   */\n      swap1\n      pop\n        /* \"#utility.yul\":5238:5340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5346:6194   */\n    tag_137:\n        /* \"#utility.yul\":5407:5412   */\n      0x00\n        /* \"#utility.yul\":5414:5418   */\n      0x00\n        /* \"#utility.yul\":5438:5444   */\n      dup3\n        /* \"#utility.yul\":5429:5444   */\n      swap2\n      pop\n        /* \"#utility.yul\":5462:5467   */\n      dup4\n        /* \"#utility.yul\":5453:5467   */\n      swap1\n      pop\n        /* \"#utility.yul\":5476:6188   */\n    tag_218:\n        /* \"#utility.yul\":5497:5498   */\n      0x01\n        /* \"#utility.yul\":5487:5495   */\n      dup6\n        /* \"#utility.yul\":5484:5499   */\n      gt\n        /* \"#utility.yul\":5476:6188   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":5592:5596   */\n      dup1\n        /* \"#utility.yul\":5587:5590   */\n      dup7\n        /* \"#utility.yul\":5583:5597   */\n      div\n        /* \"#utility.yul\":5577:5581   */\n      dup2\n        /* \"#utility.yul\":5574:5598   */\n      gt\n        /* \"#utility.yul\":5571:5621   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":5601:5619   */\n      tag_222\n      tag_134\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5571:5621   */\n    tag_221:\n        /* \"#utility.yul\":5651:5652   */\n      0x01\n        /* \"#utility.yul\":5641:5649   */\n      dup6\n        /* \"#utility.yul\":5637:5653   */\n      and\n        /* \"#utility.yul\":5634:6085   */\n      iszero\n      tag_223\n      jumpi\n        /* \"#utility.yul\":6066:6070   */\n      dup1\n        /* \"#utility.yul\":6059:6064   */\n      dup3\n        /* \"#utility.yul\":6055:6071   */\n      mul\n        /* \"#utility.yul\":6046:6071   */\n      swap2\n      pop\n        /* \"#utility.yul\":5634:6085   */\n    tag_223:\n        /* \"#utility.yul\":6116:6120   */\n      dup1\n        /* \"#utility.yul\":6110:6114   */\n      dup2\n        /* \"#utility.yul\":6106:6121   */\n      mul\n        /* \"#utility.yul\":6098:6121   */\n      swap1\n      pop\n        /* \"#utility.yul\":6146:6178   */\n      tag_224\n        /* \"#utility.yul\":6169:6177   */\n      dup6\n        /* \"#utility.yul\":6146:6178   */\n      tag_136\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":6134:6178   */\n      swap5\n      pop\n        /* \"#utility.yul\":5476:6188   */\n      jump(tag_218)\n    tag_220:\n        /* \"#utility.yul\":5346:6194   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6200:7273   */\n    tag_138:\n        /* \"#utility.yul\":6254:6259   */\n      0x00\n        /* \"#utility.yul\":6445:6453   */\n      dup3\n        /* \"#utility.yul\":6435:6475   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":6466:6467   */\n      0x01\n        /* \"#utility.yul\":6457:6467   */\n      swap1\n      pop\n        /* \"#utility.yul\":6468:6473   */\n      jump(tag_225)\n        /* \"#utility.yul\":6435:6475   */\n    tag_226:\n        /* \"#utility.yul\":6494:6498   */\n      dup2\n        /* \"#utility.yul\":6484:6520   */\n      tag_227\n      jumpi\n        /* \"#utility.yul\":6511:6512   */\n      0x00\n        /* \"#utility.yul\":6502:6512   */\n      swap1\n      pop\n        /* \"#utility.yul\":6513:6518   */\n      jump(tag_225)\n        /* \"#utility.yul\":6484:6520   */\n    tag_227:\n        /* \"#utility.yul\":6580:6584   */\n      dup2\n        /* \"#utility.yul\":6628:6629   */\n      0x01\n        /* \"#utility.yul\":6623:6650   */\n      dup2\n      eq\n      tag_229\n      jumpi\n        /* \"#utility.yul\":6664:6665   */\n      0x02\n        /* \"#utility.yul\":6659:6850   */\n      dup2\n      eq\n      tag_230\n      jumpi\n        /* \"#utility.yul\":6573:6850   */\n      jump(tag_228)\n        /* \"#utility.yul\":6623:6650   */\n    tag_229:\n        /* \"#utility.yul\":6641:6642   */\n      0x01\n        /* \"#utility.yul\":6632:6642   */\n      swap2\n      pop\n        /* \"#utility.yul\":6643:6648   */\n      pop\n      jump(tag_225)\n        /* \"#utility.yul\":6659:6850   */\n    tag_230:\n        /* \"#utility.yul\":6704:6707   */\n      0xff\n        /* \"#utility.yul\":6694:6702   */\n      dup5\n        /* \"#utility.yul\":6691:6708   */\n      gt\n        /* \"#utility.yul\":6688:6731   */\n      iszero\n      tag_231\n      jumpi\n        /* \"#utility.yul\":6711:6729   */\n      tag_232\n      tag_134\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":6688:6731   */\n    tag_231:\n        /* \"#utility.yul\":6760:6768   */\n      dup4\n        /* \"#utility.yul\":6757:6758   */\n      0x02\n        /* \"#utility.yul\":6753:6769   */\n      exp\n        /* \"#utility.yul\":6744:6769   */\n      swap2\n      pop\n        /* \"#utility.yul\":6795:6798   */\n      dup5\n        /* \"#utility.yul\":6788:6793   */\n      dup3\n        /* \"#utility.yul\":6785:6799   */\n      gt\n        /* \"#utility.yul\":6782:6822   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":6802:6820   */\n      tag_234\n      tag_134\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":6782:6822   */\n    tag_233:\n        /* \"#utility.yul\":6835:6840   */\n      pop\n      jump(tag_225)\n        /* \"#utility.yul\":6573:6850   */\n    tag_228:\n      pop\n        /* \"#utility.yul\":6959:6961   */\n      0x20\n        /* \"#utility.yul\":6949:6957   */\n      dup4\n        /* \"#utility.yul\":6946:6962   */\n      lt\n        /* \"#utility.yul\":6940:6943   */\n      0x0133\n        /* \"#utility.yul\":6934:6938   */\n      dup4\n        /* \"#utility.yul\":6931:6944   */\n      lt\n        /* \"#utility.yul\":6927:6963   */\n      and\n        /* \"#utility.yul\":6909:6911   */\n      0x4e\n        /* \"#utility.yul\":6899:6907   */\n      dup5\n        /* \"#utility.yul\":6896:6912   */\n      lt\n        /* \"#utility.yul\":6891:6893   */\n      0x0b\n        /* \"#utility.yul\":6885:6889   */\n      dup5\n        /* \"#utility.yul\":6882:6894   */\n      lt\n        /* \"#utility.yul\":6878:6913   */\n      and\n        /* \"#utility.yul\":6862:6973   */\n      or\n        /* \"#utility.yul\":6859:7105   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":7015:7023   */\n      dup3\n        /* \"#utility.yul\":7009:7013   */\n      dup3\n        /* \"#utility.yul\":7005:7024   */\n      exp\n        /* \"#utility.yul\":6996:7024   */\n      swap1\n      pop\n        /* \"#utility.yul\":7050:7053   */\n      dup4\n        /* \"#utility.yul\":7043:7048   */\n      dup2\n        /* \"#utility.yul\":7040:7054   */\n      gt\n        /* \"#utility.yul\":7037:7077   */\n      iszero\n      tag_236\n      jumpi\n        /* \"#utility.yul\":7057:7075   */\n      tag_237\n      tag_134\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":7037:7077   */\n    tag_236:\n        /* \"#utility.yul\":7090:7095   */\n      jump(tag_225)\n        /* \"#utility.yul\":6859:7105   */\n    tag_235:\n        /* \"#utility.yul\":7130:7172   */\n      tag_238\n        /* \"#utility.yul\":7168:7171   */\n      dup5\n        /* \"#utility.yul\":7158:7166   */\n      dup5\n        /* \"#utility.yul\":7152:7156   */\n      dup5\n        /* \"#utility.yul\":7149:7150   */\n      0x01\n        /* \"#utility.yul\":7130:7172   */\n      tag_137\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7115:7172   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":7204:7208   */\n      dup2\n        /* \"#utility.yul\":7199:7202   */\n      dup5\n        /* \"#utility.yul\":7195:7209   */\n      div\n        /* \"#utility.yul\":7188:7193   */\n      dup2\n        /* \"#utility.yul\":7185:7210   */\n      gt\n        /* \"#utility.yul\":7182:7233   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":7213:7231   */\n      tag_240\n      tag_134\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7182:7233   */\n    tag_239:\n        /* \"#utility.yul\":7262:7266   */\n      dup2\n        /* \"#utility.yul\":7255:7260   */\n      dup2\n        /* \"#utility.yul\":7251:7267   */\n      mul\n        /* \"#utility.yul\":7242:7267   */\n      swap1\n      pop\n        /* \"#utility.yul\":6200:7273   */\n    tag_225:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7279:7564   */\n    tag_71:\n        /* \"#utility.yul\":7339:7344   */\n      0x00\n        /* \"#utility.yul\":7363:7386   */\n      tag_242\n        /* \"#utility.yul\":7381:7385   */\n      dup3\n        /* \"#utility.yul\":7363:7386   */\n      tag_118\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7355:7386   */\n      swap2\n      pop\n        /* \"#utility.yul\":7407:7434   */\n      tag_243\n        /* \"#utility.yul\":7425:7433   */\n      dup4\n        /* \"#utility.yul\":7407:7434   */\n      tag_118\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":7395:7434   */\n      swap3\n      pop\n        /* \"#utility.yul\":7453:7557   */\n      tag_244\n        /* \"#utility.yul\":7490:7556   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7480:7488   */\n      dup5\n        /* \"#utility.yul\":7474:7478   */\n      dup5\n        /* \"#utility.yul\":7453:7557   */\n      tag_138\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7444:7557   */\n      swap1\n      pop\n        /* \"#utility.yul\":7279:7564   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7570:7717   */\n    tag_139:\n        /* \"#utility.yul\":7671:7682   */\n      0x00\n        /* \"#utility.yul\":7708:7711   */\n      dup2\n        /* \"#utility.yul\":7693:7711   */\n      swap1\n      pop\n        /* \"#utility.yul\":7570:7717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7723:7837   */\n    tag_140:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7843:8241   */\n    tag_141:\n        /* \"#utility.yul\":8002:8005   */\n      0x00\n        /* \"#utility.yul\":8023:8106   */\n      tag_248\n        /* \"#utility.yul\":8104:8105   */\n      0x00\n        /* \"#utility.yul\":8099:8102   */\n      dup4\n        /* \"#utility.yul\":8023:8106   */\n      tag_139\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8016:8106   */\n      swap2\n      pop\n        /* \"#utility.yul\":8115:8208   */\n      tag_249\n        /* \"#utility.yul\":8204:8207   */\n      dup3\n        /* \"#utility.yul\":8115:8208   */\n      tag_140\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8233:8234   */\n      0x00\n        /* \"#utility.yul\":8228:8231   */\n      dup3\n        /* \"#utility.yul\":8224:8235   */\n      add\n        /* \"#utility.yul\":8217:8235   */\n      swap1\n      pop\n        /* \"#utility.yul\":7843:8241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8247:8626   */\n    tag_82:\n        /* \"#utility.yul\":8431:8434   */\n      0x00\n        /* \"#utility.yul\":8453:8600   */\n      tag_251\n        /* \"#utility.yul\":8596:8599   */\n      dup3\n        /* \"#utility.yul\":8453:8600   */\n      tag_141\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8446:8600   */\n      swap2\n      pop\n        /* \"#utility.yul\":8617:8620   */\n      dup2\n        /* \"#utility.yul\":8610:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8247:8626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8632:8737   */\n    tag_142:\n        /* \"#utility.yul\":8668:8675   */\n      0x00\n        /* \"#utility.yul\":8708:8730   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":8701:8706   */\n      dup3\n        /* \"#utility.yul\":8697:8731   */\n      and\n        /* \"#utility.yul\":8686:8731   */\n      swap1\n      pop\n        /* \"#utility.yul\":8632:8737   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8743:8863   */\n    tag_143:\n        /* \"#utility.yul\":8815:8838   */\n      tag_254\n        /* \"#utility.yul\":8832:8837   */\n      dup2\n        /* \"#utility.yul\":8815:8838   */\n      tag_142\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":8808:8813   */\n      dup2\n        /* \"#utility.yul\":8805:8839   */\n      eq\n        /* \"#utility.yul\":8795:8857   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":8853:8854   */\n      0x00\n        /* \"#utility.yul\":8850:8851   */\n      0x00\n        /* \"#utility.yul\":8843:8855   */\n      revert\n        /* \"#utility.yul\":8795:8857   */\n    tag_255:\n        /* \"#utility.yul\":8743:8863   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8869:9010   */\n    tag_144:\n        /* \"#utility.yul\":8925:8930   */\n      0x00\n        /* \"#utility.yul\":8956:8962   */\n      dup2\n        /* \"#utility.yul\":8950:8963   */\n      mload\n        /* \"#utility.yul\":8941:8963   */\n      swap1\n      pop\n        /* \"#utility.yul\":8972:9004   */\n      tag_257\n        /* \"#utility.yul\":8998:9003   */\n      dup2\n        /* \"#utility.yul\":8972:9004   */\n      tag_143\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":8869:9010   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9016:9136   */\n    tag_145:\n        /* \"#utility.yul\":9088:9111   */\n      tag_259\n        /* \"#utility.yul\":9105:9110   */\n      dup2\n        /* \"#utility.yul\":9088:9111   */\n      tag_130\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9081:9086   */\n      dup2\n        /* \"#utility.yul\":9078:9112   */\n      eq\n        /* \"#utility.yul\":9068:9130   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":9126:9127   */\n      0x00\n        /* \"#utility.yul\":9123:9124   */\n      0x00\n        /* \"#utility.yul\":9116:9128   */\n      revert\n        /* \"#utility.yul\":9068:9130   */\n    tag_260:\n        /* \"#utility.yul\":9016:9136   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9142:9283   */\n    tag_146:\n        /* \"#utility.yul\":9198:9203   */\n      0x00\n        /* \"#utility.yul\":9229:9235   */\n      dup2\n        /* \"#utility.yul\":9223:9236   */\n      mload\n        /* \"#utility.yul\":9214:9236   */\n      swap1\n      pop\n        /* \"#utility.yul\":9245:9277   */\n      tag_262\n        /* \"#utility.yul\":9271:9276   */\n      dup2\n        /* \"#utility.yul\":9245:9277   */\n      tag_145\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9142:9283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9289:9432   */\n    tag_147:\n        /* \"#utility.yul\":9346:9351   */\n      0x00\n        /* \"#utility.yul\":9377:9383   */\n      dup2\n        /* \"#utility.yul\":9371:9384   */\n      mload\n        /* \"#utility.yul\":9362:9384   */\n      swap1\n      pop\n        /* \"#utility.yul\":9393:9426   */\n      tag_264\n        /* \"#utility.yul\":9420:9425   */\n      dup2\n        /* \"#utility.yul\":9393:9426   */\n      tag_123\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9289:9432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9438:10409   */\n    tag_99:\n        /* \"#utility.yul\":9541:9547   */\n      0x00\n        /* \"#utility.yul\":9549:9555   */\n      0x00\n        /* \"#utility.yul\":9557:9563   */\n      0x00\n        /* \"#utility.yul\":9565:9571   */\n      0x00\n        /* \"#utility.yul\":9573:9579   */\n      0x00\n        /* \"#utility.yul\":9622:9625   */\n      0xa0\n        /* \"#utility.yul\":9610:9619   */\n      dup7\n        /* \"#utility.yul\":9601:9608   */\n      dup9\n        /* \"#utility.yul\":9597:9620   */\n      sub\n        /* \"#utility.yul\":9593:9626   */\n      slt\n        /* \"#utility.yul\":9590:9710   */\n      iszero\n      tag_266\n      jumpi\n        /* \"#utility.yul\":9629:9708   */\n      tag_267\n      tag_121\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":9590:9710   */\n    tag_266:\n        /* \"#utility.yul\":9749:9750   */\n      0x00\n        /* \"#utility.yul\":9774:9837   */\n      tag_268\n        /* \"#utility.yul\":9829:9836   */\n      dup9\n        /* \"#utility.yul\":9820:9826   */\n      dup3\n        /* \"#utility.yul\":9809:9818   */\n      dup10\n        /* \"#utility.yul\":9805:9827   */\n      add\n        /* \"#utility.yul\":9774:9837   */\n      tag_144\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":9764:9837   */\n      swap6\n      pop\n        /* \"#utility.yul\":9720:9847   */\n      pop\n        /* \"#utility.yul\":9886:9888   */\n      0x20\n        /* \"#utility.yul\":9912:9975   */\n      tag_269\n        /* \"#utility.yul\":9967:9974   */\n      dup9\n        /* \"#utility.yul\":9958:9964   */\n      dup3\n        /* \"#utility.yul\":9947:9956   */\n      dup10\n        /* \"#utility.yul\":9943:9965   */\n      add\n        /* \"#utility.yul\":9912:9975   */\n      tag_146\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":9902:9975   */\n      swap5\n      pop\n        /* \"#utility.yul\":9857:9985   */\n      pop\n        /* \"#utility.yul\":10024:10026   */\n      0x40\n        /* \"#utility.yul\":10050:10114   */\n      tag_270\n        /* \"#utility.yul\":10106:10113   */\n      dup9\n        /* \"#utility.yul\":10097:10103   */\n      dup3\n        /* \"#utility.yul\":10086:10095   */\n      dup10\n        /* \"#utility.yul\":10082:10104   */\n      add\n        /* \"#utility.yul\":10050:10114   */\n      tag_147\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":10040:10114   */\n      swap4\n      pop\n        /* \"#utility.yul\":9995:10124   */\n      pop\n        /* \"#utility.yul\":10163:10165   */\n      0x60\n        /* \"#utility.yul\":10189:10253   */\n      tag_271\n        /* \"#utility.yul\":10245:10252   */\n      dup9\n        /* \"#utility.yul\":10236:10242   */\n      dup3\n        /* \"#utility.yul\":10225:10234   */\n      dup10\n        /* \"#utility.yul\":10221:10243   */\n      add\n        /* \"#utility.yul\":10189:10253   */\n      tag_147\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10179:10253   */\n      swap3\n      pop\n        /* \"#utility.yul\":10134:10263   */\n      pop\n        /* \"#utility.yul\":10302:10305   */\n      0x80\n        /* \"#utility.yul\":10329:10392   */\n      tag_272\n        /* \"#utility.yul\":10384:10391   */\n      dup9\n        /* \"#utility.yul\":10375:10381   */\n      dup3\n        /* \"#utility.yul\":10364:10373   */\n      dup10\n        /* \"#utility.yul\":10360:10382   */\n      add\n        /* \"#utility.yul\":10329:10392   */\n      tag_144\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10319:10392   */\n      swap2\n      pop\n        /* \"#utility.yul\":10273:10402   */\n      pop\n        /* \"#utility.yul\":9438:10409   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d2252cada2884aa5420f2e6d529de29c51c224a23b0db45cf603077534be16ce64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1500": {
									"entryPoint": null,
									"id": 1500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_475": {
									"entryPoint": null,
									"id": 475,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_571": {
									"entryPoint": 308,
									"id": 571,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:13",
										"nodeType": "YulBlock",
										"src": "0:1551:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nativeSrc": "1267:53:13",
													"nodeType": "YulBlock",
													"src": "1267:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:13"
																		},
																		"nativeSrc": "1289:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:13"
																},
																"nativeSrc": "1277:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:13"
															},
															"nativeSrc": "1277:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:13",
														"nodeType": "YulTypedName",
														"src": "1255:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:13",
														"nodeType": "YulTypedName",
														"src": "1262:3:13",
														"type": ""
													}
												],
												"src": "1202:118:13"
											},
											{
												"body": {
													"nativeSrc": "1424:124:13",
													"nodeType": "YulBlock",
													"src": "1424:124:13",
													"statements": [
														{
															"nativeSrc": "1434:26:13",
															"nodeType": "YulAssignment",
															"src": "1434:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:13"
																},
																"nativeSrc": "1442:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:13"
																		},
																		"nativeSrc": "1523:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:13"
																},
																"nativeSrc": "1470:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:13"
															},
															"nativeSrc": "1470:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:13",
														"nodeType": "YulTypedName",
														"src": "1396:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:13",
														"nodeType": "YulTypedName",
														"src": "1408:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:13",
														"nodeType": "YulTypedName",
														"src": "1419:4:13",
														"type": ""
													}
												],
												"src": "1326:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051610f8a380380610f8a83398181016040528101906100319190610253565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a2575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610099919061028d565b60405180910390fd5b6100b18161013460201b60201c565b508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff168152505073694aa1769357215de4fac081bf1f309adc32530673ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050506102a6565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610222826101f9565b9050919050565b61023281610218565b811461023c575f5ffd5b50565b5f8151905061024d81610229565b92915050565b5f60208284031215610268576102676101f5565b5b5f6102758482850161023f565b91505092915050565b61028781610218565b82525050565b5f6020820190506102a05f83018461027e565b92915050565b60805160a051610cbd6102cd5f395f818160c9015261047a01525f6104a00152610cbd5ff3fe608060405260043610610089575f3560e01c8063715018a611610058578063715018a6146101ff5780638da5cb5b146102155780639608b2321461023f578063bea4dfb514610269578063f2fde38b1461029357610155565b8063098048e9146101595780633ccfd60b1461019557806351b92ffe146101ab5780635b7f415c146101d557610155565b36610155575f34036100c7576040517fa45fd86c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f193361010d346102bb565b6040518363ffffffff1660e01b815260040161012a929190610762565b5f604051808303815f87803b158015610141575f5ffd5b505af1158015610153573d5f5f3e3d5ffd5b005b5f5ffd5b348015610164575f5ffd5b5061017f600480360381019061017a91906107b7565b6102bb565b60405161018c91906107e2565b60405180910390f35b3480156101a0575f5ffd5b506101a961033f565b005b3480156101b6575f5ffd5b506101bf61041c565b6040516101cc91906107e2565b60405180910390f35b3480156101e0575f5ffd5b506101e9610439565b6040516101f691906107e2565b60405180910390f35b34801561020a575f5ffd5b5061021361043e565b005b348015610220575f5ffd5b50610229610451565b60405161023691906107fb565b60405180910390f35b34801561024a575f5ffd5b50610253610478565b604051610260919061086f565b60405180910390f35b348015610274575f5ffd5b5061027d61049c565b60405161028a91906108a0565b60405180910390f35b34801561029e575f5ffd5b506102b960048036038101906102b491906108e3565b610538565b005b5f5f6402540be4006102cb61049c565b6102d5919061093b565b90505f670de0b6b3a764000082856102ed919061093b565b6102f791906109a9565b90506012600a6103079190610b08565b6002610313919061093b565b6012600a6103219190610b08565b8261032c919061093b565b61033691906109a9565b92505050919050565b6103476105bc565b5f610350610451565b73ffffffffffffffffffffffffffffffffffffffff164760405161037390610b7f565b5f6040518083038185875af1925050503d805f81146103ad576040519150601f19603f3d011682016040523d82523d5f602084013e6103b2565b606091505b50509050806103ed576040517fab77f73e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fd7e29180ed912c1b05c7de92c52d7d4421d50c763bb288a99d28f035576eea6960405160405180910390a150565b6012600a61042a9190610b08565b6002610436919061093b565b81565b601281565b6104466105bc565b61044f5f610643565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610507573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061052b9190610c10565b5050509150508091505090565b6105406105bc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105b0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105a791906107fb565b60405180910390fd5b6105b981610643565b50565b6105c4610704565b73ffffffffffffffffffffffffffffffffffffffff166105e2610451565b73ffffffffffffffffffffffffffffffffffffffff161461064157610605610704565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161063891906107fb565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107348261070b565b9050919050565b6107448161072a565b82525050565b5f819050919050565b61075c8161074a565b82525050565b5f6040820190506107755f83018561073b565b6107826020830184610753565b9392505050565b5f5ffd5b6107968161074a565b81146107a0575f5ffd5b50565b5f813590506107b18161078d565b92915050565b5f602082840312156107cc576107cb610789565b5b5f6107d9848285016107a3565b91505092915050565b5f6020820190506107f55f830184610753565b92915050565b5f60208201905061080e5f83018461073b565b92915050565b5f819050919050565b5f61083761083261082d8461070b565b610814565b61070b565b9050919050565b5f6108488261081d565b9050919050565b5f6108598261083e565b9050919050565b6108698161084f565b82525050565b5f6020820190506108825f830184610860565b92915050565b5f819050919050565b61089a81610888565b82525050565b5f6020820190506108b35f830184610891565b92915050565b6108c28161072a565b81146108cc575f5ffd5b50565b5f813590506108dd816108b9565b92915050565b5f602082840312156108f8576108f7610789565b5b5f610905848285016108cf565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109458261074a565b91506109508361074a565b925082820261095e8161074a565b915082820484148315176109755761097461090e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6109b38261074a565b91506109be8361074a565b9250826109ce576109cd61097c565b5b828204905092915050565b5f8160011c9050919050565b5f5f8291508390505b6001851115610a2e57808604811115610a0a57610a0961090e565b5b6001851615610a195780820291505b8081029050610a27856109d9565b94506109ee565b94509492505050565b5f82610a465760019050610b01565b81610a53575f9050610b01565b8160018114610a695760028114610a7357610aa2565b6001915050610b01565b60ff841115610a8557610a8461090e565b5b8360020a915084821115610a9c57610a9b61090e565b5b50610b01565b5060208310610133831016604e8410600b8410161715610ad75782820a905083811115610ad257610ad161090e565b5b610b01565b610ae484848460016109e5565b92509050818404811115610afb57610afa61090e565b5b81810290505b9392505050565b5f610b128261074a565b9150610b1d8361074a565b9250610b4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a37565b905092915050565b5f81905092915050565b50565b5f610b6a5f83610b52565b9150610b7582610b5c565b5f82019050919050565b5f610b8982610b5f565b9150819050919050565b5f69ffffffffffffffffffff82169050919050565b610bb181610b93565b8114610bbb575f5ffd5b50565b5f81519050610bcc81610ba8565b92915050565b610bdb81610888565b8114610be5575f5ffd5b50565b5f81519050610bf681610bd2565b92915050565b5f81519050610c0a8161078d565b92915050565b5f5f5f5f5f60a08688031215610c2957610c28610789565b5b5f610c3688828901610bbe565b9550506020610c4788828901610be8565b9450506040610c5888828901610bfc565b9350506060610c6988828901610bfc565b9250506080610c7a88828901610bbe565b915050929550929590935056fea2646970667358221220d2252cada2884aa5420f2e6d529de29c51c224a23b0db45cf603077534be16ce64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF8A CODESIZE SUB DUP1 PUSH2 0xF8A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x253 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x28D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x134 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH20 0x694AA1769357215DE4FAC081BF1F309ADC325306 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP PUSH2 0x2A6 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x222 DUP3 PUSH2 0x1F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x232 DUP2 PUSH2 0x218 JUMP JUMPDEST DUP2 EQ PUSH2 0x23C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x24D DUP2 PUSH2 0x229 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x268 JUMPI PUSH2 0x267 PUSH2 0x1F5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x275 DUP5 DUP3 DUP6 ADD PUSH2 0x23F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x287 DUP2 PUSH2 0x218 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A0 PUSH0 DUP4 ADD DUP5 PUSH2 0x27E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0xCBD PUSH2 0x2CD PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH1 0xC9 ADD MSTORE PUSH2 0x47A ADD MSTORE PUSH0 PUSH2 0x4A0 ADD MSTORE PUSH2 0xCBD PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x9608B232 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xBEA4DFB5 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x293 JUMPI PUSH2 0x155 JUMP JUMPDEST DUP1 PUSH4 0x98048E9 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x51B92FFE EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x5B7F415C EQ PUSH2 0x1D5 JUMPI PUSH2 0x155 JUMP JUMPDEST CALLDATASIZE PUSH2 0x155 JUMPI PUSH0 CALLVALUE SUB PUSH2 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA45FD86C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER PUSH2 0x10D CALLVALUE PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP3 SWAP2 SWAP1 PUSH2 0x762 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x141 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A9 PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH5 0x2540BE400 PUSH2 0x2CB PUSH2 0x49C JUMP JUMPDEST PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP6 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH1 0xA PUSH2 0x307 SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x321 SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST DUP3 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 PUSH2 0x5BC JUMP JUMPDEST PUSH0 PUSH2 0x350 PUSH2 0x451 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x373 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3ED JUMPI PUSH1 0x40 MLOAD PUSH32 0xAB77F73E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xD7E29180ED912C1B05C7DE92C52D7D4421D50C763BB288A99D28F035576EEA69 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x44F PUSH0 PUSH2 0x643 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x507 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x540 PUSH2 0x5BC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B9 DUP2 PUSH2 0x643 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x704 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E2 PUSH2 0x451 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x641 JUMPI PUSH2 0x605 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x734 DUP3 PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x744 DUP2 PUSH2 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75C DUP2 PUSH2 0x74A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x775 PUSH0 DUP4 ADD DUP6 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x782 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x753 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x796 DUP2 PUSH2 0x74A JUMP JUMPDEST DUP2 EQ PUSH2 0x7A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7B1 DUP2 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH2 0x7CB PUSH2 0x789 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D9 DUP5 DUP3 DUP6 ADD PUSH2 0x7A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80E PUSH0 DUP4 ADD DUP5 PUSH2 0x73B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x837 PUSH2 0x832 PUSH2 0x82D DUP5 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x848 DUP3 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x859 DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x869 DUP2 PUSH2 0x84F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x882 PUSH0 DUP4 ADD DUP5 PUSH2 0x860 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89A DUP2 PUSH2 0x888 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x891 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C2 DUP2 PUSH2 0x72A JUMP JUMPDEST DUP2 EQ PUSH2 0x8CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8DD DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0x789 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x905 DUP5 DUP3 DUP6 ADD PUSH2 0x8CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x945 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0x950 DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x95E DUP2 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x975 JUMPI PUSH2 0x974 PUSH2 0x90E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9B3 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0x9BE DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x9CE JUMPI PUSH2 0x9CD PUSH2 0x97C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xA2E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xA0A JUMPI PUSH2 0xA09 PUSH2 0x90E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xA19 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xA27 DUP6 PUSH2 0x9D9 JUMP JUMPDEST SWAP5 POP PUSH2 0x9EE JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA46 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xB01 JUMP JUMPDEST DUP2 PUSH2 0xA53 JUMPI PUSH0 SWAP1 POP PUSH2 0xB01 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA69 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA73 JUMPI PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB01 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x90E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xA9C JUMPI PUSH2 0xA9B PUSH2 0x90E JUMP JUMPDEST JUMPDEST POP PUSH2 0xB01 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xAD7 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0x90E JUMP JUMPDEST JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH2 0xAE4 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x9E5 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xAFB JUMPI PUSH2 0xAFA PUSH2 0x90E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB12 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0xB1D DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP PUSH2 0xB4A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB6A PUSH0 DUP4 PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP PUSH2 0xB75 DUP3 PUSH2 0xB5C JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB89 DUP3 PUSH2 0xB5F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB93 JUMP JUMPDEST DUP2 EQ PUSH2 0xBBB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBCC DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBDB DUP2 PUSH2 0x888 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBF6 DUP2 PUSH2 0xBD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC0A DUP2 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC29 JUMPI PUSH2 0xC28 PUSH2 0x789 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC36 DUP9 DUP3 DUP10 ADD PUSH2 0xBBE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xC47 DUP9 DUP3 DUP10 ADD PUSH2 0xBE8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xC58 DUP9 DUP3 DUP10 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xC69 DUP9 DUP3 DUP10 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xC7A DUP9 DUP3 DUP10 ADD PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0x25 0x2C 0xAD LOG2 DUP9 BLOBBASEFEE 0xA5 TIMESTAMP 0xF 0x2E PUSH14 0x529DE29C51C224A23B0DB45CF603 SMOD PUSH22 0x34BE16CE64736F6C634300081E003300000000000000 ",
							"sourceMap": "298:2150:12:-:0;;;702:341;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;744:10;1297:1:3;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;785:12:12::1;767:31;;;;;;;;::::0;::::1;992:42;956:79;;;;;;;;::::0;::::1;702:341:::0;298:2150;;2912:187:3;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;298:2150:12:-;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@TOKEN_DECIMALS_1465": {
									"entryPoint": 1081,
									"id": 1465,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOKEN_USD_PRICE_1472": {
									"entryPoint": 1052,
									"id": 1472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1578": {
									"entryPoint": null,
									"id": 1578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_509": {
									"entryPoint": 1468,
									"id": 509,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1340": {
									"entryPoint": 1796,
									"id": 1340,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_571": {
									"entryPoint": 1603,
									"id": 571,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@amountToMint_1554": {
									"entryPoint": 699,
									"id": 1554,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getChainlinkDataFeedLatestAnswer_1515": {
									"entryPoint": 1180,
									"id": 1515,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@i_token_1462": {
									"entryPoint": 1144,
									"id": 1462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_492": {
									"entryPoint": 1105,
									"id": 492,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_523": {
									"entryPoint": 1086,
									"id": 523,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_551": {
									"entryPoint": 1336,
									"id": 551,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1611": {
									"entryPoint": 831,
									"id": 1611,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 3048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 3006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_MyERC20_$1446_to_t_address_fromStack": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_int256_to_t_int256_fromStack": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1890,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_MyERC20_$1446__to_t_address__fromStack_reversed": {
									"entryPoint": 2159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2533,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 2824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 2184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 2963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_MyERC20_$1446_to_t_address": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 2068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 2908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 2984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10412:13",
										"nodeType": "YulBlock",
										"src": "0:10412:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "410:32:13",
													"nodeType": "YulBlock",
													"src": "410:32:13",
													"statements": [
														{
															"nativeSrc": "420:16:13",
															"nodeType": "YulAssignment",
															"src": "420:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "431:5:13",
																"nodeType": "YulIdentifier",
																"src": "431:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "420:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "420:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "365:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "392:5:13",
														"nodeType": "YulTypedName",
														"src": "392:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "402:7:13",
														"nodeType": "YulTypedName",
														"src": "402:7:13",
														"type": ""
													}
												],
												"src": "365:77:13"
											},
											{
												"body": {
													"nativeSrc": "513:53:13",
													"nodeType": "YulBlock",
													"src": "513:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "530:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "530:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "553:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "553:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "535:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "535:17:13"
																		},
																		"nativeSrc": "535:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "535:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "523:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "523:6:13"
																},
																"nativeSrc": "523:37:13",
																"nodeType": "YulFunctionCall",
																"src": "523:37:13"
															},
															"nativeSrc": "523:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "523:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "448:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "501:5:13",
														"nodeType": "YulTypedName",
														"src": "501:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "508:3:13",
														"nodeType": "YulTypedName",
														"src": "508:3:13",
														"type": ""
													}
												],
												"src": "448:118:13"
											},
											{
												"body": {
													"nativeSrc": "698:206:13",
													"nodeType": "YulBlock",
													"src": "698:206:13",
													"statements": [
														{
															"nativeSrc": "708:26:13",
															"nodeType": "YulAssignment",
															"src": "708:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "720:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "720:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "731:2:13",
																		"nodeType": "YulLiteral",
																		"src": "731:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "716:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "716:3:13"
																},
																"nativeSrc": "716:18:13",
																"nodeType": "YulFunctionCall",
																"src": "716:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "708:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "708:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "788:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "788:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "812:1:13",
																				"nodeType": "YulLiteral",
																				"src": "812:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "797:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "797:3:13"
																		},
																		"nativeSrc": "797:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "797:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "744:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "744:43:13"
																},
																"nativeSrc": "744:71:13",
																"nodeType": "YulFunctionCall",
																"src": "744:71:13"
															},
															"nativeSrc": "744:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "744:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "869:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "869:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "882:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "882:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "893:2:13",
																				"nodeType": "YulLiteral",
																				"src": "893:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "878:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "878:3:13"
																		},
																		"nativeSrc": "878:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "878:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "825:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "825:43:13"
																},
																"nativeSrc": "825:72:13",
																"nodeType": "YulFunctionCall",
																"src": "825:72:13"
															},
															"nativeSrc": "825:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "825:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "572:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "662:9:13",
														"nodeType": "YulTypedName",
														"src": "662:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "674:6:13",
														"nodeType": "YulTypedName",
														"src": "674:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "682:6:13",
														"nodeType": "YulTypedName",
														"src": "682:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "693:4:13",
														"nodeType": "YulTypedName",
														"src": "693:4:13",
														"type": ""
													}
												],
												"src": "572:332:13"
											},
											{
												"body": {
													"nativeSrc": "950:35:13",
													"nodeType": "YulBlock",
													"src": "950:35:13",
													"statements": [
														{
															"nativeSrc": "960:19:13",
															"nodeType": "YulAssignment",
															"src": "960:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "976:2:13",
																		"nodeType": "YulLiteral",
																		"src": "976:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "970:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "970:5:13"
																},
																"nativeSrc": "970:9:13",
																"nodeType": "YulFunctionCall",
																"src": "970:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "960:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "960:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "910:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "943:6:13",
														"nodeType": "YulTypedName",
														"src": "943:6:13",
														"type": ""
													}
												],
												"src": "910:75:13"
											},
											{
												"body": {
													"nativeSrc": "1080:28:13",
													"nodeType": "YulBlock",
													"src": "1080:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1097:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1097:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1100:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1100:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1090:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:13"
																},
																"nativeSrc": "1090:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1090:12:13"
															},
															"nativeSrc": "1090:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1090:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "991:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "991:117:13"
											},
											{
												"body": {
													"nativeSrc": "1203:28:13",
													"nodeType": "YulBlock",
													"src": "1203:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1220:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1220:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1223:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1223:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1213:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1213:6:13"
																},
																"nativeSrc": "1213:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1213:12:13"
															},
															"nativeSrc": "1213:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1213:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1114:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1114:117:13"
											},
											{
												"body": {
													"nativeSrc": "1280:79:13",
													"nodeType": "YulBlock",
													"src": "1280:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1337:16:13",
																"nodeType": "YulBlock",
																"src": "1337:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1346:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1346:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1349:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1349:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1339:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1339:6:13"
																			},
																			"nativeSrc": "1339:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1339:12:13"
																		},
																		"nativeSrc": "1339:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1339:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1303:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1303:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1328:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1328:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1310:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1310:17:13"
																				},
																				"nativeSrc": "1310:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1310:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1300:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1300:2:13"
																		},
																		"nativeSrc": "1300:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1300:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1293:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1293:6:13"
																},
																"nativeSrc": "1293:43:13",
																"nodeType": "YulFunctionCall",
																"src": "1293:43:13"
															},
															"nativeSrc": "1290:63:13",
															"nodeType": "YulIf",
															"src": "1290:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1237:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1273:5:13",
														"nodeType": "YulTypedName",
														"src": "1273:5:13",
														"type": ""
													}
												],
												"src": "1237:122:13"
											},
											{
												"body": {
													"nativeSrc": "1417:87:13",
													"nodeType": "YulBlock",
													"src": "1417:87:13",
													"statements": [
														{
															"nativeSrc": "1427:29:13",
															"nodeType": "YulAssignment",
															"src": "1427:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1449:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1449:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1436:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1436:12:13"
																},
																"nativeSrc": "1436:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1436:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1427:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1427:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1492:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1492:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1465:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1465:26:13"
																},
																"nativeSrc": "1465:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1465:33:13"
															},
															"nativeSrc": "1465:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1465:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1365:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1395:6:13",
														"nodeType": "YulTypedName",
														"src": "1395:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1403:3:13",
														"nodeType": "YulTypedName",
														"src": "1403:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1411:5:13",
														"nodeType": "YulTypedName",
														"src": "1411:5:13",
														"type": ""
													}
												],
												"src": "1365:139:13"
											},
											{
												"body": {
													"nativeSrc": "1576:263:13",
													"nodeType": "YulBlock",
													"src": "1576:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1622:83:13",
																"nodeType": "YulBlock",
																"src": "1622:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1624:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1624:77:13"
																			},
																			"nativeSrc": "1624:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1624:79:13"
																		},
																		"nativeSrc": "1624:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1624:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1597:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1597:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1606:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1606:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1593:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1593:3:13"
																		},
																		"nativeSrc": "1593:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1593:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1618:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1618:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1589:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1589:3:13"
																},
																"nativeSrc": "1589:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1589:32:13"
															},
															"nativeSrc": "1586:119:13",
															"nodeType": "YulIf",
															"src": "1586:119:13"
														},
														{
															"nativeSrc": "1715:117:13",
															"nodeType": "YulBlock",
															"src": "1715:117:13",
															"statements": [
																{
																	"nativeSrc": "1730:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1730:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1744:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1744:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1734:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1734:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1759:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1759:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1794:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1794:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1805:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1805:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1790:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1790:3:13"
																				},
																				"nativeSrc": "1790:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1790:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1814:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1814:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1769:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1769:20:13"
																		},
																		"nativeSrc": "1769:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1769:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1759:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1759:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1510:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1546:9:13",
														"nodeType": "YulTypedName",
														"src": "1546:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1557:7:13",
														"nodeType": "YulTypedName",
														"src": "1557:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1569:6:13",
														"nodeType": "YulTypedName",
														"src": "1569:6:13",
														"type": ""
													}
												],
												"src": "1510:329:13"
											},
											{
												"body": {
													"nativeSrc": "1943:124:13",
													"nodeType": "YulBlock",
													"src": "1943:124:13",
													"statements": [
														{
															"nativeSrc": "1953:26:13",
															"nodeType": "YulAssignment",
															"src": "1953:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1965:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1965:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1976:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1976:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1961:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:13"
																},
																"nativeSrc": "1961:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1961:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1953:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1953:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2033:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2033:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2046:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2046:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2057:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2057:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2042:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2042:3:13"
																		},
																		"nativeSrc": "2042:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2042:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1989:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1989:43:13"
																},
																"nativeSrc": "1989:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1989:71:13"
															},
															"nativeSrc": "1989:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1989:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1845:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1915:9:13",
														"nodeType": "YulTypedName",
														"src": "1915:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1927:6:13",
														"nodeType": "YulTypedName",
														"src": "1927:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1938:4:13",
														"nodeType": "YulTypedName",
														"src": "1938:4:13",
														"type": ""
													}
												],
												"src": "1845:222:13"
											},
											{
												"body": {
													"nativeSrc": "2171:124:13",
													"nodeType": "YulBlock",
													"src": "2171:124:13",
													"statements": [
														{
															"nativeSrc": "2181:26:13",
															"nodeType": "YulAssignment",
															"src": "2181:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2193:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2193:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2204:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2204:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2189:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:13"
																},
																"nativeSrc": "2189:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2189:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2181:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2181:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2261:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2261:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2274:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2274:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2285:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2285:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2270:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2270:3:13"
																		},
																		"nativeSrc": "2270:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2270:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2217:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2217:43:13"
																},
																"nativeSrc": "2217:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2217:71:13"
															},
															"nativeSrc": "2217:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2217:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2073:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2143:9:13",
														"nodeType": "YulTypedName",
														"src": "2143:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2155:6:13",
														"nodeType": "YulTypedName",
														"src": "2155:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2166:4:13",
														"nodeType": "YulTypedName",
														"src": "2166:4:13",
														"type": ""
													}
												],
												"src": "2073:222:13"
											},
											{
												"body": {
													"nativeSrc": "2333:28:13",
													"nodeType": "YulBlock",
													"src": "2333:28:13",
													"statements": [
														{
															"nativeSrc": "2343:12:13",
															"nodeType": "YulAssignment",
															"src": "2343:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "2350:5:13",
																"nodeType": "YulIdentifier",
																"src": "2350:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2343:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2343:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2301:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2319:5:13",
														"nodeType": "YulTypedName",
														"src": "2319:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2329:3:13",
														"nodeType": "YulTypedName",
														"src": "2329:3:13",
														"type": ""
													}
												],
												"src": "2301:60:13"
											},
											{
												"body": {
													"nativeSrc": "2427:82:13",
													"nodeType": "YulBlock",
													"src": "2427:82:13",
													"statements": [
														{
															"nativeSrc": "2437:66:13",
															"nodeType": "YulAssignment",
															"src": "2437:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2495:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2495:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2477:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2477:17:13"
																				},
																				"nativeSrc": "2477:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2477:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2468:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "2468:8:13"
																		},
																		"nativeSrc": "2468:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2468:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2450:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2450:17:13"
																},
																"nativeSrc": "2450:53:13",
																"nodeType": "YulFunctionCall",
																"src": "2450:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2437:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2437:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2367:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2407:5:13",
														"nodeType": "YulTypedName",
														"src": "2407:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2417:9:13",
														"nodeType": "YulTypedName",
														"src": "2417:9:13",
														"type": ""
													}
												],
												"src": "2367:142:13"
											},
											{
												"body": {
													"nativeSrc": "2575:66:13",
													"nodeType": "YulBlock",
													"src": "2575:66:13",
													"statements": [
														{
															"nativeSrc": "2585:50:13",
															"nodeType": "YulAssignment",
															"src": "2585:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2629:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2629:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2598:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2598:30:13"
																},
																"nativeSrc": "2598:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2598:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2585:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2585:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2515:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2555:5:13",
														"nodeType": "YulTypedName",
														"src": "2555:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2565:9:13",
														"nodeType": "YulTypedName",
														"src": "2565:9:13",
														"type": ""
													}
												],
												"src": "2515:126:13"
											},
											{
												"body": {
													"nativeSrc": "2723:66:13",
													"nodeType": "YulBlock",
													"src": "2723:66:13",
													"statements": [
														{
															"nativeSrc": "2733:50:13",
															"nodeType": "YulAssignment",
															"src": "2733:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2746:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2746:30:13"
																},
																"nativeSrc": "2746:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2746:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2733:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "2733:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_MyERC20_$1446_to_t_address",
												"nativeSrc": "2647:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2703:5:13",
														"nodeType": "YulTypedName",
														"src": "2703:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2713:9:13",
														"nodeType": "YulTypedName",
														"src": "2713:9:13",
														"type": ""
													}
												],
												"src": "2647:142:13"
											},
											{
												"body": {
													"nativeSrc": "2876:82:13",
													"nodeType": "YulBlock",
													"src": "2876:82:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2893:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2893:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2945:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2945:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_MyERC20_$1446_to_t_address",
																			"nativeSrc": "2898:46:13",
																			"nodeType": "YulIdentifier",
																			"src": "2898:46:13"
																		},
																		"nativeSrc": "2898:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2898:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2886:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2886:6:13"
																},
																"nativeSrc": "2886:66:13",
																"nodeType": "YulFunctionCall",
																"src": "2886:66:13"
															},
															"nativeSrc": "2886:66:13",
															"nodeType": "YulExpressionStatement",
															"src": "2886:66:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_MyERC20_$1446_to_t_address_fromStack",
												"nativeSrc": "2795:163:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:13",
														"nodeType": "YulTypedName",
														"src": "2864:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2871:3:13",
														"nodeType": "YulTypedName",
														"src": "2871:3:13",
														"type": ""
													}
												],
												"src": "2795:163:13"
											},
											{
												"body": {
													"nativeSrc": "3078:140:13",
													"nodeType": "YulBlock",
													"src": "3078:140:13",
													"statements": [
														{
															"nativeSrc": "3088:26:13",
															"nodeType": "YulAssignment",
															"src": "3088:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3100:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3100:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3111:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3111:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3096:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3096:3:13"
																},
																"nativeSrc": "3096:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3096:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3088:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3088:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3184:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3184:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3197:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3197:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3208:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3208:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3193:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3193:3:13"
																		},
																		"nativeSrc": "3193:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3193:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_MyERC20_$1446_to_t_address_fromStack",
																	"nativeSrc": "3124:59:13",
																	"nodeType": "YulIdentifier",
																	"src": "3124:59:13"
																},
																"nativeSrc": "3124:87:13",
																"nodeType": "YulFunctionCall",
																"src": "3124:87:13"
															},
															"nativeSrc": "3124:87:13",
															"nodeType": "YulExpressionStatement",
															"src": "3124:87:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_MyERC20_$1446__to_t_address__fromStack_reversed",
												"nativeSrc": "2964:254:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3050:9:13",
														"nodeType": "YulTypedName",
														"src": "3050:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3062:6:13",
														"nodeType": "YulTypedName",
														"src": "3062:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3073:4:13",
														"nodeType": "YulTypedName",
														"src": "3073:4:13",
														"type": ""
													}
												],
												"src": "2964:254:13"
											},
											{
												"body": {
													"nativeSrc": "3268:32:13",
													"nodeType": "YulBlock",
													"src": "3268:32:13",
													"statements": [
														{
															"nativeSrc": "3278:16:13",
															"nodeType": "YulAssignment",
															"src": "3278:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3289:5:13",
																"nodeType": "YulIdentifier",
																"src": "3289:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3278:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3278:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "3224:76:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3250:5:13",
														"nodeType": "YulTypedName",
														"src": "3250:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3260:7:13",
														"nodeType": "YulTypedName",
														"src": "3260:7:13",
														"type": ""
													}
												],
												"src": "3224:76:13"
											},
											{
												"body": {
													"nativeSrc": "3369:52:13",
													"nodeType": "YulBlock",
													"src": "3369:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3386:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3386:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3408:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3408:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_int256",
																			"nativeSrc": "3391:16:13",
																			"nodeType": "YulIdentifier",
																			"src": "3391:16:13"
																		},
																		"nativeSrc": "3391:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3391:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3379:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3379:6:13"
																},
																"nativeSrc": "3379:36:13",
																"nodeType": "YulFunctionCall",
																"src": "3379:36:13"
															},
															"nativeSrc": "3379:36:13",
															"nodeType": "YulExpressionStatement",
															"src": "3379:36:13"
														}
													]
												},
												"name": "abi_encode_t_int256_to_t_int256_fromStack",
												"nativeSrc": "3306:115:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3357:5:13",
														"nodeType": "YulTypedName",
														"src": "3357:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3364:3:13",
														"nodeType": "YulTypedName",
														"src": "3364:3:13",
														"type": ""
													}
												],
												"src": "3306:115:13"
											},
											{
												"body": {
													"nativeSrc": "3523:122:13",
													"nodeType": "YulBlock",
													"src": "3523:122:13",
													"statements": [
														{
															"nativeSrc": "3533:26:13",
															"nodeType": "YulAssignment",
															"src": "3533:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3545:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3545:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3556:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3556:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3541:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3541:3:13"
																},
																"nativeSrc": "3541:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3541:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3533:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3533:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3611:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3611:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3624:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3624:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3635:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3635:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3620:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3620:3:13"
																		},
																		"nativeSrc": "3620:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3620:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int256_to_t_int256_fromStack",
																	"nativeSrc": "3569:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "3569:41:13"
																},
																"nativeSrc": "3569:69:13",
																"nodeType": "YulFunctionCall",
																"src": "3569:69:13"
															},
															"nativeSrc": "3569:69:13",
															"nodeType": "YulExpressionStatement",
															"src": "3569:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nativeSrc": "3427:218:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3495:9:13",
														"nodeType": "YulTypedName",
														"src": "3495:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3507:6:13",
														"nodeType": "YulTypedName",
														"src": "3507:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3518:4:13",
														"nodeType": "YulTypedName",
														"src": "3518:4:13",
														"type": ""
													}
												],
												"src": "3427:218:13"
											},
											{
												"body": {
													"nativeSrc": "3694:79:13",
													"nodeType": "YulBlock",
													"src": "3694:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3751:16:13",
																"nodeType": "YulBlock",
																"src": "3751:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3760:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3760:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3763:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3763:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3753:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3753:6:13"
																			},
																			"nativeSrc": "3753:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3753:12:13"
																		},
																		"nativeSrc": "3753:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3753:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3717:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3717:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3742:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3742:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3724:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3724:17:13"
																				},
																				"nativeSrc": "3724:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3724:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3714:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3714:2:13"
																		},
																		"nativeSrc": "3714:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3714:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3707:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3707:6:13"
																},
																"nativeSrc": "3707:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3707:43:13"
															},
															"nativeSrc": "3704:63:13",
															"nodeType": "YulIf",
															"src": "3704:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3651:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3687:5:13",
														"nodeType": "YulTypedName",
														"src": "3687:5:13",
														"type": ""
													}
												],
												"src": "3651:122:13"
											},
											{
												"body": {
													"nativeSrc": "3831:87:13",
													"nodeType": "YulBlock",
													"src": "3831:87:13",
													"statements": [
														{
															"nativeSrc": "3841:29:13",
															"nodeType": "YulAssignment",
															"src": "3841:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3863:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3863:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3850:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3850:12:13"
																},
																"nativeSrc": "3850:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3850:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3841:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3841:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3906:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3906:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3879:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3879:26:13"
																},
																"nativeSrc": "3879:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3879:33:13"
															},
															"nativeSrc": "3879:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3879:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3779:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3809:6:13",
														"nodeType": "YulTypedName",
														"src": "3809:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3817:3:13",
														"nodeType": "YulTypedName",
														"src": "3817:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3825:5:13",
														"nodeType": "YulTypedName",
														"src": "3825:5:13",
														"type": ""
													}
												],
												"src": "3779:139:13"
											},
											{
												"body": {
													"nativeSrc": "3990:263:13",
													"nodeType": "YulBlock",
													"src": "3990:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4036:83:13",
																"nodeType": "YulBlock",
																"src": "4036:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4038:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4038:77:13"
																			},
																			"nativeSrc": "4038:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4038:79:13"
																		},
																		"nativeSrc": "4038:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4038:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4011:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4011:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4020:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4020:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4007:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:13"
																		},
																		"nativeSrc": "4007:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4007:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4032:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4032:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4003:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4003:3:13"
																},
																"nativeSrc": "4003:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4003:32:13"
															},
															"nativeSrc": "4000:119:13",
															"nodeType": "YulIf",
															"src": "4000:119:13"
														},
														{
															"nativeSrc": "4129:117:13",
															"nodeType": "YulBlock",
															"src": "4129:117:13",
															"statements": [
																{
																	"nativeSrc": "4144:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4144:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4158:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4158:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4148:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4148:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4173:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4173:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4208:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4208:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4219:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4219:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4204:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4204:3:13"
																				},
																				"nativeSrc": "4204:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4204:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4228:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4228:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4183:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4183:20:13"
																		},
																		"nativeSrc": "4183:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4173:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4173:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3924:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3960:9:13",
														"nodeType": "YulTypedName",
														"src": "3960:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3971:7:13",
														"nodeType": "YulTypedName",
														"src": "3971:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3983:6:13",
														"nodeType": "YulTypedName",
														"src": "3983:6:13",
														"type": ""
													}
												],
												"src": "3924:329:13"
											},
											{
												"body": {
													"nativeSrc": "4287:152:13",
													"nodeType": "YulBlock",
													"src": "4287:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4304:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4304:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4307:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4307:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4297:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:13"
																},
																"nativeSrc": "4297:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4297:88:13"
															},
															"nativeSrc": "4297:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4297:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4401:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4401:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4404:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4394:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4394:6:13"
																},
																"nativeSrc": "4394:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4394:15:13"
															},
															"nativeSrc": "4394:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4394:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4425:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4425:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4428:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4418:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4418:6:13"
																},
																"nativeSrc": "4418:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4418:15:13"
															},
															"nativeSrc": "4418:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4418:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4259:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4259:180:13"
											},
											{
												"body": {
													"nativeSrc": "4493:362:13",
													"nodeType": "YulBlock",
													"src": "4493:362:13",
													"statements": [
														{
															"nativeSrc": "4503:25:13",
															"nodeType": "YulAssignment",
															"src": "4503:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4526:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4526:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4508:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4508:17:13"
																},
																"nativeSrc": "4508:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4508:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4503:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "4503:1:13"
																}
															]
														},
														{
															"nativeSrc": "4537:25:13",
															"nodeType": "YulAssignment",
															"src": "4537:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4560:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4560:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4542:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4542:17:13"
																},
																"nativeSrc": "4542:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4542:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4537:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "4537:1:13"
																}
															]
														},
														{
															"nativeSrc": "4571:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4571:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4594:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4594:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4597:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4597:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4590:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4590:3:13"
																},
																"nativeSrc": "4590:9:13",
																"nodeType": "YulFunctionCall",
																"src": "4590:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4575:11:13",
																	"nodeType": "YulTypedName",
																	"src": "4575:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4608:41:13",
															"nodeType": "YulAssignment",
															"src": "4608:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4637:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "4637:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4619:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4619:17:13"
																},
																"nativeSrc": "4619:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4619:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4608:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4608:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4826:22:13",
																"nodeType": "YulBlock",
																"src": "4826:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4828:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4828:16:13"
																			},
																			"nativeSrc": "4828:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4828:18:13"
																		},
																		"nativeSrc": "4828:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4828:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4759:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "4759:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4752:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4752:6:13"
																				},
																				"nativeSrc": "4752:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4752:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4782:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "4782:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4789:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "4789:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4798:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "4798:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4785:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4785:3:13"
																						},
																						"nativeSrc": "4785:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4785:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4779:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4779:2:13"
																				},
																				"nativeSrc": "4779:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4779:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4732:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4732:2:13"
																		},
																		"nativeSrc": "4732:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4732:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4712:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4712:6:13"
																},
																"nativeSrc": "4712:113:13",
																"nodeType": "YulFunctionCall",
																"src": "4712:113:13"
															},
															"nativeSrc": "4709:139:13",
															"nodeType": "YulIf",
															"src": "4709:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4445:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4476:1:13",
														"nodeType": "YulTypedName",
														"src": "4476:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4479:1:13",
														"nodeType": "YulTypedName",
														"src": "4479:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4485:7:13",
														"nodeType": "YulTypedName",
														"src": "4485:7:13",
														"type": ""
													}
												],
												"src": "4445:410:13"
											},
											{
												"body": {
													"nativeSrc": "4889:152:13",
													"nodeType": "YulBlock",
													"src": "4889:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4906:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4906:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4909:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4909:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4899:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4899:6:13"
																},
																"nativeSrc": "4899:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4899:88:13"
															},
															"nativeSrc": "4899:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4899:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5003:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5003:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5006:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5006:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4996:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4996:6:13"
																},
																"nativeSrc": "4996:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4996:15:13"
															},
															"nativeSrc": "4996:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4996:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5027:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5027:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5030:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5030:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5020:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5020:6:13"
																},
																"nativeSrc": "5020:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5020:15:13"
															},
															"nativeSrc": "5020:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5020:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4861:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4861:180:13"
											},
											{
												"body": {
													"nativeSrc": "5089:143:13",
													"nodeType": "YulBlock",
													"src": "5089:143:13",
													"statements": [
														{
															"nativeSrc": "5099:25:13",
															"nodeType": "YulAssignment",
															"src": "5099:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5122:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5122:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5104:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5104:17:13"
																},
																"nativeSrc": "5104:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5104:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5099:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5099:1:13"
																}
															]
														},
														{
															"nativeSrc": "5133:25:13",
															"nodeType": "YulAssignment",
															"src": "5133:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5156:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5138:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5138:17:13"
																},
																"nativeSrc": "5138:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5138:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5133:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5133:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5180:22:13",
																"nodeType": "YulBlock",
																"src": "5180:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5182:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5182:16:13"
																			},
																			"nativeSrc": "5182:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5182:18:13"
																		},
																		"nativeSrc": "5182:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5182:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5177:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5177:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5170:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5170:6:13"
																},
																"nativeSrc": "5170:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5170:9:13"
															},
															"nativeSrc": "5167:35:13",
															"nodeType": "YulIf",
															"src": "5167:35:13"
														},
														{
															"nativeSrc": "5212:14:13",
															"nodeType": "YulAssignment",
															"src": "5212:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5221:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5221:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5224:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5224:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5217:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5217:3:13"
																},
																"nativeSrc": "5217:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5217:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5212:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5212:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5047:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5078:1:13",
														"nodeType": "YulTypedName",
														"src": "5078:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5081:1:13",
														"nodeType": "YulTypedName",
														"src": "5081:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5087:1:13",
														"nodeType": "YulTypedName",
														"src": "5087:1:13",
														"type": ""
													}
												],
												"src": "5047:185:13"
											},
											{
												"body": {
													"nativeSrc": "5289:51:13",
													"nodeType": "YulBlock",
													"src": "5289:51:13",
													"statements": [
														{
															"nativeSrc": "5299:34:13",
															"nodeType": "YulAssignment",
															"src": "5299:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5324:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5324:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5327:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5327:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5320:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:13"
																},
																"nativeSrc": "5320:13:13",
																"nodeType": "YulFunctionCall",
																"src": "5320:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "5299:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5299:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "5238:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5270:5:13",
														"nodeType": "YulTypedName",
														"src": "5270:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "5280:8:13",
														"nodeType": "YulTypedName",
														"src": "5280:8:13",
														"type": ""
													}
												],
												"src": "5238:102:13"
											},
											{
												"body": {
													"nativeSrc": "5419:775:13",
													"nodeType": "YulBlock",
													"src": "5419:775:13",
													"statements": [
														{
															"nativeSrc": "5429:15:13",
															"nodeType": "YulAssignment",
															"src": "5429:15:13",
															"value": {
																"name": "_power",
																"nativeSrc": "5438:6:13",
																"nodeType": "YulIdentifier",
																"src": "5438:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "5429:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5429:5:13"
																}
															]
														},
														{
															"nativeSrc": "5453:14:13",
															"nodeType": "YulAssignment",
															"src": "5453:14:13",
															"value": {
																"name": "_base",
																"nativeSrc": "5462:5:13",
																"nodeType": "YulIdentifier",
																"src": "5462:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "5453:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5453:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5511:677:13",
																"nodeType": "YulBlock",
																"src": "5511:677:13",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "5599:22:13",
																			"nodeType": "YulBlock",
																			"src": "5599:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "5601:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "5601:16:13"
																						},
																						"nativeSrc": "5601:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "5601:18:13"
																					},
																					"nativeSrc": "5601:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "5601:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "5577:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "5577:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "5587:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5587:3:13"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "5592:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5592:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "5583:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "5583:3:13"
																					},
																					"nativeSrc": "5583:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5583:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "5574:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "5574:2:13"
																			},
																			"nativeSrc": "5574:24:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5574:24:13"
																		},
																		"nativeSrc": "5571:50:13",
																		"nodeType": "YulIf",
																		"src": "5571:50:13"
																	},
																	{
																		"body": {
																			"nativeSrc": "5666:419:13",
																			"nodeType": "YulBlock",
																			"src": "5666:419:13",
																			"statements": [
																				{
																					"nativeSrc": "6046:25:13",
																					"nodeType": "YulAssignment",
																					"src": "6046:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "6059:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "6059:5:13"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "6066:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6066:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "6055:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6055:3:13"
																						},
																						"nativeSrc": "6055:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6055:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "6046:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "6046:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "5641:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "5641:8:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5651:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5651:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5637:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5637:3:13"
																			},
																			"nativeSrc": "5637:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5637:16:13"
																		},
																		"nativeSrc": "5634:451:13",
																		"nodeType": "YulIf",
																		"src": "5634:451:13"
																	},
																	{
																		"nativeSrc": "6098:23:13",
																		"nodeType": "YulAssignment",
																		"src": "6098:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "6110:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "6110:4:13"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "6116:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "6116:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "6106:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6106:3:13"
																			},
																			"nativeSrc": "6106:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6106:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "6098:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6098:4:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6134:44:13",
																		"nodeType": "YulAssignment",
																		"src": "6134:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "6169:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "6169:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "6146:22:13",
																				"nodeType": "YulIdentifier",
																				"src": "6146:22:13"
																			},
																			"nativeSrc": "6146:32:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6146:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "6134:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "6134:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "5487:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "5487:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5497:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5497:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5484:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5484:2:13"
																},
																"nativeSrc": "5484:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5484:15:13"
															},
															"nativeSrc": "5476:712:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5500:2:13",
																"nodeType": "YulBlock",
																"src": "5500:2:13",
																"statements": []
															},
															"pre": {
																"nativeSrc": "5480:3:13",
																"nodeType": "YulBlock",
																"src": "5480:3:13",
																"statements": []
															},
															"src": "5476:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "5346:848:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "5374:6:13",
														"nodeType": "YulTypedName",
														"src": "5374:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "5382:5:13",
														"nodeType": "YulTypedName",
														"src": "5382:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "5389:8:13",
														"nodeType": "YulTypedName",
														"src": "5389:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "5399:3:13",
														"nodeType": "YulTypedName",
														"src": "5399:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "5407:5:13",
														"nodeType": "YulTypedName",
														"src": "5407:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "5414:4:13",
														"nodeType": "YulTypedName",
														"src": "5414:4:13",
														"type": ""
													}
												],
												"src": "5346:848:13"
											},
											{
												"body": {
													"nativeSrc": "6260:1013:13",
													"nodeType": "YulBlock",
													"src": "6260:1013:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6455:20:13",
																"nodeType": "YulBlock",
																"src": "6455:20:13",
																"statements": [
																	{
																		"nativeSrc": "6457:10:13",
																		"nodeType": "YulAssignment",
																		"src": "6457:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6466:1:13",
																			"nodeType": "YulLiteral",
																			"src": "6466:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6457:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6457:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6468:5:13",
																		"nodeType": "YulLeave",
																		"src": "6468:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "6445:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "6445:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6438:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6438:6:13"
																},
																"nativeSrc": "6438:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6438:16:13"
															},
															"nativeSrc": "6435:40:13",
															"nodeType": "YulIf",
															"src": "6435:40:13"
														},
														{
															"body": {
																"nativeSrc": "6500:20:13",
																"nodeType": "YulBlock",
																"src": "6500:20:13",
																"statements": [
																	{
																		"nativeSrc": "6502:10:13",
																		"nodeType": "YulAssignment",
																		"src": "6502:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "6511:1:13",
																			"nodeType": "YulLiteral",
																			"src": "6511:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6502:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6502:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "6513:5:13",
																		"nodeType": "YulLeave",
																		"src": "6513:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "6494:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6494:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6487:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6487:6:13"
																},
																"nativeSrc": "6487:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6487:12:13"
															},
															"nativeSrc": "6484:36:13",
															"nodeType": "YulIf",
															"src": "6484:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6630:20:13",
																		"nodeType": "YulBlock",
																		"src": "6630:20:13",
																		"statements": [
																			{
																				"nativeSrc": "6632:10:13",
																				"nodeType": "YulAssignment",
																				"src": "6632:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6641:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6641:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6632:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6632:5:13"
																					}
																				]
																			},
																			{
																				"nativeSrc": "6643:5:13",
																				"nodeType": "YulLeave",
																				"src": "6643:5:13"
																			}
																		]
																	},
																	"nativeSrc": "6623:27:13",
																	"nodeType": "YulCase",
																	"src": "6623:27:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6628:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6628:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6674:176:13",
																		"nodeType": "YulBlock",
																		"src": "6674:176:13",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "6709:22:13",
																					"nodeType": "YulBlock",
																					"src": "6709:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6711:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "6711:16:13"
																								},
																								"nativeSrc": "6711:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6711:18:13"
																							},
																							"nativeSrc": "6711:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6711:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "6694:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "6694:8:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6704:3:13",
																							"nodeType": "YulLiteral",
																							"src": "6704:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6691:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6691:2:13"
																					},
																					"nativeSrc": "6691:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6691:17:13"
																				},
																				"nativeSrc": "6688:43:13",
																				"nodeType": "YulIf",
																				"src": "6688:43:13"
																			},
																			{
																				"nativeSrc": "6744:25:13",
																				"nodeType": "YulAssignment",
																				"src": "6744:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6757:1:13",
																							"nodeType": "YulLiteral",
																							"src": "6757:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "6760:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "6760:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "6753:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6753:3:13"
																					},
																					"nativeSrc": "6753:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6753:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "6744:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6744:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6800:22:13",
																					"nodeType": "YulBlock",
																					"src": "6800:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "6802:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "6802:16:13"
																								},
																								"nativeSrc": "6802:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "6802:18:13"
																							},
																							"nativeSrc": "6802:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "6802:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "6788:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "6788:5:13"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "6795:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6795:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "6785:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "6785:2:13"
																					},
																					"nativeSrc": "6785:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6785:14:13"
																				},
																				"nativeSrc": "6782:40:13",
																				"nodeType": "YulIf",
																				"src": "6782:40:13"
																			},
																			{
																				"nativeSrc": "6835:5:13",
																				"nodeType": "YulLeave",
																				"src": "6835:5:13"
																			}
																		]
																	},
																	"nativeSrc": "6659:191:13",
																	"nodeType": "YulCase",
																	"src": "6659:191:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6664:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6664:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "6580:4:13",
																"nodeType": "YulIdentifier",
																"src": "6580:4:13"
															},
															"nativeSrc": "6573:277:13",
															"nodeType": "YulSwitch",
															"src": "6573:277:13"
														},
														{
															"body": {
																"nativeSrc": "6982:123:13",
																"nodeType": "YulBlock",
																"src": "6982:123:13",
																"statements": [
																	{
																		"nativeSrc": "6996:28:13",
																		"nodeType": "YulAssignment",
																		"src": "6996:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7009:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "7009:4:13"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "7015:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "7015:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "7005:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7005:3:13"
																			},
																			"nativeSrc": "7005:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7005:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "6996:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6996:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "7055:22:13",
																			"nodeType": "YulBlock",
																			"src": "7055:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7057:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "7057:16:13"
																						},
																						"nativeSrc": "7057:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7057:18:13"
																					},
																					"nativeSrc": "7057:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "7057:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "7043:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "7043:5:13"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "7050:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7050:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7040:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "7040:2:13"
																			},
																			"nativeSrc": "7040:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7040:14:13"
																		},
																		"nativeSrc": "7037:40:13",
																		"nodeType": "YulIf",
																		"src": "7037:40:13"
																	},
																	{
																		"nativeSrc": "7090:5:13",
																		"nodeType": "YulLeave",
																		"src": "7090:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6885:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6885:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6891:2:13",
																						"nodeType": "YulLiteral",
																						"src": "6891:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6882:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6882:2:13"
																				},
																				"nativeSrc": "6882:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6899:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "6899:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6909:2:13",
																						"nodeType": "YulLiteral",
																						"src": "6909:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6896:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6896:2:13"
																				},
																				"nativeSrc": "6896:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6896:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6878:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:13"
																		},
																		"nativeSrc": "6878:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "6934:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6934:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6940:3:13",
																						"nodeType": "YulLiteral",
																						"src": "6940:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6931:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6931:2:13"
																				},
																				"nativeSrc": "6931:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6931:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "6949:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "6949:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6959:2:13",
																						"nodeType": "YulLiteral",
																						"src": "6959:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "6946:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "6946:2:13"
																				},
																				"nativeSrc": "6946:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6946:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6927:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6927:3:13"
																		},
																		"nativeSrc": "6927:36:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6927:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6862:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6862:2:13"
																},
																"nativeSrc": "6862:111:13",
																"nodeType": "YulFunctionCall",
																"src": "6862:111:13"
															},
															"nativeSrc": "6859:246:13",
															"nodeType": "YulIf",
															"src": "6859:246:13"
														},
														{
															"nativeSrc": "7115:57:13",
															"nodeType": "YulAssignment",
															"src": "7115:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7149:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7149:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7152:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7152:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7158:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "7158:8:13"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "7168:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7168:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "7130:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "7130:18:13"
																},
																"nativeSrc": "7130:42:13",
																"nodeType": "YulFunctionCall",
																"src": "7130:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7115:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7115:5:13"
																},
																{
																	"name": "base",
																	"nativeSrc": "7122:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7122:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7211:22:13",
																"nodeType": "YulBlock",
																"src": "7211:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7213:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7213:16:13"
																			},
																			"nativeSrc": "7213:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7213:18:13"
																		},
																		"nativeSrc": "7213:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7213:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7188:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7188:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "7199:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7199:3:13"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "7204:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7204:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "7195:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7195:3:13"
																		},
																		"nativeSrc": "7195:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7195:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7185:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7185:2:13"
																},
																"nativeSrc": "7185:25:13",
																"nodeType": "YulFunctionCall",
																"src": "7185:25:13"
															},
															"nativeSrc": "7182:51:13",
															"nodeType": "YulIf",
															"src": "7182:51:13"
														},
														{
															"nativeSrc": "7242:25:13",
															"nodeType": "YulAssignment",
															"src": "7242:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "7255:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7255:5:13"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "7262:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7262:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7251:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7251:3:13"
																},
																"nativeSrc": "7251:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7251:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7242:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7242:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "6200:1073:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "6230:4:13",
														"nodeType": "YulTypedName",
														"src": "6230:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "6236:8:13",
														"nodeType": "YulTypedName",
														"src": "6236:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "6246:3:13",
														"nodeType": "YulTypedName",
														"src": "6246:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "6254:5:13",
														"nodeType": "YulTypedName",
														"src": "6254:5:13",
														"type": ""
													}
												],
												"src": "6200:1073:13"
											},
											{
												"body": {
													"nativeSrc": "7345:219:13",
													"nodeType": "YulBlock",
													"src": "7345:219:13",
													"statements": [
														{
															"nativeSrc": "7355:31:13",
															"nodeType": "YulAssignment",
															"src": "7355:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7381:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7381:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7363:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7363:17:13"
																},
																"nativeSrc": "7363:23:13",
																"nodeType": "YulFunctionCall",
																"src": "7363:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7355:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7355:4:13"
																}
															]
														},
														{
															"nativeSrc": "7395:39:13",
															"nodeType": "YulAssignment",
															"src": "7395:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7425:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "7425:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7407:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "7407:17:13"
																},
																"nativeSrc": "7407:27:13",
																"nodeType": "YulFunctionCall",
																"src": "7407:27:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "7395:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "7395:8:13"
																}
															]
														},
														{
															"nativeSrc": "7444:113:13",
															"nodeType": "YulAssignment",
															"src": "7444:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "7474:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7474:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "7480:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "7480:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7490:66:13",
																		"nodeType": "YulLiteral",
																		"src": "7490:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "7453:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "7453:20:13"
																},
																"nativeSrc": "7453:104:13",
																"nodeType": "YulFunctionCall",
																"src": "7453:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7444:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7444:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "7279:285:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7320:4:13",
														"nodeType": "YulTypedName",
														"src": "7320:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7326:8:13",
														"nodeType": "YulTypedName",
														"src": "7326:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7339:5:13",
														"nodeType": "YulTypedName",
														"src": "7339:5:13",
														"type": ""
													}
												],
												"src": "7279:285:13"
											},
											{
												"body": {
													"nativeSrc": "7683:34:13",
													"nodeType": "YulBlock",
													"src": "7683:34:13",
													"statements": [
														{
															"nativeSrc": "7693:18:13",
															"nodeType": "YulAssignment",
															"src": "7693:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "7708:3:13",
																"nodeType": "YulIdentifier",
																"src": "7708:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7693:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "7693:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7570:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7655:3:13",
														"nodeType": "YulTypedName",
														"src": "7655:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7660:6:13",
														"nodeType": "YulTypedName",
														"src": "7660:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7671:11:13",
														"nodeType": "YulTypedName",
														"src": "7671:11:13",
														"type": ""
													}
												],
												"src": "7570:147:13"
											},
											{
												"body": {
													"nativeSrc": "7829:8:13",
													"nodeType": "YulBlock",
													"src": "7829:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "7723:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7821:6:13",
														"nodeType": "YulTypedName",
														"src": "7821:6:13",
														"type": ""
													}
												],
												"src": "7723:114:13"
											},
											{
												"body": {
													"nativeSrc": "8006:235:13",
													"nodeType": "YulBlock",
													"src": "8006:235:13",
													"statements": [
														{
															"nativeSrc": "8016:90:13",
															"nodeType": "YulAssignment",
															"src": "8016:90:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8099:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8099:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8104:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8104:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8023:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "8023:75:13"
																},
																"nativeSrc": "8023:83:13",
																"nodeType": "YulFunctionCall",
																"src": "8023:83:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8016:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8016:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8204:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8204:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "8115:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "8115:88:13"
																},
																"nativeSrc": "8115:93:13",
																"nodeType": "YulFunctionCall",
																"src": "8115:93:13"
															},
															"nativeSrc": "8115:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "8115:93:13"
														},
														{
															"nativeSrc": "8217:18:13",
															"nodeType": "YulAssignment",
															"src": "8217:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8228:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8228:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8233:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8233:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8224:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8224:3:13"
																},
																"nativeSrc": "8224:11:13",
																"nodeType": "YulFunctionCall",
																"src": "8224:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8217:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8217:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "7843:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7994:3:13",
														"nodeType": "YulTypedName",
														"src": "7994:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8002:3:13",
														"nodeType": "YulTypedName",
														"src": "8002:3:13",
														"type": ""
													}
												],
												"src": "7843:398:13"
											},
											{
												"body": {
													"nativeSrc": "8435:191:13",
													"nodeType": "YulBlock",
													"src": "8435:191:13",
													"statements": [
														{
															"nativeSrc": "8446:154:13",
															"nodeType": "YulAssignment",
															"src": "8446:154:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8596:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8596:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "8453:141:13",
																	"nodeType": "YulIdentifier",
																	"src": "8453:141:13"
																},
																"nativeSrc": "8453:147:13",
																"nodeType": "YulFunctionCall",
																"src": "8453:147:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8446:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8446:3:13"
																}
															]
														},
														{
															"nativeSrc": "8610:10:13",
															"nodeType": "YulAssignment",
															"src": "8610:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "8617:3:13",
																"nodeType": "YulIdentifier",
																"src": "8617:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8610:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8610:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "8247:379:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8422:3:13",
														"nodeType": "YulTypedName",
														"src": "8422:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8431:3:13",
														"nodeType": "YulTypedName",
														"src": "8431:3:13",
														"type": ""
													}
												],
												"src": "8247:379:13"
											},
											{
												"body": {
													"nativeSrc": "8676:61:13",
													"nodeType": "YulBlock",
													"src": "8676:61:13",
													"statements": [
														{
															"nativeSrc": "8686:45:13",
															"nodeType": "YulAssignment",
															"src": "8686:45:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8701:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8701:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8708:22:13",
																		"nodeType": "YulLiteral",
																		"src": "8708:22:13",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8697:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8697:3:13"
																},
																"nativeSrc": "8697:34:13",
																"nodeType": "YulFunctionCall",
																"src": "8697:34:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8686:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8686:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "8632:105:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8658:5:13",
														"nodeType": "YulTypedName",
														"src": "8658:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8668:7:13",
														"nodeType": "YulTypedName",
														"src": "8668:7:13",
														"type": ""
													}
												],
												"src": "8632:105:13"
											},
											{
												"body": {
													"nativeSrc": "8785:78:13",
													"nodeType": "YulBlock",
													"src": "8785:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8841:16:13",
																"nodeType": "YulBlock",
																"src": "8841:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8850:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8850:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8853:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8853:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8843:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8843:6:13"
																			},
																			"nativeSrc": "8843:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8843:12:13"
																		},
																		"nativeSrc": "8843:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8843:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8808:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8808:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8832:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8832:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "8815:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "8815:16:13"
																				},
																				"nativeSrc": "8815:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8815:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8805:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8805:2:13"
																		},
																		"nativeSrc": "8805:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8805:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8798:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8798:6:13"
																},
																"nativeSrc": "8798:42:13",
																"nodeType": "YulFunctionCall",
																"src": "8798:42:13"
															},
															"nativeSrc": "8795:62:13",
															"nodeType": "YulIf",
															"src": "8795:62:13"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "8743:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8778:5:13",
														"nodeType": "YulTypedName",
														"src": "8778:5:13",
														"type": ""
													}
												],
												"src": "8743:120:13"
											},
											{
												"body": {
													"nativeSrc": "8931:79:13",
													"nodeType": "YulBlock",
													"src": "8931:79:13",
													"statements": [
														{
															"nativeSrc": "8941:22:13",
															"nodeType": "YulAssignment",
															"src": "8941:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8956:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8956:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8950:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8950:5:13"
																},
																"nativeSrc": "8950:13:13",
																"nodeType": "YulFunctionCall",
																"src": "8950:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8941:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8941:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8998:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8998:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "8972:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "8972:25:13"
																},
																"nativeSrc": "8972:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8972:32:13"
															},
															"nativeSrc": "8972:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "8972:32:13"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "8869:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8909:6:13",
														"nodeType": "YulTypedName",
														"src": "8909:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8917:3:13",
														"nodeType": "YulTypedName",
														"src": "8917:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8925:5:13",
														"nodeType": "YulTypedName",
														"src": "8925:5:13",
														"type": ""
													}
												],
												"src": "8869:141:13"
											},
											{
												"body": {
													"nativeSrc": "9058:78:13",
													"nodeType": "YulBlock",
													"src": "9058:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9114:16:13",
																"nodeType": "YulBlock",
																"src": "9114:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9123:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9123:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9126:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9126:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9116:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9116:6:13"
																			},
																			"nativeSrc": "9116:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9116:12:13"
																		},
																		"nativeSrc": "9116:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9116:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9081:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9081:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9105:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "9105:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "9088:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "9088:16:13"
																				},
																				"nativeSrc": "9088:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9088:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9078:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9078:2:13"
																		},
																		"nativeSrc": "9078:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9078:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9071:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9071:6:13"
																},
																"nativeSrc": "9071:42:13",
																"nodeType": "YulFunctionCall",
																"src": "9071:42:13"
															},
															"nativeSrc": "9068:62:13",
															"nodeType": "YulIf",
															"src": "9068:62:13"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "9016:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9051:5:13",
														"nodeType": "YulTypedName",
														"src": "9051:5:13",
														"type": ""
													}
												],
												"src": "9016:120:13"
											},
											{
												"body": {
													"nativeSrc": "9204:79:13",
													"nodeType": "YulBlock",
													"src": "9204:79:13",
													"statements": [
														{
															"nativeSrc": "9214:22:13",
															"nodeType": "YulAssignment",
															"src": "9214:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9229:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9229:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9223:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9223:5:13"
																},
																"nativeSrc": "9223:13:13",
																"nodeType": "YulFunctionCall",
																"src": "9223:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9214:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9214:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9271:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9271:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "9245:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "9245:25:13"
																},
																"nativeSrc": "9245:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9245:32:13"
															},
															"nativeSrc": "9245:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "9245:32:13"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "9142:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9182:6:13",
														"nodeType": "YulTypedName",
														"src": "9182:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9190:3:13",
														"nodeType": "YulTypedName",
														"src": "9190:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9198:5:13",
														"nodeType": "YulTypedName",
														"src": "9198:5:13",
														"type": ""
													}
												],
												"src": "9142:141:13"
											},
											{
												"body": {
													"nativeSrc": "9352:80:13",
													"nodeType": "YulBlock",
													"src": "9352:80:13",
													"statements": [
														{
															"nativeSrc": "9362:22:13",
															"nodeType": "YulAssignment",
															"src": "9362:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9377:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9377:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9371:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9371:5:13"
																},
																"nativeSrc": "9371:13:13",
																"nodeType": "YulFunctionCall",
																"src": "9371:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9362:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9362:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9420:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9420:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "9393:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "9393:26:13"
																},
																"nativeSrc": "9393:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9393:33:13"
															},
															"nativeSrc": "9393:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "9393:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "9289:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9330:6:13",
														"nodeType": "YulTypedName",
														"src": "9330:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9338:3:13",
														"nodeType": "YulTypedName",
														"src": "9338:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9346:5:13",
														"nodeType": "YulTypedName",
														"src": "9346:5:13",
														"type": ""
													}
												],
												"src": "9289:143:13"
											},
											{
												"body": {
													"nativeSrc": "9580:829:13",
													"nodeType": "YulBlock",
													"src": "9580:829:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9627:83:13",
																"nodeType": "YulBlock",
																"src": "9627:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9629:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9629:77:13"
																			},
																			"nativeSrc": "9629:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9629:79:13"
																		},
																		"nativeSrc": "9629:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9629:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9601:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9601:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9610:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9610:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9597:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9597:3:13"
																		},
																		"nativeSrc": "9597:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9597:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9622:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9622:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9593:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9593:3:13"
																},
																"nativeSrc": "9593:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9593:33:13"
															},
															"nativeSrc": "9590:120:13",
															"nodeType": "YulIf",
															"src": "9590:120:13"
														},
														{
															"nativeSrc": "9720:127:13",
															"nodeType": "YulBlock",
															"src": "9720:127:13",
															"statements": [
																{
																	"nativeSrc": "9735:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9735:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9749:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9749:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9739:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9739:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9764:73:13",
																	"nodeType": "YulAssignment",
																	"src": "9764:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9809:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9809:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9820:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9820:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9805:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9805:3:13"
																				},
																				"nativeSrc": "9805:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9805:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9829:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9829:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "9774:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "9774:30:13"
																		},
																		"nativeSrc": "9774:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9774:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9764:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9764:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9857:128:13",
															"nodeType": "YulBlock",
															"src": "9857:128:13",
															"statements": [
																{
																	"nativeSrc": "9872:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9872:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9886:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9886:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9876:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9876:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9902:73:13",
																	"nodeType": "YulAssignment",
																	"src": "9902:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9947:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9947:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9958:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9958:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9943:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9943:3:13"
																				},
																				"nativeSrc": "9943:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9943:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9967:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9967:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "9912:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "9912:30:13"
																		},
																		"nativeSrc": "9912:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9912:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9902:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9902:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9995:129:13",
															"nodeType": "YulBlock",
															"src": "9995:129:13",
															"statements": [
																{
																	"nativeSrc": "10010:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10010:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10024:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10024:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10014:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10014:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10040:74:13",
																	"nodeType": "YulAssignment",
																	"src": "10040:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10086:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10086:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10097:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10097:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10082:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10082:3:13"
																				},
																				"nativeSrc": "10082:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10082:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10106:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10106:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10050:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "10050:31:13"
																		},
																		"nativeSrc": "10050:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10050:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10040:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10040:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10134:129:13",
															"nodeType": "YulBlock",
															"src": "10134:129:13",
															"statements": [
																{
																	"nativeSrc": "10149:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10149:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10163:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10163:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10153:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10153:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10179:74:13",
																	"nodeType": "YulAssignment",
																	"src": "10179:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10225:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10225:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10236:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10236:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10221:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10221:3:13"
																				},
																				"nativeSrc": "10221:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10221:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10245:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10245:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "10189:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "10189:31:13"
																		},
																		"nativeSrc": "10189:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10189:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10179:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10179:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10273:129:13",
															"nodeType": "YulBlock",
															"src": "10273:129:13",
															"statements": [
																{
																	"nativeSrc": "10288:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10288:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10302:3:13",
																		"nodeType": "YulLiteral",
																		"src": "10302:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10292:6:13",
																			"nodeType": "YulTypedName",
																			"src": "10292:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10319:73:13",
																	"nodeType": "YulAssignment",
																	"src": "10319:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10364:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "10364:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10375:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "10375:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10360:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "10360:3:13"
																				},
																				"nativeSrc": "10360:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10360:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10384:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10384:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "10329:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "10329:30:13"
																		},
																		"nativeSrc": "10329:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10329:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "10319:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "10319:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "9438:971:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9518:9:13",
														"nodeType": "YulTypedName",
														"src": "9518:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9529:7:13",
														"nodeType": "YulTypedName",
														"src": "9529:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9541:6:13",
														"nodeType": "YulTypedName",
														"src": "9541:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9549:6:13",
														"nodeType": "YulTypedName",
														"src": "9549:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9557:6:13",
														"nodeType": "YulTypedName",
														"src": "9557:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9565:6:13",
														"nodeType": "YulTypedName",
														"src": "9565:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9573:6:13",
														"nodeType": "YulTypedName",
														"src": "9573:6:13",
														"type": ""
													}
												],
												"src": "9438:971:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MyERC20_$1446_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_MyERC20_$1446_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MyERC20_$1446_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_MyERC20_$1446__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MyERC20_$1446_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1459": [
									{
										"length": 32,
										"start": 1184
									}
								],
								"1462": [
									{
										"length": 32,
										"start": 201
									},
									{
										"length": 32,
										"start": 1146
									}
								]
							},
							"linkReferences": {},
							"object": "608060405260043610610089575f3560e01c8063715018a611610058578063715018a6146101ff5780638da5cb5b146102155780639608b2321461023f578063bea4dfb514610269578063f2fde38b1461029357610155565b8063098048e9146101595780633ccfd60b1461019557806351b92ffe146101ab5780635b7f415c146101d557610155565b36610155575f34036100c7576040517fa45fd86c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340c10f193361010d346102bb565b6040518363ffffffff1660e01b815260040161012a929190610762565b5f604051808303815f87803b158015610141575f5ffd5b505af1158015610153573d5f5f3e3d5ffd5b005b5f5ffd5b348015610164575f5ffd5b5061017f600480360381019061017a91906107b7565b6102bb565b60405161018c91906107e2565b60405180910390f35b3480156101a0575f5ffd5b506101a961033f565b005b3480156101b6575f5ffd5b506101bf61041c565b6040516101cc91906107e2565b60405180910390f35b3480156101e0575f5ffd5b506101e9610439565b6040516101f691906107e2565b60405180910390f35b34801561020a575f5ffd5b5061021361043e565b005b348015610220575f5ffd5b50610229610451565b60405161023691906107fb565b60405180910390f35b34801561024a575f5ffd5b50610253610478565b604051610260919061086f565b60405180910390f35b348015610274575f5ffd5b5061027d61049c565b60405161028a91906108a0565b60405180910390f35b34801561029e575f5ffd5b506102b960048036038101906102b491906108e3565b610538565b005b5f5f6402540be4006102cb61049c565b6102d5919061093b565b90505f670de0b6b3a764000082856102ed919061093b565b6102f791906109a9565b90506012600a6103079190610b08565b6002610313919061093b565b6012600a6103219190610b08565b8261032c919061093b565b61033691906109a9565b92505050919050565b6103476105bc565b5f610350610451565b73ffffffffffffffffffffffffffffffffffffffff164760405161037390610b7f565b5f6040518083038185875af1925050503d805f81146103ad576040519150601f19603f3d011682016040523d82523d5f602084013e6103b2565b606091505b50509050806103ed576040517fab77f73e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7fd7e29180ed912c1b05c7de92c52d7d4421d50c763bb288a99d28f035576eea6960405160405180910390a150565b6012600a61042a9190610b08565b6002610436919061093b565b81565b601281565b6104466105bc565b61044f5f610643565b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610507573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061052b9190610c10565b5050509150508091505090565b6105406105bc565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105b0575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105a791906107fb565b60405180910390fd5b6105b981610643565b50565b6105c4610704565b73ffffffffffffffffffffffffffffffffffffffff166105e2610451565b73ffffffffffffffffffffffffffffffffffffffff161461064157610605610704565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161063891906107fb565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6107348261070b565b9050919050565b6107448161072a565b82525050565b5f819050919050565b61075c8161074a565b82525050565b5f6040820190506107755f83018561073b565b6107826020830184610753565b9392505050565b5f5ffd5b6107968161074a565b81146107a0575f5ffd5b50565b5f813590506107b18161078d565b92915050565b5f602082840312156107cc576107cb610789565b5b5f6107d9848285016107a3565b91505092915050565b5f6020820190506107f55f830184610753565b92915050565b5f60208201905061080e5f83018461073b565b92915050565b5f819050919050565b5f61083761083261082d8461070b565b610814565b61070b565b9050919050565b5f6108488261081d565b9050919050565b5f6108598261083e565b9050919050565b6108698161084f565b82525050565b5f6020820190506108825f830184610860565b92915050565b5f819050919050565b61089a81610888565b82525050565b5f6020820190506108b35f830184610891565b92915050565b6108c28161072a565b81146108cc575f5ffd5b50565b5f813590506108dd816108b9565b92915050565b5f602082840312156108f8576108f7610789565b5b5f610905848285016108cf565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109458261074a565b91506109508361074a565b925082820261095e8161074a565b915082820484148315176109755761097461090e565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6109b38261074a565b91506109be8361074a565b9250826109ce576109cd61097c565b5b828204905092915050565b5f8160011c9050919050565b5f5f8291508390505b6001851115610a2e57808604811115610a0a57610a0961090e565b5b6001851615610a195780820291505b8081029050610a27856109d9565b94506109ee565b94509492505050565b5f82610a465760019050610b01565b81610a53575f9050610b01565b8160018114610a695760028114610a7357610aa2565b6001915050610b01565b60ff841115610a8557610a8461090e565b5b8360020a915084821115610a9c57610a9b61090e565b5b50610b01565b5060208310610133831016604e8410600b8410161715610ad75782820a905083811115610ad257610ad161090e565b5b610b01565b610ae484848460016109e5565b92509050818404811115610afb57610afa61090e565b5b81810290505b9392505050565b5f610b128261074a565b9150610b1d8361074a565b9250610b4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610a37565b905092915050565b5f81905092915050565b50565b5f610b6a5f83610b52565b9150610b7582610b5c565b5f82019050919050565b5f610b8982610b5f565b9150819050919050565b5f69ffffffffffffffffffff82169050919050565b610bb181610b93565b8114610bbb575f5ffd5b50565b5f81519050610bcc81610ba8565b92915050565b610bdb81610888565b8114610be5575f5ffd5b50565b5f81519050610bf681610bd2565b92915050565b5f81519050610c0a8161078d565b92915050565b5f5f5f5f5f60a08688031215610c2957610c28610789565b5b5f610c3688828901610bbe565b9550506020610c4788828901610be8565b9450506040610c5888828901610bfc565b9350506060610c6988828901610bfc565b9250506080610c7a88828901610bbe565b915050929550929590935056fea2646970667358221220d2252cada2884aa5420f2e6d529de29c51c224a23b0db45cf603077534be16ce64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x89 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x9608B232 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0xBEA4DFB5 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x293 JUMPI PUSH2 0x155 JUMP JUMPDEST DUP1 PUSH4 0x98048E9 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x51B92FFE EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x5B7F415C EQ PUSH2 0x1D5 JUMPI PUSH2 0x155 JUMP JUMPDEST CALLDATASIZE PUSH2 0x155 JUMPI PUSH0 CALLVALUE SUB PUSH2 0xC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA45FD86C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 CALLER PUSH2 0x10D CALLVALUE PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP3 SWAP2 SWAP1 PUSH2 0x762 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x141 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x153 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18C SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A9 PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1BF PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E9 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x213 PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x220 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x229 PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24A JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x253 PUSH2 0x478 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x260 SWAP2 SWAP1 PUSH2 0x86F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x274 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x49C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x8A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x8E3 JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 PUSH5 0x2540BE400 PUSH2 0x2CB PUSH2 0x49C JUMP JUMPDEST PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP6 PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x12 PUSH1 0xA PUSH2 0x307 SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x321 SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST DUP3 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x347 PUSH2 0x5BC JUMP JUMPDEST PUSH0 PUSH2 0x350 PUSH2 0x451 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0x373 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x3AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x3ED JUMPI PUSH1 0x40 MLOAD PUSH32 0xAB77F73E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xD7E29180ED912C1B05C7DE92C52D7D4421D50C763BB288A99D28F035576EEA69 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x12 PUSH1 0xA PUSH2 0x42A SWAP2 SWAP1 PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x93B JUMP JUMPDEST DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH2 0x446 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x44F PUSH0 PUSH2 0x643 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x507 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0xC10 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x540 PUSH2 0x5BC JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5B0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5B9 DUP2 PUSH2 0x643 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x5C4 PUSH2 0x704 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E2 PUSH2 0x451 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x641 JUMPI PUSH2 0x605 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x734 DUP3 PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x744 DUP2 PUSH2 0x72A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x75C DUP2 PUSH2 0x74A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x775 PUSH0 DUP4 ADD DUP6 PUSH2 0x73B JUMP JUMPDEST PUSH2 0x782 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x753 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x796 DUP2 PUSH2 0x74A JUMP JUMPDEST DUP2 EQ PUSH2 0x7A0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x7B1 DUP2 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7CC JUMPI PUSH2 0x7CB PUSH2 0x789 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7D9 DUP5 DUP3 DUP6 ADD PUSH2 0x7A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7F5 PUSH0 DUP4 ADD DUP5 PUSH2 0x753 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x80E PUSH0 DUP4 ADD DUP5 PUSH2 0x73B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x837 PUSH2 0x832 PUSH2 0x82D DUP5 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x848 DUP3 PUSH2 0x81D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x859 DUP3 PUSH2 0x83E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x869 DUP2 PUSH2 0x84F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x882 PUSH0 DUP4 ADD DUP5 PUSH2 0x860 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x89A DUP2 PUSH2 0x888 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x891 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8C2 DUP2 PUSH2 0x72A JUMP JUMPDEST DUP2 EQ PUSH2 0x8CC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8DD DUP2 PUSH2 0x8B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F8 JUMPI PUSH2 0x8F7 PUSH2 0x789 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x905 DUP5 DUP3 DUP6 ADD PUSH2 0x8CF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x945 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0x950 DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x95E DUP2 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x975 JUMPI PUSH2 0x974 PUSH2 0x90E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9B3 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0x9BE DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x9CE JUMPI PUSH2 0x9CD PUSH2 0x97C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0xA2E JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0xA0A JUMPI PUSH2 0xA09 PUSH2 0x90E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0xA19 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0xA27 DUP6 PUSH2 0x9D9 JUMP JUMPDEST SWAP5 POP PUSH2 0x9EE JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0xA46 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xB01 JUMP JUMPDEST DUP2 PUSH2 0xA53 JUMPI PUSH0 SWAP1 POP PUSH2 0xB01 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA69 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA73 JUMPI PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xB01 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA85 JUMPI PUSH2 0xA84 PUSH2 0x90E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xA9C JUMPI PUSH2 0xA9B PUSH2 0x90E JUMP JUMPDEST JUMPDEST POP PUSH2 0xB01 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xAD7 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xAD2 JUMPI PUSH2 0xAD1 PUSH2 0x90E JUMP JUMPDEST JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH2 0xAE4 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x9E5 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xAFB JUMPI PUSH2 0xAFA PUSH2 0x90E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB12 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0xB1D DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP PUSH2 0xB4A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0xA37 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB6A PUSH0 DUP4 PUSH2 0xB52 JUMP JUMPDEST SWAP2 POP PUSH2 0xB75 DUP3 PUSH2 0xB5C JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB89 DUP3 PUSH2 0xB5F JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB93 JUMP JUMPDEST DUP2 EQ PUSH2 0xBBB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBCC DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xBDB DUP2 PUSH2 0x888 JUMP JUMPDEST DUP2 EQ PUSH2 0xBE5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xBF6 DUP2 PUSH2 0xBD2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC0A DUP2 PUSH2 0x78D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC29 JUMPI PUSH2 0xC28 PUSH2 0x789 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC36 DUP9 DUP3 DUP10 ADD PUSH2 0xBBE JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xC47 DUP9 DUP3 DUP10 ADD PUSH2 0xBE8 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xC58 DUP9 DUP3 DUP10 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xC69 DUP9 DUP3 DUP10 ADD PUSH2 0xBFC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xC7A DUP9 DUP3 DUP10 ADD PUSH2 0xBBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 0x25 0x2C 0xAD LOG2 DUP9 BLOBBASEFEE 0xA5 TIMESTAMP 0xF 0x2E PUSH14 0x529DE29C51C224A23B0DB45CF603 SMOD PUSH22 0x34BE16CE64736F6C634300081E003300000000000000 ",
							"sourceMap": "298:2150:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2056:1;2043:9;:14;2039:78;;2081:24;;;;;;;;;;;;;;2039:78;2127:7;:12;;;2140:10;2152:23;2165:9;2152:12;:23::i;:::-;2127:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;298:2150;;;;1428:504;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2192:253;;;;;;;;;;;;;:::i;:::-;;487:66;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;437:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:3;;;;;;;;;;;;;:::i;:::-;;1638:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;396:32:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1101:319;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1428:504:12;1492:7;1562:14;1625:8;1587:34;:32;:34::i;:::-;1579:54;;;;:::i;:::-;1562:71;;1698:22;1746:8;1737:6;1723:11;:20;;;;:::i;:::-;:31;;;;:::i;:::-;1698:56;;478:2;533;:20;;;;:::i;:::-;529:1;:24;;;;:::i;:::-;478:2;1811;:20;;;;:::i;:::-;1794:14;:37;;;;:::i;:::-;1793:57;;;;:::i;:::-;1786:64;;;;1428:504;;;:::o;2192:253::-;1531:13:3;:11;:13::i;:::-;2243:12:12::1;2269:7;:5;:7::i;:::-;2261:21;;2290;2261:55;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2242:74;;;2332:7;2327:77;;2363:29;;;;;;;;;;;;;;2327:77;2419:18;;;;;;;;;;2231:214;2192:253::o:0;487:66::-;478:2;533;:20;;;;:::i;:::-;529:1;:24;;;;:::i;:::-;487:66;:::o;437:43::-;478:2;437:43;:::o;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;396:32:12:-;;;:::o;1101:319::-;1166:3;1230:9;1360:11;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1182:207;;;;;;1407:5;1400:12;;;1101:319;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:77::-;402:7;431:5;420:16;;365:77;;;:::o;448:118::-;535:24;553:5;535:24;:::i;:::-;530:3;523:37;448:118;;:::o;572:332::-;693:4;731:2;720:9;716:18;708:26;;744:71;812:1;801:9;797:17;788:6;744:71;:::i;:::-;825:72;893:2;882:9;878:18;869:6;825:72;:::i;:::-;572:332;;;;;:::o;991:117::-;1100:1;1097;1090:12;1237:122;1310:24;1328:5;1310:24;:::i;:::-;1303:5;1300:35;1290:63;;1349:1;1346;1339:12;1290:63;1237:122;:::o;1365:139::-;1411:5;1449:6;1436:20;1427:29;;1465:33;1492:5;1465:33;:::i;:::-;1365:139;;;;:::o;1510:329::-;1569:6;1618:2;1606:9;1597:7;1593:23;1589:32;1586:119;;;1624:79;;:::i;:::-;1586:119;1744:1;1769:53;1814:7;1805:6;1794:9;1790:22;1769:53;:::i;:::-;1759:63;;1715:117;1510:329;;;;:::o;1845:222::-;1938:4;1976:2;1965:9;1961:18;1953:26;;1989:71;2057:1;2046:9;2042:17;2033:6;1989:71;:::i;:::-;1845:222;;;;:::o;2073:::-;2166:4;2204:2;2193:9;2189:18;2181:26;;2217:71;2285:1;2274:9;2270:17;2261:6;2217:71;:::i;:::-;2073:222;;;;:::o;2301:60::-;2329:3;2350:5;2343:12;;2301:60;;;:::o;2367:142::-;2417:9;2450:53;2468:34;2477:24;2495:5;2477:24;:::i;:::-;2468:34;:::i;:::-;2450:53;:::i;:::-;2437:66;;2367:142;;;:::o;2515:126::-;2565:9;2598:37;2629:5;2598:37;:::i;:::-;2585:50;;2515:126;;;:::o;2647:142::-;2713:9;2746:37;2777:5;2746:37;:::i;:::-;2733:50;;2647:142;;;:::o;2795:163::-;2898:53;2945:5;2898:53;:::i;:::-;2893:3;2886:66;2795:163;;:::o;2964:254::-;3073:4;3111:2;3100:9;3096:18;3088:26;;3124:87;3208:1;3197:9;3193:17;3184:6;3124:87;:::i;:::-;2964:254;;;;:::o;3224:76::-;3260:7;3289:5;3278:16;;3224:76;;;:::o;3306:115::-;3391:23;3408:5;3391:23;:::i;:::-;3386:3;3379:36;3306:115;;:::o;3427:218::-;3518:4;3556:2;3545:9;3541:18;3533:26;;3569:69;3635:1;3624:9;3620:17;3611:6;3569:69;:::i;:::-;3427:218;;;;:::o;3651:122::-;3724:24;3742:5;3724:24;:::i;:::-;3717:5;3714:35;3704:63;;3763:1;3760;3753:12;3704:63;3651:122;:::o;3779:139::-;3825:5;3863:6;3850:20;3841:29;;3879:33;3906:5;3879:33;:::i;:::-;3779:139;;;;:::o;3924:329::-;3983:6;4032:2;4020:9;4011:7;4007:23;4003:32;4000:119;;;4038:79;;:::i;:::-;4000:119;4158:1;4183:53;4228:7;4219:6;4208:9;4204:22;4183:53;:::i;:::-;4173:63;;4129:117;3924:329;;;;:::o;4259:180::-;4307:77;4304:1;4297:88;4404:4;4401:1;4394:15;4428:4;4425:1;4418:15;4445:410;4485:7;4508:20;4526:1;4508:20;:::i;:::-;4503:25;;4542:20;4560:1;4542:20;:::i;:::-;4537:25;;4597:1;4594;4590:9;4619:30;4637:11;4619:30;:::i;:::-;4608:41;;4798:1;4789:7;4785:15;4782:1;4779:22;4759:1;4752:9;4732:83;4709:139;;4828:18;;:::i;:::-;4709:139;4493:362;4445:410;;;;:::o;4861:180::-;4909:77;4906:1;4899:88;5006:4;5003:1;4996:15;5030:4;5027:1;5020:15;5047:185;5087:1;5104:20;5122:1;5104:20;:::i;:::-;5099:25;;5138:20;5156:1;5138:20;:::i;:::-;5133:25;;5177:1;5167:35;;5182:18;;:::i;:::-;5167:35;5224:1;5221;5217:9;5212:14;;5047:185;;;;:::o;5238:102::-;5280:8;5327:5;5324:1;5320:13;5299:34;;5238:102;;;:::o;5346:848::-;5407:5;5414:4;5438:6;5429:15;;5462:5;5453:14;;5476:712;5497:1;5487:8;5484:15;5476:712;;;5592:4;5587:3;5583:14;5577:4;5574:24;5571:50;;;5601:18;;:::i;:::-;5571:50;5651:1;5641:8;5637:16;5634:451;;;6066:4;6059:5;6055:16;6046:25;;5634:451;6116:4;6110;6106:15;6098:23;;6146:32;6169:8;6146:32;:::i;:::-;6134:44;;5476:712;;;5346:848;;;;;;;:::o;6200:1073::-;6254:5;6445:8;6435:40;;6466:1;6457:10;;6468:5;;6435:40;6494:4;6484:36;;6511:1;6502:10;;6513:5;;6484:36;6580:4;6628:1;6623:27;;;;6664:1;6659:191;;;;6573:277;;6623:27;6641:1;6632:10;;6643:5;;;6659:191;6704:3;6694:8;6691:17;6688:43;;;6711:18;;:::i;:::-;6688:43;6760:8;6757:1;6753:16;6744:25;;6795:3;6788:5;6785:14;6782:40;;;6802:18;;:::i;:::-;6782:40;6835:5;;;6573:277;;6959:2;6949:8;6946:16;6940:3;6934:4;6931:13;6927:36;6909:2;6899:8;6896:16;6891:2;6885:4;6882:12;6878:35;6862:111;6859:246;;;7015:8;7009:4;7005:19;6996:28;;7050:3;7043:5;7040:14;7037:40;;;7057:18;;:::i;:::-;7037:40;7090:5;;6859:246;7130:42;7168:3;7158:8;7152:4;7149:1;7130:42;:::i;:::-;7115:57;;;;7204:4;7199:3;7195:14;7188:5;7185:25;7182:51;;;7213:18;;:::i;:::-;7182:51;7262:4;7255:5;7251:16;7242:25;;6200:1073;;;;;;:::o;7279:285::-;7339:5;7363:23;7381:4;7363:23;:::i;:::-;7355:31;;7407:27;7425:8;7407:27;:::i;:::-;7395:39;;7453:104;7490:66;7480:8;7474:4;7453:104;:::i;:::-;7444:113;;7279:285;;;;:::o;7570:147::-;7671:11;7708:3;7693:18;;7570:147;;;;:::o;7723:114::-;;:::o;7843:398::-;8002:3;8023:83;8104:1;8099:3;8023:83;:::i;:::-;8016:90;;8115:93;8204:3;8115:93;:::i;:::-;8233:1;8228:3;8224:11;8217:18;;7843:398;;;:::o;8247:379::-;8431:3;8453:147;8596:3;8453:147;:::i;:::-;8446:154;;8617:3;8610:10;;8247:379;;;:::o;8632:105::-;8668:7;8708:22;8701:5;8697:34;8686:45;;8632:105;;;:::o;8743:120::-;8815:23;8832:5;8815:23;:::i;:::-;8808:5;8805:34;8795:62;;8853:1;8850;8843:12;8795:62;8743:120;:::o;8869:141::-;8925:5;8956:6;8950:13;8941:22;;8972:32;8998:5;8972:32;:::i;:::-;8869:141;;;;:::o;9016:120::-;9088:23;9105:5;9088:23;:::i;:::-;9081:5;9078:34;9068:62;;9126:1;9123;9116:12;9068:62;9016:120;:::o;9142:141::-;9198:5;9229:6;9223:13;9214:22;;9245:32;9271:5;9245:32;:::i;:::-;9142:141;;;;:::o;9289:143::-;9346:5;9377:6;9371:13;9362:22;;9393:33;9420:5;9393:33;:::i;:::-;9289:143;;;;:::o;9438:971::-;9541:6;9549;9557;9565;9573;9622:3;9610:9;9601:7;9597:23;9593:33;9590:120;;;9629:79;;:::i;:::-;9590:120;9749:1;9774:63;9829:7;9820:6;9809:9;9805:22;9774:63;:::i;:::-;9764:73;;9720:127;9886:2;9912:63;9967:7;9958:6;9947:9;9943:22;9912:63;:::i;:::-;9902:73;;9857:128;10024:2;10050:64;10106:7;10097:6;10086:9;10082:22;10050:64;:::i;:::-;10040:74;;9995:129;10163:2;10189:64;10245:7;10236:6;10225:9;10221:22;10189:64;:::i;:::-;10179:74;;10134:129;10302:3;10329:63;10384:7;10375:6;10364:9;10360:22;10329:63;:::i;:::-;10319:73;;10273:129;9438:971;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "652200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOKEN_DECIMALS()": "392",
								"TOKEN_USD_PRICE()": "infinite",
								"amountToMint(uint256)": "infinite",
								"getChainlinkDataFeedLatestAnswer()": "infinite",
								"i_token()": "infinite",
								"owner()": "2536",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 702,
									"end": 1043,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 744,
									"end": 754,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 785,
									"end": 797,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 767,
									"end": 798,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 767,
									"end": 798,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1034,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "694AA1769357215DE4FAC081BF1F309ADC325306"
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 956,
									"end": 1035,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 956,
									"end": 1035,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 702,
									"end": 1043,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1462"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1459"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 298,
									"end": 2448,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d2252cada2884aa5420f2e6d529de29c51c224a23b0db45cf603077534be16ce64736f6c634300081e0033",
									".code": [
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "9608B232"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "BEA4DFB5"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "98048E9"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "3CCFD60B"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "51B92FFE"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "5B7F415C"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2052,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 2039,
											"end": 2117,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "A45FD86C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2105,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2039,
											"end": 2117,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 2039,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2134,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1462"
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2139,
											"name": "PUSH",
											"source": 12,
											"value": "40C10F19"
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2165,
											"end": 2174,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2152,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2175,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 2152,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 2127,
											"end": 2176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2176,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 298,
											"end": 2448,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1428,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1428,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1428,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2192,
											"end": 2445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 487,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 487,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 437,
											"end": 480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 437,
											"end": 480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 396,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 396,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1101,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 1101,
											"end": 1420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1492,
											"end": 1499,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1576,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1633,
											"name": "PUSH",
											"source": 12,
											"value": "2540BE400"
										},
										{
											"begin": 1587,
											"end": 1621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 1619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1587,
											"end": 1621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1621,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1587,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1579,
											"end": 1633,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1579,
											"end": 1633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1633,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1579,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1633,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1562,
											"end": 1633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1720,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1754,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1737,
											"end": 1743,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1734,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1723,
											"end": 1743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1723,
											"end": 1743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1723,
											"end": 1754,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1723,
											"end": 1754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1754,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1723,
											"end": 1754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1698,
											"end": 1754,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 533,
											"end": 535,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 533,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 533,
											"end": 553,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 533,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 533,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 533,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 533,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 533,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 529,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 529,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 1811,
											"end": 1813,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1811,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1811,
											"end": 1831,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1811,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1831,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 1811,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1808,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1794,
											"end": 1831,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1794,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1831,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 1794,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1793,
											"end": 1850,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1850,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1793,
											"end": 1850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1793,
											"end": 1850,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 1793,
											"end": 1850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1786,
											"end": 1850,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1786,
											"end": 1850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1786,
											"end": 1850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1786,
											"end": 1850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1428,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2192,
											"end": 2445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2243,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2269,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2269,
											"end": 2276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2269,
											"end": 2276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2269,
											"end": 2276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2290,
											"end": 2311,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2316,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2242,
											"end": 2316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2242,
											"end": 2316,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2242,
											"end": 2316,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2332,
											"end": 2339,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2404,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2327,
											"end": 2404,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "AB77F73E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2363,
											"end": 2392,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2327,
											"end": 2404,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 2327,
											"end": 2404,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D7E29180ED912C1B05C7DE92C52D7D4421D50C763BB288A99D28F035576EEA69"
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2419,
											"end": 2437,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 2231,
											"end": 2445,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2192,
											"end": 2445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 487,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 533,
											"end": 535,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 533,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 533,
											"end": 553,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 533,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 533,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 533,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 533,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 533,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 529,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 529,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 529,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 529,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 529,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 487,
											"end": 553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 437,
											"end": 480,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 437,
											"end": 480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 396,
											"end": 428,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1462"
										},
										{
											"begin": 396,
											"end": 428,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 396,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1166,
											"end": 1169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1371,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1459"
										},
										{
											"begin": 1360,
											"end": 1387,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1387,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1387,
											"name": "PUSH",
											"source": 12,
											"value": "FEAF968C"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 1360,
											"end": 1389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 1360,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1182,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1182,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1182,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1182,
											"end": 1389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1182,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1182,
											"end": 1389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1407,
											"end": 1412,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1400,
											"end": 1412,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1400,
											"end": 1412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1400,
											"end": 1412,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1101,
											"end": 1420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 13,
											"value": "151"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 365,
											"end": 442,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 402,
											"end": 409,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 420,
											"end": 436,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 448,
											"end": 566,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 448,
											"end": 566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 535,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 553,
											"end": 558,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 535,
											"end": 559,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 535,
											"end": 559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 535,
											"end": 559,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 535,
											"end": 559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 530,
											"end": 533,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 523,
											"end": 560,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 448,
											"end": 566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 448,
											"end": 566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 448,
											"end": 566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 904,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 572,
											"end": 904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 693,
											"end": 697,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 731,
											"end": 733,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 729,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 716,
											"end": 734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 708,
											"end": 734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 708,
											"end": 734,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 744,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 812,
											"end": 813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 810,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 797,
											"end": 814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 788,
											"end": 794,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 744,
											"end": 815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 744,
											"end": 815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 744,
											"end": 815,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 744,
											"end": 815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 825,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 893,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 882,
											"end": 891,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 878,
											"end": 896,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 869,
											"end": 875,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 825,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 825,
											"end": 897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 825,
											"end": 897,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 825,
											"end": 897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 572,
											"end": 904,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 572,
											"end": 904,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 572,
											"end": 904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 904,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 572,
											"end": 904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 991,
											"end": 1108,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 991,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1100,
											"end": 1101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1090,
											"end": 1102,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1237,
											"end": 1359,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 1237,
											"end": 1359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1328,
											"end": 1333,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 1310,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1310,
											"end": 1334,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 1310,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1303,
											"end": 1308,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1300,
											"end": 1335,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 1290,
											"end": 1353,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1351,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1290,
											"end": 1353,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 1290,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1237,
											"end": 1359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1237,
											"end": 1359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1504,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 1365,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1411,
											"end": 1416,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1456,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1456,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1465,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 1492,
											"end": 1497,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1465,
											"end": 1498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 1465,
											"end": 1498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1465,
											"end": 1498,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 1465,
											"end": 1498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1504,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1504,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1504,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1504,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1839,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1510,
											"end": 1839,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1606,
											"end": 1615,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1593,
											"end": 1616,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1589,
											"end": 1621,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1586,
											"end": 1705,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1586,
											"end": 1705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 1586,
											"end": 1705,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 1624,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1624,
											"end": 1703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1624,
											"end": 1703,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 1624,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1586,
											"end": 1705,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 1586,
											"end": 1705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1769,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 1814,
											"end": 1821,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1803,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1812,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1769,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 1769,
											"end": 1822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1769,
											"end": 1822,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 1769,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1839,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1839,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1510,
											"end": 1839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1845,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1938,
											"end": 1942,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1978,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1965,
											"end": 1974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1979,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1979,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 2057,
											"end": 2058,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2055,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2042,
											"end": 2059,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 1989,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1989,
											"end": 2060,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 1989,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 2067,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 2067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 2067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 2067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1845,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2206,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 2217,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2361,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 2301,
											"end": 2361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2332,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2350,
											"end": 2355,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2355,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2509,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 2367,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2417,
											"end": 2426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 2468,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2477,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 2477,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2501,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2477,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2468,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 2468,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2468,
											"end": 2502,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2468,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 2450,
											"end": 2503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 2450,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2437,
											"end": 2503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2437,
											"end": 2503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2367,
											"end": 2509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2515,
											"end": 2641,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2515,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2565,
											"end": 2574,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 2629,
											"end": 2634,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 2598,
											"end": 2635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2635,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 2598,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2635,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2635,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2515,
											"end": 2641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2515,
											"end": 2641,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2515,
											"end": 2641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2515,
											"end": 2641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2647,
											"end": 2789,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2647,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2722,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2746,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 2746,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2783,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2733,
											"end": 2783,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2647,
											"end": 2789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2647,
											"end": 2789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2647,
											"end": 2789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2647,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2958,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2795,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 2945,
											"end": 2950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2898,
											"end": 2951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2896,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2886,
											"end": 2952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2958,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3218,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 2964,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3073,
											"end": 3077,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3109,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3114,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3088,
											"end": 3114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3208,
											"end": 3209,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3184,
											"end": 3190,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 3124,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3124,
											"end": 3211,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 3124,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3218,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3218,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2964,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3300,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3224,
											"end": 3300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3260,
											"end": 3267,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3289,
											"end": 3294,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3294,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3294,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3300,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3224,
											"end": 3300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3421,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 3306,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3408,
											"end": 3413,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3391,
											"end": 3414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3391,
											"end": 3414,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3391,
											"end": 3414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3386,
											"end": 3389,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3379,
											"end": 3415,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3421,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3306,
											"end": 3421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3645,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 3427,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3518,
											"end": 3522,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3556,
											"end": 3558,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3541,
											"end": 3559,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3635,
											"end": 3636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3633,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3620,
											"end": 3637,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3617,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 3569,
											"end": 3638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3569,
											"end": 3638,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3569,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3645,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3645,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3773,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 3651,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3742,
											"end": 3747,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 3724,
											"end": 3748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3724,
											"end": 3748,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3724,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3722,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3714,
											"end": 3749,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3704,
											"end": 3767,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 3704,
											"end": 3767,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3704,
											"end": 3767,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 3704,
											"end": 3767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3773,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3918,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 3779,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3825,
											"end": 3830,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3870,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3841,
											"end": 3870,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3841,
											"end": 3870,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3906,
											"end": 3911,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 3879,
											"end": 3912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3912,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3879,
											"end": 3912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3918,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3779,
											"end": 3918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 4253,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 3924,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3983,
											"end": 3989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4032,
											"end": 4034,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4029,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4011,
											"end": 4018,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4007,
											"end": 4030,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4003,
											"end": 4035,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4000,
											"end": 4119,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4000,
											"end": 4119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 4000,
											"end": 4119,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4038,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4038,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4038,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4038,
											"end": 4117,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4038,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4000,
											"end": 4119,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 4000,
											"end": 4119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4159,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 4228,
											"end": 4235,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4225,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 4183,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4183,
											"end": 4236,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 4183,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4236,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4129,
											"end": 4246,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 4253,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 4253,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 4253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 4253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 4253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4259,
											"end": 4439,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 4259,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4304,
											"end": 4305,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4385,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4408,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4394,
											"end": 4409,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4433,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4445,
											"end": 4855,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 4445,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4492,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4508,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4526,
											"end": 4527,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4508,
											"end": 4528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4508,
											"end": 4528,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4508,
											"end": 4528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4528,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4503,
											"end": 4528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4542,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4560,
											"end": 4561,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4542,
											"end": 4562,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4542,
											"end": 4562,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4542,
											"end": 4562,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4542,
											"end": 4562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4537,
											"end": 4562,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4537,
											"end": 4562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4597,
											"end": 4598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4594,
											"end": 4595,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4590,
											"end": 4599,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4619,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4637,
											"end": 4648,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4619,
											"end": 4649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4619,
											"end": 4649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4619,
											"end": 4649,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4619,
											"end": 4649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 4649,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4608,
											"end": 4649,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4798,
											"end": 4799,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4785,
											"end": 4800,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4782,
											"end": 4783,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4801,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4760,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4752,
											"end": 4761,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4732,
											"end": 4815,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 4828,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "tag",
											"source": 13,
											"value": "209"
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4709,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4445,
											"end": 4855,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4445,
											"end": 4855,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4445,
											"end": 4855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4445,
											"end": 4855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4445,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4861,
											"end": 5041,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 4861,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4909,
											"end": 4986,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4907,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4899,
											"end": 4987,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5006,
											"end": 5010,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 5003,
											"end": 5004,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4996,
											"end": 5011,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5030,
											"end": 5034,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5027,
											"end": 5028,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5020,
											"end": 5035,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 5104,
											"end": 5124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5104,
											"end": 5124,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5124,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 5156,
											"end": 5157,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 5138,
											"end": 5158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 5138,
											"end": 5158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5133,
											"end": 5158,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5133,
											"end": 5158,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5177,
											"end": 5178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5167,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 5167,
											"end": 5202,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 5182,
											"end": 5200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "tag",
											"source": 13,
											"value": "215"
										},
										{
											"begin": 5182,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5167,
											"end": 5202,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 5167,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5224,
											"end": 5225,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5222,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5217,
											"end": 5226,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5212,
											"end": 5226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5212,
											"end": 5226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5047,
											"end": 5232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5340,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 5238,
											"end": 5340,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5280,
											"end": 5288,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5324,
											"end": 5325,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5320,
											"end": 5333,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5333,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5299,
											"end": 5333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5340,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5340,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5340,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5407,
											"end": 5412,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5467,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5467,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5487,
											"end": 5495,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5484,
											"end": 5499,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5592,
											"end": 5596,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5587,
											"end": 5590,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5583,
											"end": 5597,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5577,
											"end": 5581,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5574,
											"end": 5598,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 5601,
											"end": 5619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 5601,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "tag",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 5571,
											"end": 5621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5651,
											"end": 5652,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5641,
											"end": 5649,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5637,
											"end": 5653,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 6085,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 5634,
											"end": 6085,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6066,
											"end": 6070,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6064,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6071,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6071,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5634,
											"end": 6085,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 5634,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6116,
											"end": 6120,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6110,
											"end": 6114,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6106,
											"end": 6121,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6098,
											"end": 6121,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6169,
											"end": 6177,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 6146,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6178,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 6146,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6134,
											"end": 6178,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6134,
											"end": 6178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 5476,
											"end": 6188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 6194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6254,
											"end": 6259,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6445,
											"end": 6453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6435,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 6435,
											"end": 6475,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6466,
											"end": 6467,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6457,
											"end": 6467,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6468,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6468,
											"end": 6473,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6435,
											"end": 6475,
											"name": "tag",
											"source": 13,
											"value": "226"
										},
										{
											"begin": 6435,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6494,
											"end": 6498,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6484,
											"end": 6520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 6484,
											"end": 6520,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6511,
											"end": 6512,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6502,
											"end": 6512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6513,
											"end": 6518,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6484,
											"end": 6520,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 6484,
											"end": 6520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6629,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6623,
											"end": 6650,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6623,
											"end": 6650,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6623,
											"end": 6650,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 6623,
											"end": 6650,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6664,
											"end": 6665,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6659,
											"end": 6850,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6850,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 6659,
											"end": 6850,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6573,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 6573,
											"end": 6850,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6623,
											"end": 6650,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 6623,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6632,
											"end": 6642,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 6642,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6643,
											"end": 6648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6643,
											"end": 6648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6643,
											"end": 6648,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6659,
											"end": 6850,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 6659,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 6707,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6694,
											"end": 6702,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6708,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6731,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 6688,
											"end": 6731,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6711,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 6711,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 6711,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6711,
											"end": 6729,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 6711,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 6731,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 6688,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6760,
											"end": 6768,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6757,
											"end": 6758,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 6753,
											"end": 6769,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6769,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6744,
											"end": 6769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6798,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6788,
											"end": 6793,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6785,
											"end": 6799,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6782,
											"end": 6822,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6782,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6782,
											"end": 6822,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 6802,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 6802,
											"end": 6820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6802,
											"end": 6820,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 6802,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6782,
											"end": 6822,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6782,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6835,
											"end": 6840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6835,
											"end": 6840,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6573,
											"end": 6850,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 6573,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6573,
											"end": 6850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6959,
											"end": 6961,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6949,
											"end": 6957,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 6962,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6940,
											"end": 6943,
											"name": "PUSH",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6944,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 6963,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6909,
											"end": 6911,
											"name": "PUSH",
											"source": 13,
											"value": "4E"
										},
										{
											"begin": 6899,
											"end": 6907,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6896,
											"end": 6912,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6891,
											"end": 6893,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 6885,
											"end": 6889,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6882,
											"end": 6894,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6913,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6862,
											"end": 6973,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7105,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 6859,
											"end": 7105,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7015,
											"end": 7023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7009,
											"end": 7013,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7005,
											"end": 7024,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 6996,
											"end": 7024,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6996,
											"end": 7024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7043,
											"end": 7048,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7040,
											"end": 7054,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7077,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7077,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 7037,
											"end": 7077,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 7057,
											"end": 7075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 7057,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7037,
											"end": 7077,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 7037,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7090,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 7090,
											"end": 7095,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7105,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 6859,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7168,
											"end": 7171,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7158,
											"end": 7166,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7152,
											"end": 7156,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7130,
											"end": 7172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 7130,
											"end": 7172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7130,
											"end": 7172,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7130,
											"end": 7172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7172,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7115,
											"end": 7172,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7204,
											"end": 7208,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7195,
											"end": 7209,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 7188,
											"end": 7193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7185,
											"end": 7210,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7233,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7182,
											"end": 7233,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 7213,
											"end": 7231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7213,
											"end": 7231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7233,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7182,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7262,
											"end": 7266,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7255,
											"end": 7260,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7251,
											"end": 7267,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 7242,
											"end": 7267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7242,
											"end": 7267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 7273,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6200,
											"end": 7273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7279,
											"end": 7564,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 7279,
											"end": 7564,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7339,
											"end": 7344,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 7381,
											"end": 7385,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 7363,
											"end": 7386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7355,
											"end": 7386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7355,
											"end": 7386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7407,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7425,
											"end": 7433,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7407,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 7407,
											"end": 7434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7407,
											"end": 7434,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7407,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7395,
											"end": 7434,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7395,
											"end": 7434,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7453,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7490,
											"end": 7556,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7480,
											"end": 7488,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7453,
											"end": 7557,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 7453,
											"end": 7557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7453,
											"end": 7557,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7453,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7557,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7557,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7279,
											"end": 7564,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7279,
											"end": 7564,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7279,
											"end": 7564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7279,
											"end": 7564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7279,
											"end": 7564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7717,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 7570,
											"end": 7717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7682,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7693,
											"end": 7711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7717,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7570,
											"end": 7717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7837,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7723,
											"end": 7837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7723,
											"end": 7837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 8241,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7843,
											"end": 8241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8005,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 8104,
											"end": 8105,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8102,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 8023,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8023,
											"end": 8106,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 8023,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8016,
											"end": 8106,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8016,
											"end": 8106,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8115,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 8204,
											"end": 8207,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8115,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 8115,
											"end": 8208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8115,
											"end": 8208,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 8115,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8233,
											"end": 8234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8224,
											"end": 8235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8217,
											"end": 8235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 8241,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 8241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 8241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7843,
											"end": 8241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8247,
											"end": 8626,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 8247,
											"end": 8626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8431,
											"end": 8434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8453,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 8596,
											"end": 8599,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8453,
											"end": 8600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 8453,
											"end": 8600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8453,
											"end": 8600,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 8453,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8446,
											"end": 8600,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8446,
											"end": 8600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8617,
											"end": 8620,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8610,
											"end": 8620,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8610,
											"end": 8620,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8247,
											"end": 8626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8247,
											"end": 8626,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8247,
											"end": 8626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8247,
											"end": 8626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8737,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 8632,
											"end": 8737,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8668,
											"end": 8675,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8708,
											"end": 8730,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8701,
											"end": 8706,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8697,
											"end": 8731,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8686,
											"end": 8731,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8686,
											"end": 8731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8737,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8737,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8737,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8632,
											"end": 8737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8743,
											"end": 8863,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 8743,
											"end": 8863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 8832,
											"end": 8837,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 8815,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8838,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 8815,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8808,
											"end": 8813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8805,
											"end": 8839,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8857,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 8795,
											"end": 8857,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8853,
											"end": 8854,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8851,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8855,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8795,
											"end": 8857,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 8795,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8743,
											"end": 8863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8743,
											"end": 8863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9010,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 8869,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8925,
											"end": 8930,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8950,
											"end": 8963,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8941,
											"end": 8963,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8941,
											"end": 8963,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8972,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 8998,
											"end": 9003,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8972,
											"end": 9004,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 8972,
											"end": 9004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8972,
											"end": 9004,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 8972,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9010,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8869,
											"end": 9010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9136,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 9016,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9088,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 9105,
											"end": 9110,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9088,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 9088,
											"end": 9111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9088,
											"end": 9111,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 9088,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9081,
											"end": 9086,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9078,
											"end": 9112,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9068,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 9068,
											"end": 9130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9126,
											"end": 9127,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9123,
											"end": 9124,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9116,
											"end": 9128,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9068,
											"end": 9130,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 9068,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9142,
											"end": 9283,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 9142,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9198,
											"end": 9203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9229,
											"end": 9235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9223,
											"end": 9236,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9214,
											"end": 9236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9214,
											"end": 9236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9245,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 9271,
											"end": 9276,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9245,
											"end": 9277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 9245,
											"end": 9277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9245,
											"end": 9277,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 9245,
											"end": 9277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9142,
											"end": 9283,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9142,
											"end": 9283,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9142,
											"end": 9283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9142,
											"end": 9283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9142,
											"end": 9283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9432,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 9289,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9346,
											"end": 9351,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9377,
											"end": 9383,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9371,
											"end": 9384,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9362,
											"end": 9384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9393,
											"end": 9426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 9420,
											"end": 9425,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9393,
											"end": 9426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 9393,
											"end": 9426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9393,
											"end": 9426,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 9393,
											"end": 9426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9432,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9432,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9432,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9289,
											"end": 9432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9541,
											"end": 9547,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9557,
											"end": 9563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9565,
											"end": 9571,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9622,
											"end": 9625,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 9610,
											"end": 9619,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9601,
											"end": 9608,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9620,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9593,
											"end": 9626,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9710,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9710,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 9590,
											"end": 9710,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9629,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 9629,
											"end": 9708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 9629,
											"end": 9708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9629,
											"end": 9708,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 9629,
											"end": 9708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9710,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 9590,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9749,
											"end": 9750,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 9829,
											"end": 9836,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9820,
											"end": 9826,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9809,
											"end": 9818,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9805,
											"end": 9827,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 9774,
											"end": 9837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 9774,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9764,
											"end": 9837,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9764,
											"end": 9837,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9720,
											"end": 9847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9886,
											"end": 9888,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9912,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 9967,
											"end": 9974,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9958,
											"end": 9964,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9947,
											"end": 9956,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 9943,
											"end": 9965,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9912,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 9912,
											"end": 9975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9912,
											"end": 9975,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 9912,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9902,
											"end": 9975,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9902,
											"end": 9975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9857,
											"end": 9985,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10024,
											"end": 10026,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10050,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 10106,
											"end": 10113,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10097,
											"end": 10103,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10086,
											"end": 10095,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10082,
											"end": 10104,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10050,
											"end": 10114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 10050,
											"end": 10114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10050,
											"end": 10114,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 10050,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10114,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10114,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9995,
											"end": 10124,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10163,
											"end": 10165,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 10189,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 10245,
											"end": 10252,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10236,
											"end": 10242,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10225,
											"end": 10234,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10221,
											"end": 10243,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10189,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 10189,
											"end": 10253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10189,
											"end": 10253,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 10189,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10179,
											"end": 10253,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10179,
											"end": 10253,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10263,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10302,
											"end": 10305,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 10329,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 10384,
											"end": 10391,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 10375,
											"end": 10381,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10364,
											"end": 10373,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10382,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 10329,
											"end": 10392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10329,
											"end": 10392,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 10329,
											"end": 10392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10319,
											"end": 10392,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10319,
											"end": 10392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10273,
											"end": 10402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9438,
											"end": 10409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts@5.2.0/access/AccessControl.sol",
								"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol",
								"@openzeppelin/contracts@5.2.0/access/Ownable.sol",
								"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.2.0/utils/Context.sol",
								"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol",
								"contracts/MyERC20.sol",
								"contracts/TokenShop.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"TOKEN_DECIMALS()": "5b7f415c",
							"TOKEN_USD_PRICE()": "51b92ffe",
							"amountToMint(uint256)": "098048e9",
							"getChainlinkDataFeedLatestAnswer()": "bea4dfb5",
							"i_token()": "9608b232",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenShop__CouldNotWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenShop__ZeroETHSent\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BalanceWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN_USD_PRICE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInETH\",\"type\":\"uint256\"}],\"name\":\"amountToMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChainlinkDataFeedLatestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_token\",\"outputs\":[{\"internalType\":\"contract MyERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getChainlinkDataFeedLatestAnswer()\":{\"notice\":\"Returns the latest answer\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenShop.sol\":\"TokenShop\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d39e11b1dc7b9b8ccdabbc9be442ab7cda4a81c748f57e316dcb1bcb4a28bf9\",\"dweb:/ipfs/QmaG6vz6W6iEUBsbHSBob5mdcitYxWjoygxREHpsJHfWrS\"]},\"@openzeppelin/contracts@5.2.0/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol\":{\"keccak256\":\"0xc1c2a7f1563b77050dc6d507db9f4ada5d042c1f6a9ddbffdc49c77cdc0a1606\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd54abb96a6156d9a761f6fdad1d3004bc48d2d4fce47f40a3f91a7ae83fc3a1\",\"dweb:/ipfs/QmUrFSGkTDJ7WaZ6qPVVe3Gn5uN2viPb7x7QQ35UX4DofX\"]},\"@openzeppelin/contracts@5.2.0/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts@5.2.0/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/MyERC20.sol\":{\"keccak256\":\"0x19e61d8da4c1d69549cb35d32de785917ba41e5ee700aea67b58b53d4bfa61dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2dfaf6e7b8254af0d25fd8eb233658f820168feae013300076be07cb574ce463\",\"dweb:/ipfs/QmX98VexfchF1vsVESKkf3WTmCbU1YtMffKFP7ar9dg9dQ\"]},\"contracts/TokenShop.sol\":{\"keccak256\":\"0xda5e8d8863072538af83c432ba5a41a386e12258955060fee050fc7b3345c7f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://802d902ecf21a6365499f92c8509e056d65c92d6bf69640aea461427150249cf\",\"dweb:/ipfs/QmcegpzcHbTafYPhD1Q5JBy1y9bMYdC1CVzYiGE4yqTajR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 433,
								"contract": "contracts/TokenShop.sol:TokenShop",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getChainlinkDataFeedLatestAnswer()": {
								"notice": "Returns the latest answer"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "120:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "155:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "163:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "189:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "189:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:7:0"
									},
									"scope": 45,
									"src": "146:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "209:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "246:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "245:15:0"
									},
									"scope": 45,
									"src": "200:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "274:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "307:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:9:0"
									},
									"scope": 45,
									"src": "265:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "329:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "354:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "347:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "347:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "390:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "390:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "413:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "429:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "421:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "448:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "440:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "466:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "459:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "459:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "389:93:0"
									},
									"scope": 45,
									"src": "320:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "496:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "511:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "556:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "549:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "572:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "588:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "580:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "607:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "599:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "625:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "618:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "618:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "548:93:0"
									},
									"scope": 45,
									"src": "487:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "110:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:613:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.2.0/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							341
						],
						"Context": [
							1358
						],
						"ERC165": [
							1382
						],
						"IAccessControl": [
							424
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 425,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 424,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 1359,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1358,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 53,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 342,
							"sourceUnit": 1383,
							"src": "233:57:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 52,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1382,
										"src": "241:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 55,
										"name": "Context",
										"nameLocations": [
											"1988:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1358,
										"src": "1988:7:1"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:1"
								},
								{
									"baseName": {
										"id": 57,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 424,
										"src": "1997:14:1"
									},
									"id": 58,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:1"
								},
								{
									"baseName": {
										"id": 59,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1382,
										"src": "2013:6:1"
									},
									"id": 60,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 54,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 341,
							"linearizedBaseContracts": [
								341,
								1382,
								1394,
								424,
								1358
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 67,
									"members": [
										{
											"constant": false,
											"id": 64,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "2052:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 63,
												"keyName": "account",
												"keyNameLocation": "2068:7:1",
												"keyType": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 62,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 66,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 67,
											"src": "2102:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 65,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:1",
									"nodeType": "StructDefinition",
									"scope": 341,
									"src": "2026:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 72,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 341,
									"src": "2132:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 71,
										"keyName": "role",
										"keyNameLocation": "2148:4:1",
										"keyType": {
											"id": 68,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 70,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 69,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 67,
												"src": "2156:8:1"
											},
											"referencedDeclaration": 67,
											"src": "2156:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$67_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 75,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 341,
									"src": "2187:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 73,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 74,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2454:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 81,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "2475:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 80,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															139,
															160
														],
														"referencedDeclaration": 139,
														"src": "2464:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:1"
											},
											{
												"id": 84,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:1"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 86,
									"name": "onlyRole",
									"nameLocation": "2431:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2440:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 77,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:1"
									},
									"src": "2422:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1381
									],
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2656:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 95,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2673:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 97,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "2693:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$424_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$424_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 96,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$424",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 89,
																"src": "2748:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 101,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$341_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1381,
															"src": "2724:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 94,
												"id": 106,
												"nodeType": "Return",
												"src": "2666:94:1"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 91,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:1"
									},
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2592:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 88,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2650:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 92,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:1"
									},
									"scope": 341,
									"src": "2565:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										391
									],
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2937:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 118,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "2954:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 120,
															"indexExpression": {
																"id": 119,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "2961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$67_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "2954:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 123,
													"indexExpression": {
														"id": 122,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2975:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 117,
												"id": 124,
												"nodeType": "Return",
												"src": "2947:36:1"
											}
										]
									},
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2871:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 110,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2885:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:1"
									},
									"scope": 341,
									"src": "2854:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "3255:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 133,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3276:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 134,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "3282:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 132,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															139,
															160
														],
														"referencedDeclaration": 160,
														"src": "3265:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3219:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:1"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 341,
									"src": "3199:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "3505:124:1",
										"statements": [
											{
												"condition": {
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 148,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "3528:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 149,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 144,
																"src": "3534:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 147,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3515:108:1",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3544:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 153,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 144,
																		"src": "3598:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 154,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "3607:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 152,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 351,
																	"src": "3565:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3558:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3452:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "3466:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:1"
									},
									"scope": 341,
									"src": "3432:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										399
									],
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "3884:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 168,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3901:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 170,
														"indexExpression": {
															"id": 169,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "3908:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$67_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 66,
													"src": "3901:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 167,
												"id": 172,
												"nodeType": "Return",
												"src": "3894:29:1"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3832:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 162,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "3875:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 165,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:1"
									},
									"scope": 341,
									"src": "3810:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										407
									],
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "4320:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 188,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4341:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 189,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "4347:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "4330:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 191,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:1"
											}
										]
									},
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 183,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "4313:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 182,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4300:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 181,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "4291:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4245:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 176,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "4259:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:1"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:1"
									},
									"scope": 341,
									"src": "4226:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										415
									],
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "4737:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "4759:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 208,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "4765:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 206,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "4747:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:1"
											}
										]
									},
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 202,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "4730:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 201,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "4717:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 204,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 200,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "4708:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "4662:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 195,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "4676:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:1"
									},
									"scope": 341,
									"src": "4642:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										423
									],
									"body": {
										"id": 234,
										"nodeType": "Block",
										"src": "5407:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 220,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "5421:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 221,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "5443:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 228,
												"nodeType": "IfStatement",
												"src": "5417:102:1",
												"trueBody": {
													"id": 227,
													"nodeType": "Block",
													"src": "5457:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 224,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "5478:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 226,
															"nodeType": "RevertStatement",
															"src": "5471:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 230,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "5541:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 231,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "5547:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 229,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "5529:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:1"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5350:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 214,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "5364:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:1"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:1"
									},
									"scope": 341,
									"src": "5328:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 262,
										"nodeType": "Block",
										"src": "5771:174:1",
										"statements": [
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 262,
														"src": "5781:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 243,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 248,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "5822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 245,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "5809:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:1"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 249,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "5837:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 251,
															"indexExpression": {
																"id": 250,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 238,
																"src": "5844:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$67_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 66,
														"src": "5837:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 253,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "5862:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 257,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "5903:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 258,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "5909:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 259,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "5928:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 256,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "5886:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "EmitStatement",
												"src": "5881:57:1"
											}
										]
									},
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5721:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 237,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "5735:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 239,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:1"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:1"
									},
									"scope": 341,
									"src": "5698:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "6262:233:1",
										"statements": [
											{
												"condition": {
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 274,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "6285:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 275,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "6291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 273,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "6277:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 276,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "6452:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 272,
															"id": 298,
															"nodeType": "Return",
															"src": "6466:12:1"
														}
													]
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "6272:217:1",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "6301:145:1",
													"statements": [
														{
															"expression": {
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 278,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "6315:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 280,
																			"indexExpression": {
																				"id": 279,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 266,
																				"src": "6322:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$67_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "6315:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 283,
																	"indexExpression": {
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "6336:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 286,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 288,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "6382:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 289,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "6388:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 290,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "6397:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 287,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 372,
																	"src": "6370:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 293,
															"nodeType": "EmitStatement",
															"src": "6365:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 272,
															"id": 295,
															"nodeType": "Return",
															"src": "6424:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "6199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 265,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "6213:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:1"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "6256:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:1"
									},
									"scope": 341,
									"src": "6179:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "6814:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 313,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6836:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 314,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "6842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 312,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "6828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 337,
													"nodeType": "Block",
													"src": "7004:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 311,
															"id": 336,
															"nodeType": "Return",
															"src": "7018:12:1"
														}
													]
												},
												"id": 338,
												"nodeType": "IfStatement",
												"src": "6824:217:1",
												"trueBody": {
													"id": 334,
													"nodeType": "Block",
													"src": "6852:146:1",
													"statements": [
														{
															"expression": {
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 316,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 72,
																				"src": "6866:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$67_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 318,
																			"indexExpression": {
																				"id": 317,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 305,
																				"src": "6873:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$67_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 64,
																		"src": "6866:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 321,
																	"indexExpression": {
																		"id": 320,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "6887:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 324,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 326,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "6934:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 327,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 307,
																		"src": "6940:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 328,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "6949:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 325,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 381,
																	"src": "6922:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 331,
															"nodeType": "EmitStatement",
															"src": "6917:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 311,
															"id": 333,
															"nodeType": "Return",
															"src": "6976:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:1",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "6751:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 304,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "6765:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "6808:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:1"
									},
									"scope": 341,
									"src": "6730:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 342,
							"src": "1953:5096:1",
							"usedErrors": [
								351,
								354
							],
							"usedEvents": [
								363,
								372,
								381
							]
						}
					],
					"src": "108:6942:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.2.0/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							424
						]
					},
					"id": 425,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 344,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 424,
							"linearizedBaseContracts": [
								424
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 351,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 354,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 363,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 358,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 372,
									"name": "RoleGranted",
									"nameLocation": "1277:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1289:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1311:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "1336:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:2"
									},
									"src": "1271:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 381,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1664:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 374,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1686:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "1711:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:2"
									},
									"src": "1646:89:2"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 391,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 383,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:2"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "1893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:2"
									},
									"scope": 424,
									"src": "1822:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 399,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2116:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 393,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2153:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 396,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:2"
									},
									"scope": 424,
									"src": "2094:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2431:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 401,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "2445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 424,
									"src": "2412:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2725:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 409,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2739:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:2"
									},
									"scope": 424,
									"src": "2705:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 417,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "3303:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:2"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:2"
									},
									"scope": 424,
									"src": "3267:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 425,
							"src": "226:3116:2",
							"usedErrors": [
								351,
								354
							],
							"usedEvents": [
								363,
								372,
								381
							]
						}
					],
					"src": "109:3234:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.2.0/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1358
						],
						"Ownable": [
							572
						]
					},
					"id": 573,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 426,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 428,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 573,
							"sourceUnit": 1359,
							"src": "128:45:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 427,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1358,
										"src": "136:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 430,
										"name": "Context",
										"nameLocations": [
											"692:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1358,
										"src": "692:7:3"
									},
									"id": 431,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:3"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 429,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:3",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 572,
							"linearizedBaseContracts": [
								572,
								1358
							],
							"name": "Ownable",
							"nameLocation": "681:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:3",
									"nodeType": "VariableDeclaration",
									"scope": 572,
									"src": "706:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 432,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:3",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 438,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "858:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:3"
									},
									"src": "825:50:3"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:3",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 443,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:3"
									},
									"src": "968:41:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 449,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1042:29:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1073:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 446,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:3"
									},
									"src": "1015:84:3"
								},
								{
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "1259:153:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 455,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "1273:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 456,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 469,
												"nodeType": "IfStatement",
												"src": "1269:95:3",
												"trueBody": {
													"id": 468,
													"nodeType": "Block",
													"src": "1301:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 464,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 463,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 462,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 461,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "1322:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 467,
															"nodeType": "RevertStatement",
															"src": "1315:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 471,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "1392:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 470,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "1373:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:3"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:3",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 475,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1237:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:3"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:3"
									},
									"scope": 572,
									"src": "1225:187:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "1521:41:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 509,
														"src": "1531:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:3"
											},
											{
												"id": 481,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:3"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:3",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 483,
									"name": "onlyOwner",
									"nameLocation": "1509:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:3"
									},
									"src": "1500:62:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "1693:30:3",
										"statements": [
											{
												"expression": {
													"id": 489,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 433,
													"src": "1710:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 488,
												"id": 490,
												"nodeType": "Return",
												"src": "1703:13:3"
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:3",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "1684:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:3"
									},
									"scope": 572,
									"src": "1638:85:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1841:117:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 496,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "1855:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 498,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "1866:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 507,
												"nodeType": "IfStatement",
												"src": "1851:101:3",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "1880:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 502,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1340,
																			"src": "1928:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 501,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 438,
																	"src": "1901:26:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 505,
															"nodeType": "RevertStatement",
															"src": "1894:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:3",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 509,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:3"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:3"
									},
									"scope": 572,
									"src": "1796:162:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "2347:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 515,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2357:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:3"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:3",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 513,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 512,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 483,
												"src": "2337:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:3"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:3"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:3"
									},
									"scope": 572,
									"src": "2293:101:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "2613:145:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 531,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2627:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 532,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "2623:91:3",
												"trueBody": {
													"id": 544,
													"nodeType": "Block",
													"src": "2651:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 538,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 537,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 443,
																	"src": "2672:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 543,
															"nodeType": "RevertStatement",
															"src": "2665:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 547,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2742:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 546,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 571,
														"src": "2723:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:3"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 529,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 528,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 483,
												"src": "2603:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "2570:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:3"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:3"
									},
									"scope": 572,
									"src": "2543:215:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 570,
										"nodeType": "Block",
										"src": "2975:124:3",
										"statements": [
											{
												"assignments": [
													558
												],
												"declarations": [
													{
														"constant": false,
														"id": 558,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 570,
														"src": "2985:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 557,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"id": 559,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 433,
													"src": "3004:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:3"
											},
											{
												"expression": {
													"id": 563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 561,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "3020:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 562,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 554,
														"src": "3029:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 564,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 566,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "3073:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 554,
															"src": "3083:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 565,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "3052:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "EmitStatement",
												"src": "3047:45:3"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:3",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 571,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "2940:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:3"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:3"
									},
									"scope": 572,
									"src": "2912:187:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 573,
							"src": "663:2438:3",
							"usedErrors": [
								438,
								443
							],
							"usedEvents": [
								449
							]
						}
					],
					"src": "102:3000:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							709
						],
						"IERC20Errors": [
							614
						],
						"IERC721Errors": [
							662
						]
					},
					"id": 710,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 574,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 575,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 614,
							"linearizedBaseContracts": [
								614
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 584,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 589,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 594,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 603,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 608,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 613,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 710,
							"src": "280:1764:4",
							"usedErrors": [
								584,
								589,
								594,
								603,
								608,
								613
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 615,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 620,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 625,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 634,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 639,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 644,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 651,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 656,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 661,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 710,
							"src": "2190:2092:4",
							"usedErrors": [
								620,
								625,
								634,
								639,
								644,
								651,
								656,
								661
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 663,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 709,
							"linearizedBaseContracts": [
								709
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 674,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 679,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 684,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 691,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 696,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 701,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 708,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 710,
							"src": "4430:2107:4",
							"usedErrors": [
								674,
								679,
								684,
								691,
								696,
								701,
								708
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1358
						],
						"ERC20": [
							1224
						],
						"IERC20": [
							1302
						],
						"IERC20Errors": [
							614
						],
						"IERC20Metadata": [
							1328
						]
					},
					"id": 1225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 711,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 1303,
							"src": "131:36:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 712,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1302,
										"src": "139:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 715,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 1329,
							"src": "168:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 714,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1328,
										"src": "176:14:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 717,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 1359,
							"src": "232:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 716,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1358,
										"src": "240:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 719,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 710,
							"src": "281:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 718,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 614,
										"src": "289:12:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 721,
										"name": "Context",
										"nameLocations": [
											"1133:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1358,
										"src": "1133:7:5"
									},
									"id": 722,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:5"
								},
								{
									"baseName": {
										"id": 723,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1302,
										"src": "1142:6:5"
									},
									"id": 724,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:5"
								},
								{
									"baseName": {
										"id": 725,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "1150:14:5"
									},
									"id": 726,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:5"
								},
								{
									"baseName": {
										"id": 727,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 614,
										"src": "1166:12:5"
									},
									"id": 728,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:5"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 720,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:5",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1224,
							"linearizedBaseContracts": [
								1224,
								614,
								1328,
								1302,
								1358
							],
							"name": "ERC20",
							"nameLocation": "1124:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 732,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "1185:53:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 731,
										"keyName": "account",
										"keyNameLocation": "1201:7:5",
										"keyType": {
											"id": 729,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 730,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 738,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "1245:83:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 737,
										"keyName": "account",
										"keyNameLocation": "1261:7:5",
										"keyType": {
											"id": 733,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 736,
											"keyName": "spender",
											"keyNameLocation": "1288:7:5",
											"keyType": {
												"id": 734,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 735,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 740,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "1335:28:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 739,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 742,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "1370:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 741,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 744,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1224,
									"src": "1396:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 743,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "1657:57:5",
										"statements": [
											{
												"expression": {
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 752,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "1667:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 753,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:5"
											},
											{
												"expression": {
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 756,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "1690:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 757,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "1700:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:5"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:5",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 761,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1613:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 746,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1634:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:5"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:5"
									},
									"scope": 1224,
									"src": "1601:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1315
									],
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "1839:29:5",
										"statements": [
											{
												"expression": {
													"id": 767,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 742,
													"src": "1856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 766,
												"id": 768,
												"nodeType": "Return",
												"src": "1849:12:5"
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:5"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "1824:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:5"
									},
									"scope": 1224,
									"src": "1779:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1321
									],
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "2043:31:5",
										"statements": [
											{
												"expression": {
													"id": 776,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 744,
													"src": "2060:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 775,
												"id": 777,
												"nodeType": "Return",
												"src": "2053:14:5"
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:5",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:5"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "2028:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 773,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:5"
									},
									"scope": 1224,
									"src": "1981:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "2763:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 784,
												"id": 786,
												"nodeType": "Return",
												"src": "2773:9:5"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:5",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:5"
									},
									"returnParameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "2756:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 782,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:5"
									},
									"scope": 1224,
									"src": "2707:82:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1251
									],
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "2910:36:5",
										"statements": [
											{
												"expression": {
													"id": 794,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 740,
													"src": "2927:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 793,
												"id": 795,
												"nodeType": "Return",
												"src": "2920:19:5"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:5",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:5"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "2901:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:5"
									},
									"scope": 1224,
									"src": "2849:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1259
									],
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "3078:42:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 805,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "3095:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 807,
													"indexExpression": {
														"id": 806,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 800,
														"src": "3105:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 804,
												"id": 808,
												"nodeType": "Return",
												"src": "3088:25:5"
											}
										]
									},
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:5",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:5"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "3069:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:5"
									},
									"scope": 1224,
									"src": "3004:116:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "3390:103:5",
										"statements": [
											{
												"assignments": [
													821
												],
												"declarations": [
													{
														"constant": false,
														"id": 821,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "3400:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 820,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 824,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "3416:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 826,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 821,
															"src": "3448:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 827,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "3455:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 828,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "3459:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 825,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "3438:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 830,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 819,
												"id": 832,
												"nodeType": "Return",
												"src": "3475:11:5"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:5",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "3333:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "3345:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 814,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:5"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "3384:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:5"
									},
									"scope": 1224,
									"src": "3315:178:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1279
									],
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "3640:51:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 844,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "3657:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 846,
														"indexExpression": {
															"id": 845,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "3669:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 848,
													"indexExpression": {
														"id": 847,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "3676:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 843,
												"id": 849,
												"nodeType": "Return",
												"src": "3650:34:5"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:5",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3570:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3585:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:5"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "3631:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:5"
									},
									"scope": 1224,
									"src": "3551:140:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1289
									],
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "4077:107:5",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "4087:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 861,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "4103:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "4134:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "4141:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "4150:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1115,
															1175
														],
														"referencedDeclaration": 1115,
														"src": "4125:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 860,
												"id": 873,
												"nodeType": "Return",
												"src": "4166:11:5"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:5",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4015:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4032:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "4071:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:5"
									},
									"scope": 1224,
									"src": "3998:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1301
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "4869:151:5",
										"statements": [
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "4879:15:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 887,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 889,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "4897:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4935:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "4941:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "4950:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1223,
														"src": "4919:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "4976:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "4982:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "4986:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "4966:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:5"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 886,
												"id": 905,
												"nodeType": "Return",
												"src": "5002:11:5"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:5",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "4798:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "4812:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "4824:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:5"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "4863:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:5"
									},
									"scope": 1224,
									"src": "4776:244:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "5462:231:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "5476:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "5472:86:5",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "5496:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 924,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 923,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5517:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 929,
															"nodeType": "RevertStatement",
															"src": "5510:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "5571:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 933,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"nodeType": "IfStatement",
												"src": "5567:86:5",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "5589:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 939,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 938,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "5610:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 944,
															"nodeType": "RevertStatement",
															"src": "5603:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 948,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "5670:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "5676:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "5680:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 947,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "5662:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:5"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "5412:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "5426:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "5438:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:5"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:5"
									},
									"scope": 1224,
									"src": "5393:300:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "6083:1032:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 964,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "6097:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 965,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "6271:362:5",
													"statements": [
														{
															"assignments": [
																976
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 976,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 1001,
																	"src": "6285:19:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 975,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 980,
															"initialValue": {
																"baseExpression": {
																	"id": 977,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "6307:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 979,
																"indexExpression": {
																	"id": 978,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "6317:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:5"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 981,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "6340:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "6354:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 991,
															"nodeType": "IfStatement",
															"src": "6336:115:5",
															"trueBody": {
																"id": 990,
																"nodeType": "Block",
																"src": "6361:90:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 985,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "6411:4:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 986,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "6417:11:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 987,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 961,
																					"src": "6430:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 984,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 584,
																				"src": "6386:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 989,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:5"
																	}
																]
															}
														},
														{
															"id": 1000,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:5",
															"statements": [
																{
																	"expression": {
																		"id": 998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 992,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 732,
																				"src": "6571:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 994,
																			"indexExpression": {
																				"id": 993,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "6581:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 995,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "6589:11:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 996,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "6603:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 999,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:5"
																}
															]
														}
													]
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "6093:540:5",
												"trueBody": {
													"id": 974,
													"nodeType": "Block",
													"src": "6117:148:5",
													"statements": [
														{
															"expression": {
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 970,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 740,
																	"src": "6233:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 971,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "6249:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 973,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1003,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "6647:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1004,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1022,
													"nodeType": "Block",
													"src": "6862:206:5",
													"statements": [
														{
															"id": 1021,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:5",
															"statements": [
																{
																	"expression": {
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1015,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 732,
																				"src": "7021:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1017,
																			"indexExpression": {
																				"id": 1016,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "7031:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1018,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "7038:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1020,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:5"
																}
															]
														}
													]
												},
												"id": 1023,
												"nodeType": "IfStatement",
												"src": "6643:425:5",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "6665:191:5",
													"statements": [
														{
															"id": 1013,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:5",
															"statements": [
																{
																	"expression": {
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1009,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 740,
																			"src": "6810:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1010,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "6826:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1012,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:5"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1025,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "7092:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "7098:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1027,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "7102:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1024,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "7083:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1029,
												"nodeType": "EmitStatement",
												"src": "7078:30:5"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:5",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "6025:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "6039:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "6051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:5"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:5"
									},
									"scope": 1224,
									"src": "6008:1107:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "7514:152:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1039,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "7528:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1040,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1043,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1053,
												"nodeType": "IfStatement",
												"src": "7524:91:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "7551:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1048,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1046,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1045,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7572:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1051,
															"nodeType": "RevertStatement",
															"src": "7565:39:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1055,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "7644:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "7653:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1054,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "7624:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1062,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:5"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:5",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "7473:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "7490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:5"
									},
									"returnParameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:5"
									},
									"scope": 1224,
									"src": "7458:208:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "8040:150:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1072,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "8054:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1073,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1086,
												"nodeType": "IfStatement",
												"src": "8050:89:5",
												"trueBody": {
													"id": 1085,
													"nodeType": "Block",
													"src": "8077:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1081,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1080,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1079,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1078,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "8098:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1084,
															"nodeType": "RevertStatement",
															"src": "8091:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1088,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "8156:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1089,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1093,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "8177:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1087,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "8148:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:5"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:5",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "7999:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "8016:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:5"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:5"
									},
									"scope": 1224,
									"src": "7984:206:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "8800:54:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1108,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "8819:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "8826:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1110,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1104,
															"src": "8835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1107,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1115,
															1175
														],
														"referencedDeclaration": 1175,
														"src": "8810:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:5"
											}
										]
									},
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:5",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "8744:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "8759:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "8776:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:5"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:5"
									},
									"scope": 1224,
									"src": "8726:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "9799:334:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1127,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1118,
														"src": "9813:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1128,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "9809:89:5",
												"trueBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "9834:64:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1134,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1133,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "9855:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1139,
															"nodeType": "RevertStatement",
															"src": "9848:39:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "9911:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1143,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1146,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1156,
												"nodeType": "IfStatement",
												"src": "9907:90:5",
												"trueBody": {
													"id": 1155,
													"nodeType": "Block",
													"src": "9934:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1150,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1149,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1148,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "9955:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1154,
															"nodeType": "RevertStatement",
															"src": "9948:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1157,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "10006:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1160,
															"indexExpression": {
																"id": 1158,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1118,
																"src": "10018:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1161,
														"indexExpression": {
															"id": 1159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1120,
															"src": "10025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1162,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "10036:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:5"
											},
											{
												"condition": {
													"id": 1165,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1124,
													"src": "10055:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1173,
												"nodeType": "IfStatement",
												"src": "10051:76:5",
												"trueBody": {
													"id": 1172,
													"nodeType": "Block",
													"src": "10066:61:5",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1167,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1118,
																		"src": "10094:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1168,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1120,
																		"src": "10101:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1169,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "10110:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1166,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1245,
																	"src": "10085:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1171,
															"nodeType": "EmitStatement",
															"src": "10080:36:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:5",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "9719:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "9734:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "9751:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "9766:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:5"
									},
									"scope": 1224,
									"src": "9701:432:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "10504:387:5",
										"statements": [
											{
												"assignments": [
													1186
												],
												"declarations": [
													{
														"constant": false,
														"id": 1186,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:5",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "10514:24:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1185,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1191,
												"initialValue": {
													"arguments": [
														{
															"id": 1188,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "10551:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1189,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "10558:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1187,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "10541:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1192,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "10580:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1194,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:5",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1193,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:5",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1221,
												"nodeType": "IfStatement",
												"src": "10576:309:5",
												"trueBody": {
													"id": 1220,
													"nodeType": "Block",
													"src": "10618:267:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1199,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "10636:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1182,
																	"src": "10655:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1209,
															"nodeType": "IfStatement",
															"src": "10632:130:5",
															"trueBody": {
																"id": 1208,
																"nodeType": "Block",
																"src": "10662:100:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1203,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "10714:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1204,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1186,
																					"src": "10723:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1205,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "10741:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1202,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 603,
																				"src": "10687:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1207,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:5"
																	}
																]
															}
														},
														{
															"id": 1219,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:5",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1211,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1178,
																				"src": "10812:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1212,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "10819:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1213,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1186,
																					"src": "10828:16:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1214,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1182,
																					"src": "10847:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1216,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1210,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1115,
																				1175
																			],
																			"referencedDeclaration": 1175,
																			"src": "10803:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1218,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:5"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:5",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "10440:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "10455:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "10472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:5"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:5"
									},
									"scope": 1224,
									"src": "10415:476:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1225,
							"src": "1106:9787:5",
							"usedErrors": [
								584,
								589,
								594,
								603,
								608,
								613
							],
							"usedEvents": [
								1236,
								1245
							]
						}
					],
					"src": "105:10789:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1302
						]
					},
					"id": 1303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1226,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1227,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1302,
							"linearizedBaseContracts": [
								1302
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1236,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1237,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1245,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 1246,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 1302,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 1302,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1266,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 1302,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1279,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 1302,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 1302,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 1302,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1303,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								1236,
								1245
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1302
						],
						"IERC20Metadata": [
							1328
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1306,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 1303,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1305,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1302,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1308,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1302,
										"src": "306:6:7"
									},
									"id": 1309,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1307,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								1302
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1315,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1328,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1321,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1328,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1324,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1328,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1329,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								1236,
								1245
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@5.2.0/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1358
						]
					},
					"id": 1359,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1331,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1358,
							"linearizedBaseContracts": [
								1358
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1336,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1338,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1358,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1345,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1344,
												"id": 1347,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1358,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1353,
												"id": 1355,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1358,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1359,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1382
						],
						"IERC165": [
							1394
						]
					},
					"id": 1383,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1360,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1362,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1383,
							"sourceUnit": 1395,
							"src": "140:38:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1361,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1394,
										"src": "148:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1364,
										"name": "IERC165",
										"nameLocations": [
											"688:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1394,
										"src": "688:7:9"
									},
									"id": 1365,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:9"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1363,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:9",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1382,
							"linearizedBaseContracts": [
								1382,
								1394
							],
							"name": "ERC165",
							"nameLocation": "678:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1393
									],
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "845:64:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1373,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "862:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1375,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "882:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1394_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1394_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1374,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1394",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:9",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1372,
												"id": 1379,
												"nodeType": "Return",
												"src": "855:47:9"
											}
										]
									},
									"documentation": {
										"id": 1366,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:9",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "790:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1367,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:9"
									},
									"returnParameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "839:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:9"
									},
									"scope": 1382,
									"src": "763:146:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1383,
							"src": "660:251:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.2.0/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1394
						]
					},
					"id": 1395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1384,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1385,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1394,
							"linearizedBaseContracts": [
								1394
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1387,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1394,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1395,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"contracts/MyERC20.sol": {
				"ast": {
					"absolutePath": "contracts/MyERC20.sol",
					"exportedSymbols": {
						"AccessControl": [
							341
						],
						"ERC20": [
							1224
						],
						"MyERC20": [
							1446
						]
					},
					"id": 1447,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts@5.2.0/token/ERC20/ERC20.sol",
							"id": 1398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 1225,
							"src": "61:74:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1397,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1224,
										"src": "69:5:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/access/AccessControl.sol",
							"file": "@openzeppelin/contracts@5.2.0/access/AccessControl.sol",
							"id": 1400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1447,
							"sourceUnit": 342,
							"src": "137:85:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1399,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 341,
										"src": "145:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1401,
										"name": "ERC20",
										"nameLocations": [
											"246:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "246:5:11"
									},
									"id": 1402,
									"nodeType": "InheritanceSpecifier",
									"src": "246:5:11"
								},
								{
									"baseName": {
										"id": 1403,
										"name": "AccessControl",
										"nameLocations": [
											"253:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 341,
										"src": "253:13:11"
									},
									"id": 1404,
									"nodeType": "InheritanceSpecifier",
									"src": "253:13:11"
								}
							],
							"canonicalName": "MyERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1446,
							"linearizedBaseContracts": [
								1446,
								341,
								1382,
								1394,
								424,
								1224,
								614,
								1328,
								1302,
								1358
							],
							"name": "MyERC20",
							"nameLocation": "235:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1409,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "297:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1446,
									"src": "273:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1405,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1407,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "321:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1406,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "311:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1408,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "311:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "394:111:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1417,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "416:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1418,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "436:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "440:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "436:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1416,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "405:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "405:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1421,
												"nodeType": "ExpressionStatement",
												"src": "405:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1423,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "469:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1424,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "482:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "486:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "482:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1422,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "458:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "458:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1427,
												"nodeType": "ExpressionStatement",
												"src": "458:35:11"
											}
										]
									},
									"id": 1429,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d792043796672696e20434c4620546f6b656e",
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "364:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7d7161d9b296690d2e16ead541a29d460f53507d8d4c58db8474410ace804cb3",
														"typeString": "literal_string \"My Cyfrin CLF Token\""
													},
													"value": "My Cyfrin CLF Token"
												},
												{
													"hexValue": "434c46",
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "387:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b88867bd09259457fa4f01c6b5b4dfc55ec2619e60cd794051d0323ac9675b2b",
														"typeString": "literal_string \"CLF\""
													},
													"value": "CLF"
												}
											],
											"id": 1414,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1411,
												"name": "ERC20",
												"nameLocations": [
													"358:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1224,
												"src": "358:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "358:35:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "355:2:11"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:0:11"
									},
									"scope": 1446,
									"src": "344:161:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "584:36:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1440,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "601:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "605:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1439,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "595:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "595:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1443,
												"nodeType": "ExpressionStatement",
												"src": "595:17:11"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1436,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1409,
													"src": "571:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1437,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1435,
												"name": "onlyRole",
												"nameLocations": [
													"562:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 86,
												"src": "562:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "562:21:11"
										}
									],
									"name": "mint",
									"nameLocation": "522:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "535:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "527:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "547:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "539:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "539:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "526:28:11"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "584:0:11"
									},
									"scope": 1446,
									"src": "513:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1447,
							"src": "226:397:11",
							"usedErrors": [
								351,
								354,
								584,
								589,
								594,
								603,
								608,
								613
							],
							"usedEvents": [
								363,
								372,
								381,
								1236,
								1245
							]
						}
					],
					"src": "33:590:11"
				},
				"id": 11
			},
			"contracts/TokenShop.sol": {
				"ast": {
					"absolutePath": "contracts/TokenShop.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"MyERC20": [
							1446
						],
						"Ownable": [
							572
						],
						"TokenShop": [
							1612
						]
					},
					"id": 1613,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1448,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts@1.3.0/src/v0.8/shared/interfaces/AggregatorV3Interface.sol",
							"id": 1450,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1613,
							"sourceUnit": 46,
							"src": "61:118:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1449,
										"name": "AggregatorV3Interface",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 45,
										"src": "69:21:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.2.0/access/Ownable.sol",
							"file": "@openzeppelin/contracts@5.2.0/access/Ownable.sol",
							"id": 1452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1613,
							"sourceUnit": 573,
							"src": "181:73:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1451,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 572,
										"src": "189:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/MyERC20.sol",
							"file": "./MyERC20.sol",
							"id": 1454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1613,
							"sourceUnit": 1447,
							"src": "256:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1453,
										"name": "MyERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1446,
										"src": "264:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1455,
										"name": "Ownable",
										"nameLocations": [
											"320:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 572,
										"src": "320:7:12"
									},
									"id": 1456,
									"nodeType": "InheritanceSpecifier",
									"src": "320:7:12"
								}
							],
							"canonicalName": "TokenShop",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1612,
							"linearizedBaseContracts": [
								1612,
								572,
								1358
							],
							"name": "TokenShop",
							"nameLocation": "307:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1459,
									"mutability": "immutable",
									"name": "i_priceFeed",
									"nameLocation": "378:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1612,
									"src": "337:52:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1458,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1457,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"337:21:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "337:21:12"
										},
										"referencedDeclaration": 45,
										"src": "337:21:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "9608b232",
									"id": 1462,
									"mutability": "immutable",
									"name": "i_token",
									"nameLocation": "421:7:12",
									"nodeType": "VariableDeclaration",
									"scope": 1612,
									"src": "396:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_MyERC20_$1446",
										"typeString": "contract MyERC20"
									},
									"typeName": {
										"id": 1461,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1460,
											"name": "MyERC20",
											"nameLocations": [
												"396:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1446,
											"src": "396:7:12"
										},
										"referencedDeclaration": 1446,
										"src": "396:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_MyERC20_$1446",
											"typeString": "contract MyERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5b7f415c",
									"id": 1465,
									"mutability": "constant",
									"name": "TOKEN_DECIMALS",
									"nameLocation": "461:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1612,
									"src": "437:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1463,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "437:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3138",
										"id": 1464,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "478:2:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "51b92ffe",
									"id": 1472,
									"mutability": "constant",
									"name": "TOKEN_USD_PRICE",
									"nameLocation": "511:15:12",
									"nodeType": "VariableDeclaration",
									"scope": 1612,
									"src": "487:66:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1466,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "487:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "32",
											"id": 1467,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "529:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_2_by_1",
												"typeString": "int_const 2"
											},
											"value": "2"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"id": 1470,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1468,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "533:2:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"id": 1469,
												"name": "TOKEN_DECIMALS",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1465,
												"src": "539:14:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"src": "533:20:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "529:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d7e29180ed912c1b05c7de92c52d7d4421d50c763bb288a99d28f035576eea69",
									"id": 1474,
									"name": "BalanceWithdrawn",
									"nameLocation": "594:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:2:12"
									},
									"src": "588:25:12"
								},
								{
									"errorSelector": "a45fd86c",
									"id": 1476,
									"name": "TokenShop__ZeroETHSent",
									"nameLocation": "627:22:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "649:2:12"
									},
									"src": "621:31:12"
								},
								{
									"errorSelector": "ab77f73e",
									"id": 1478,
									"name": "TokenShop__CouldNotWithdraw",
									"nameLocation": "664:27:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:12"
									},
									"src": "658:36:12"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "756:287:12",
										"statements": [
											{
												"expression": {
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1487,
														"name": "i_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "767:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MyERC20_$1446",
															"typeString": "contract MyERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1489,
																"name": "tokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "785:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1488,
															"name": "MyERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "777:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MyERC20_$1446_$",
																"typeString": "type(contract MyERC20)"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "777:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MyERC20_$1446",
															"typeString": "contract MyERC20"
														}
													},
													"src": "767:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_MyERC20_$1446",
														"typeString": "contract MyERC20"
													}
												},
												"id": 1492,
												"nodeType": "ExpressionStatement",
												"src": "767:31:12"
											},
											{
												"documentation": " Network: Sepolia\n Aggregator: ETH/USD\n Address: 0x694AA1769357215DE4FAC081bf1f309aDC325306",
												"expression": {
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1493,
														"name": "i_priceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "956:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "307836393441413137363933353732313544453446414330383162663166333039614443333235333036",
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "992:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"value": "0x694AA1769357215DE4FAC081bf1f309aDC325306"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1494,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "970:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "970:65:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "956:79:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "956:79:12"
											}
										]
									},
									"id": 1500,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "744:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "748:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "744:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1485,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1482,
												"name": "Ownable",
												"nameLocations": [
													"736:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 572,
												"src": "736:7:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "736:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "tokenAddress",
												"nameLocation": "722:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "714:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "713:22:12"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "756:0:12"
									},
									"scope": 1612,
									"src": "702:341:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "1171:249:12",
										"statements": [
											{
												"assignments": [
													null,
													1507,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1234:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1514,
														"src": "1230:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1506,
															"name": "int",
															"nodeType": "ElementaryTypeName",
															"src": "1230:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1511,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1508,
															"name": "i_priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "1360:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1372:15:12",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1360:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:29:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1182:207:12"
											},
											{
												"expression": {
													"id": 1512,
													"name": "price",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1507,
													"src": "1407:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1505,
												"id": 1513,
												"nodeType": "Return",
												"src": "1400:12:12"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "1051:44:12",
										"text": " Returns the latest answer"
									},
									"functionSelector": "bea4dfb5",
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getChainlinkDataFeedLatestAnswer",
									"nameLocation": "1110:32:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1142:2:12"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1166:3:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1503,
													"name": "int",
													"nodeType": "ElementaryTypeName",
													"src": "1166:3:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1165:5:12"
									},
									"scope": 1612,
									"src": "1101:319:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "1501:431:12",
										"statements": [
											{
												"assignments": [
													1523
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "ethUsd",
														"nameLocation": "1570:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "1562:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1522,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1562:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1533,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1526,
																	"name": "getChainlinkDataFeedLatestAnswer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1515,
																	"src": "1587:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
																		"typeString": "function () view returns (int256)"
																	}
																},
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1587:34:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1579:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1524,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1579:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1579:43:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1625:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3130",
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1631:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "1625:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000000000_by_1",
															"typeString": "int_const 10000000000"
														}
													},
													"src": "1579:54:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1562:71:12"
											},
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "ethAmountInUSD",
														"nameLocation": "1706:14:12",
														"nodeType": "VariableDeclaration",
														"scope": 1553,
														"src": "1698:22:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1698:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1536,
															"name": "amountInETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1517,
															"src": "1723:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1537,
															"name": "ethUsd",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "1737:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1723:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1746:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1752:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "1746:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "1723:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1698:56:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1544,
																	"name": "ethAmountInUSD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1535,
																	"src": "1794:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 1545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1811:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 1546,
																		"name": "TOKEN_DECIMALS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1465,
																		"src": "1817:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1811:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1794:37:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1549,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1793:39:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1550,
														"name": "TOKEN_USD_PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "1835:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1793:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1521,
												"id": 1552,
												"nodeType": "Return",
												"src": "1786:64:12"
											}
										]
									},
									"functionSelector": "098048e9",
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "amountToMint",
									"nameLocation": "1437:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "amountInETH",
												"nameLocation": "1458:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1450:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1449:21:12"
									},
									"returnParameters": {
										"id": 1521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "1492:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:9:12"
									},
									"scope": 1612,
									"src": "1428:504:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "1967:217:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1557,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2043:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2047:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2043:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2056:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2043:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1565,
												"nodeType": "IfStatement",
												"src": "2039:78:12",
												"trueBody": {
													"id": 1564,
													"nodeType": "Block",
													"src": "2059:58:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1561,
																	"name": "TokenShop__ZeroETHSent",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "2081:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2081:24:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1563,
															"nodeType": "RevertStatement",
															"src": "2074:31:12"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1569,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2140:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2144:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2140:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1572,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2165:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2169:5:12",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "2165:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1571,
																"name": "amountToMint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "2152:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2152:23:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1566,
															"name": "i_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2127:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_MyERC20_$1446",
																"typeString": "contract MyERC20"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2135:4:12",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1445,
														"src": "2127:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2127:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "2127:49:12"
											}
										]
									},
									"id": 1578,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1947:2:12"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1967:0:12"
									},
									"scope": 1612,
									"src": "1940:244:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1610,
										"nodeType": "Block",
										"src": "2231:214:12",
										"statements": [
											{
												"assignments": [
													1584,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2248:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1610,
														"src": "2243:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1583,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2243:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2313:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1587,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 492,
																			"src": "2269:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2269:7:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2261:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1585,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2261:8:12",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2261:16:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2278:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2261:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1593,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2298:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_TokenShop_$1612",
																				"typeString": "contract TokenShop"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_TokenShop_$1612",
																				"typeString": "contract TokenShop"
																			}
																		],
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2290:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1591,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2290:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2290:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2304:7:12",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2290:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2261:51:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2242:74:12"
											},
											{
												"condition": {
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2331:8:12",
													"subExpression": {
														"id": 1600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1584,
														"src": "2332:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1606,
												"nodeType": "IfStatement",
												"src": "2327:77:12",
												"trueBody": {
													"id": 1605,
													"nodeType": "Block",
													"src": "2341:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1602,
																	"name": "TokenShop__CouldNotWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "2363:27:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2363:29:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1604,
															"nodeType": "RevertStatement",
															"src": "2356:36:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1607,
														"name": "BalanceWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1474,
														"src": "2419:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2419:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "EmitStatement",
												"src": "2414:23:12"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1611,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1580,
												"name": "onlyOwner",
												"nameLocations": [
													"2221:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 483,
												"src": "2221:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:9:12"
										}
									],
									"name": "withdraw",
									"nameLocation": "2201:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2209:2:12"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2231:0:12"
									},
									"scope": 1612,
									"src": "2192:253:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1613,
							"src": "298:2150:12",
							"usedErrors": [
								438,
								443,
								1476,
								1478
							],
							"usedEvents": [
								449,
								1474
							]
						}
					],
					"src": "33:2415:12"
				},
				"id": 12
			}
		}
	}
}